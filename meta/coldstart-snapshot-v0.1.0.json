{
  "version": "v0.1.0",
  "timestamp": "2025-04-13T05:06:35.656189Z",
  "agents": [
    {
      "path": "agents-spec/reflection-agent.json",
      "name": "",
      "version": "",
      "description": "",
      "schema": ""
    },
    {
      "path": "agents-spec/scheduler-agent.json",
      "name": "",
      "version": "",
      "description": "Assigns utility scores to tasks based on agent focus, urgency, and contextual value. Builds a shared task queue.",
      "schema": ""
    },
    {
      "path": "agents-spec/audit-agent/agent-ledger.json",
      "name": "",
      "version": "",
      "description": "",
      "schema": ""
    },
    {
      "path": "agents-spec/audit-agent/agent-state.json",
      "name": "audit-agent",
      "version": "",
      "description": "",
      "schema": ""
    },
    {
      "path": "agents-spec/bootstrap-agent/agent-ledger.json",
      "name": "",
      "version": "",
      "description": "",
      "schema": ""
    },
    {
      "path": "agents-spec/bootstrap-agent/agent-metadata.json",
      "name": "bootstrap-agent",
      "version": "",
      "description": "The Bootstrap Agent is responsible for initializing and setting up the foundational components of the system. It handles initial planning, resource allocation, and basic task delegation to ensure the system starts in a well-defined state.",
      "schema": ""
    },
    {
      "path": "agents-spec/bootstrap-agent/agent-state.json",
      "name": "",
      "version": "",
      "description": "",
      "schema": ""
    },
    {
      "path": "agents-spec/evolve-agent/agent-ledger.json",
      "name": "",
      "version": "",
      "description": "",
      "schema": ""
    },
    {
      "path": "agents-spec/evolve-agent/agent-metadata.json",
      "name": "evolve-agent",
      "version": "",
      "description": "The evolve-agent is responsible for continuously improving and adapting the system's capabilities. It analyzes system performance, identifies areas for enhancement, and implements changes to improve efficiency and effectiveness.",
      "schema": ""
    },
    {
      "path": "agents-spec/evolve-agent/agent-state.json",
      "name": "evolve-agent",
      "version": "",
      "description": "",
      "schema": ""
    },
    {
      "path": "agents-spec/logger-agent/agent-ledger.json",
      "name": "logger-agent",
      "version": "",
      "description": "",
      "schema": ""
    },
    {
      "path": "agents-spec/logger-agent/agent-metadata.json",
      "name": "logger-agent",
      "version": "",
      "description": "The Logger Agent is responsible for capturing, structuring, and routing log data within the system. It ensures that all relevant activities are recorded and available for analysis, monitoring, and debugging.",
      "schema": ""
    },
    {
      "path": "agents-spec/meta-agent/agent-ledger.json",
      "name": "meta-agent",
      "version": "",
      "description": "",
      "schema": ""
    },
    {
      "path": "agents-spec/meta-agent/agent-metadata.json",
      "name": "meta-agent",
      "version": "",
      "description": "The meta-agent is responsible for overseeing the system's evolution and the coordination of other agents. It analyzes system-state and agent feedback to make high-level decisions.",
      "schema": ""
    },
    {
      "path": "agents-spec/meta-agent/agent-state.json",
      "name": "meta-agent",
      "version": "",
      "description": "",
      "schema": ""
    },
    {
      "path": "agents-spec/orchestrator-agent/agent-ledger.json",
      "name": "",
      "version": "",
      "description": "",
      "schema": ""
    },
    {
      "path": "agents-spec/orchestrator-agent/agent-metadata.json",
      "name": "orchestrator-agent",
      "version": "",
      "description": "The orchestrator-agent is responsible for managing and coordinating the activities of other agents, ensuring tasks are completed efficiently and in accordance with the overall goals of the system.",
      "schema": ""
    },
    {
      "path": "agents-spec/orchestrator-agent/agent-state.json",
      "name": "orchestrator-agent",
      "version": "",
      "description": "",
      "schema": ""
    },
    {
      "path": "agents-spec/org-agent/agent-ledger.json",
      "name": "",
      "version": "",
      "description": "",
      "schema": ""
    },
    {
      "path": "agents-spec/org-agent/agent-state.json",
      "name": "",
      "version": "",
      "description": "",
      "schema": ""
    },
    {
      "path": "agents-spec/planner-agent/agent-ledger.json",
      "name": "",
      "version": "",
      "description": "",
      "schema": ""
    },
    {
      "path": "agents-spec/planner-agent/agent-state.json",
      "name": "planner-agent",
      "version": "",
      "description": "",
      "schema": ""
    },
    {
      "path": "agents-spec/proposal-review-agent/agent-ledger.json",
      "name": "",
      "version": "",
      "description": "",
      "schema": ""
    },
    {
      "path": "agents-spec/proposal-review-agent/agent-state.json",
      "name": "proposal-review-agent",
      "version": "",
      "description": "",
      "schema": ""
    },
    {
      "path": "agents-spec/recovery-agent/agent-ledger.json",
      "name": "",
      "version": "",
      "description": "",
      "schema": ""
    },
    {
      "path": "agents-spec/recovery-agent/agent-metadata.json",
      "name": "recovery-agent",
      "version": "",
      "description": "This agent specializes in recovering from failures and ensuring system resilience. It monitors the execution of tasks and pipelines, identifies failures, and initiates recovery procedures.",
      "schema": ""
    },
    {
      "path": "agents-spec/recovery-agent/agent-state.json",
      "name": "recovery-agent",
      "version": "",
      "description": "",
      "schema": ""
    },
    {
      "path": "agents-spec/router-agent/agent-ledger.json",
      "name": "",
      "version": "",
      "description": "",
      "schema": ""
    },
    {
      "path": "agents-spec/router-agent/agent-state.json",
      "name": "router-agent",
      "version": "",
      "description": "",
      "schema": ""
    },
    {
      "path": "agents-spec/tasking-agent/agent-ledger.json",
      "name": "",
      "version": "",
      "description": "",
      "schema": ""
    },
    {
      "path": "agents-spec/tasking-agent/agent-state.json",
      "name": "tasking-agent",
      "version": "",
      "description": "",
      "schema": ""
    },
    {
      "path": "agents-spec/ux-agent/agent-state.json",
      "name": "ux-agent",
      "version": "",
      "description": "",
      "schema": ""
    },
    {
      "path": "agents-spec/voting-agent/agent-ledger.json",
      "name": "voting-agent",
      "version": "",
      "description": "",
      "schema": ""
    },
    {
      "path": "agents-spec/voting-agent/agent-state.json",
      "name": "voting-agent",
      "version": "",
      "description": "",
      "schema": ""
    },
    {
      "path": "config/agent-registry.json",
      "name": "",
      "version": "",
      "description": "",
      "schema": ""
    },
    {
      "path": "core/task-agent-check-docbot.json",
      "name": "",
      "version": "",
      "description": "Trigger docbot to review its identity, checklist, pipeline, and log findings.",
      "schema": ""
    },
    {
      "path": "core/task-agent-check-feedbacker.json",
      "name": "",
      "version": "",
      "description": "Trigger feedbacker to review its identity, checklist, pipeline, and log findings.",
      "schema": ""
    },
    {
      "path": "core/task-agent-check-forecaster.json",
      "name": "",
      "version": "",
      "description": "Trigger forecaster to review its identity, checklist, pipeline, and log findings.",
      "schema": ""
    },
    {
      "path": "core/task-agent-check-planner.json",
      "name": "",
      "version": "",
      "description": "Trigger planner to review its identity, checklist, pipeline, and log findings.",
      "schema": ""
    },
    {
      "path": "core/task-agent-check-schemaenforcer.json",
      "name": "",
      "version": "",
      "description": "Trigger schemaenforcer to review its identity, checklist, pipeline, and log findings.",
      "schema": ""
    },
    {
      "path": "core/task-agent-driven-evolution.json",
      "name": "",
      "version": "",
      "description": "Each agent proposes and applies improvements to structure, routing, and modularity using its checklist, docs, and responsibilities.",
      "schema": ""
    },
    {
      "path": "core/task-agent-identity-review.json",
      "name": "",
      "version": "",
      "description": "Agents should assume their identities, check their checklist, pipelines, links, logs, and documentation and register improvements as new tasks.",
      "schema": ""
    },
    {
      "path": "core/evaluation/calculate-agent-evolution-score.json",
      "name": "",
      "version": "",
      "description": "Evaluates agents based on past actions, reflection, and outcomes. Updates trust score.",
      "schema": ""
    },
    {
      "path": "core/tasks/task-agent-alignment-scan.json",
      "name": "",
      "version": "",
      "description": "Ensure that all agent responsibilities and pipelines align with user identity goals and checklist.",
      "schema": ""
    },
    {
      "path": "core/tasks/task-agent-goal-generation.json",
      "name": "",
      "version": "",
      "description": "Each agent reflects on logs, tasks, specs, and current state to generate meaningful next-step goals and evolution roadmap entries.",
      "schema": ""
    },
    {
      "path": "core/tasks/task-expand-longterm-agents.json",
      "name": "",
      "version": "",
      "description": "Define agents like `governor`, `resiliencebot`, `simulant`, and related checklists/pipelines.",
      "schema": ""
    },
    {
      "path": "core/tasks/task-fix-missing-core-agents.json",
      "name": "",
      "version": "",
      "description": "Auto-generate required folder to complete framework compliance.",
      "schema": ""
    },
    {
      "path": "docs/roadmap-agent-goal-proposals.json",
      "name": "",
      "version": "v15.1",
      "description": "",
      "schema": ""
    },
    {
      "path": "framework/logs/conversations/schema-agent-recommendation.json",
      "name": "",
      "version": "",
      "description": "",
      "schema": ""
    },
    {
      "path": "framework/schemas/agent-schema.json",
      "name": "",
      "version": "",
      "description": "Defines the structure for agents, their metadata, capabilities, and logs.",
      "schema": ""
    },
    {
      "path": "governance/rules/rule-agents-cannot-edit-pipeline-map.json",
      "name": "",
      "version": "",
      "description": "Agents must not self-modify the pipeline map without multi-agent consensus.",
      "schema": ""
    },
    {
      "path": "plans/agent-collab-performance-fork.json",
      "name": "",
      "version": "",
      "description": "",
      "schema": ""
    },
    {
      "path": "plans/agent-collab-plan.json",
      "name": "",
      "version": "",
      "description": "",
      "schema": ""
    },
    {
      "path": "plans/phase-12-agent-market-economy.json",
      "name": "",
      "version": "",
      "description": "Simulate agent-based task marketplaces to explore load balancing, reputation scoring, and economy-driven task prioritization using simulated tokens or weights.",
      "schema": ""
    },
    {
      "path": "plans/phase-13-agent-challenges-and-reflection.json",
      "name": "",
      "version": "",
      "description": "Introduce multi-agent challenge environments and reflection chains for adaptive reasoning.",
      "schema": ""
    },
    {
      "path": "plans/system-upgrade/agent-review-upgrade-plan-v1.json",
      "name": "",
      "version": "",
      "description": "This plan coordinates the application of improvements discovered during the agent identity and checklist audit. It includes upgrades to checklists, documentation, logs, schemas, pipelines, and governance compliance to increase long-term resilience.",
      "schema": ""
    },
    {
      "path": "schemas/agent-challenge.schema.json",
      "name": "",
      "version": "",
      "description": "",
      "schema": ""
    },
    {
      "path": "schemas/agent-evolution-score.json",
      "name": "",
      "version": "",
      "description": "",
      "schema": "agent-evolution-score"
    },
    {
      "path": "schemas/agent-marketplace.schema.json",
      "name": "",
      "version": "",
      "description": "",
      "schema": ""
    },
    {
      "path": "schemas/canonical-agent-instances.json",
      "name": "",
      "version": "",
      "description": "",
      "schema": ""
    },
    {
      "path": "schemas/canonical-agent-model-metadata.json",
      "name": "",
      "version": "v2",
      "description": "",
      "schema": ""
    },
    {
      "path": "schemas/canonical-agent-model.json",
      "name": "",
      "version": "",
      "description": "Standard schema for agents in the framework",
      "schema": ""
    },
    {
      "path": "schemas/dynamic-agent-routing.schema.json",
      "name": "",
      "version": "",
      "description": "",
      "schema": ""
    },
    {
      "path": "synthesized/synth_agents.json",
      "name": "",
      "version": "",
      "description": "",
      "schema": ""
    }
  ],
  "tasks": [
    {
      "path": "core/forecast-task-docbot.json",
      "name": "",
      "version": "",
      "description": "Forecasted task for docbot: Generate markdown docs for all identity/checklist pairs and routines.",
      "schema": ""
    },
    {
      "path": "core/forecast-task-feedbacker.json",
      "name": "",
      "version": "",
      "description": "Forecasted task for feedbacker: Create summarized sentiment analysis from execution logs.",
      "schema": ""
    },
    {
      "path": "core/forecast-task-forecaster.json",
      "name": "",
      "version": "",
      "description": "Forecasted task for forecaster: Predict saturation points for checklist density and routine collisions.",
      "schema": ""
    },
    {
      "path": "core/forecast-task-planner.json",
      "name": "",
      "version": "",
      "description": "Forecasted task for planner: Introduce phase-aware scheduling of agents and register Gantt-style timeline.",
      "schema": ""
    },
    {
      "path": "core/forecast-task-schemaenforcer.json",
      "name": "",
      "version": "",
      "description": "Forecasted task for schemaenforcer: Add changelog tracking for schema drift detection and enforce auto-patches.",
      "schema": ""
    },
    {
      "path": "core/task-agent-check-docbot.json",
      "name": "",
      "version": "",
      "description": "Trigger docbot to review its identity, checklist, pipeline, and log findings.",
      "schema": ""
    },
    {
      "path": "core/task-agent-check-feedbacker.json",
      "name": "",
      "version": "",
      "description": "Trigger feedbacker to review its identity, checklist, pipeline, and log findings.",
      "schema": ""
    },
    {
      "path": "core/task-agent-check-forecaster.json",
      "name": "",
      "version": "",
      "description": "Trigger forecaster to review its identity, checklist, pipeline, and log findings.",
      "schema": ""
    },
    {
      "path": "core/task-agent-check-planner.json",
      "name": "",
      "version": "",
      "description": "Trigger planner to review its identity, checklist, pipeline, and log findings.",
      "schema": ""
    },
    {
      "path": "core/task-agent-check-schemaenforcer.json",
      "name": "",
      "version": "",
      "description": "Trigger schemaenforcer to review its identity, checklist, pipeline, and log findings.",
      "schema": ""
    },
    {
      "path": "core/task-agent-driven-evolution.json",
      "name": "",
      "version": "",
      "description": "Each agent proposes and applies improvements to structure, routing, and modularity using its checklist, docs, and responsibilities.",
      "schema": ""
    },
    {
      "path": "core/task-agent-identity-review.json",
      "name": "",
      "version": "",
      "description": "Agents should assume their identities, check their checklist, pipelines, links, logs, and documentation and register improvements as new tasks.",
      "schema": ""
    },
    {
      "path": "core/task-bootstrap-and-memory-loading.json",
      "name": "",
      "version": "",
      "description": "Load full project tree and file contents into memory. Use memory bank, agents, pipelines, routines, logs, and tasks to understand the system structure.",
      "schema": ""
    },
    {
      "path": "core/task-feature-ref-linking.json",
      "name": "",
      "version": "",
      "description": "Patch and validate that all features (agents, memory bank, pipelines, etc.) are linked in the project files for discoverability and LLM-friendly routing.",
      "schema": ""
    },
    {
      "path": "core/task-full-system-audit.json",
      "name": "",
      "version": "",
      "description": "Each agent assumes its identity and verifies checklists, docs, logs, routines, pipelines, and specs.",
      "schema": ""
    },
    {
      "path": "core/task-global-resilience-audit.json",
      "name": "",
      "version": "",
      "description": "Audit all project folders and files, ensure metadata, versioning, identities, checklists, and logs are correctly linked and documented. Register recovery tasks to enforce long-term resilience.",
      "schema": ""
    },
    {
      "path": "core/task-ongoing-validation-cycle.json",
      "name": "",
      "version": "",
      "description": "Read all memory tasks and allow agents to assume identity, filter by their capabilities and execute in order, registering output in logs and memory.",
      "schema": ""
    },
    {
      "path": "core/task-restructure-root-layout.json",
      "name": "",
      "version": "",
      "description": "Refactor file organization and routing to reduce clutter in the root directory. Group related files under clean subfolders and improve maintainability.",
      "schema": ""
    },
    {
      "path": "core/task-runtime-scale-docbot.json",
      "name": "",
      "version": "",
      "description": "Begin preparing agent runtime orchestration logic.",
      "schema": ""
    },
    {
      "path": "core/task-runtime-scale-feedbacker.json",
      "name": "",
      "version": "",
      "description": "Begin preparing agent runtime orchestration logic.",
      "schema": ""
    },
    {
      "path": "core/task-runtime-scale-forecaster.json",
      "name": "",
      "version": "",
      "description": "Begin preparing agent runtime orchestration logic.",
      "schema": ""
    },
    {
      "path": "core/task-runtime-scale-planner.json",
      "name": "",
      "version": "",
      "description": "Begin preparing agent runtime orchestration logic.",
      "schema": ""
    },
    {
      "path": "core/task-runtime-scale-schemaenforcer.json",
      "name": "",
      "version": "",
      "description": "Begin preparing agent runtime orchestration logic.",
      "schema": ""
    },
    {
      "path": "core/task-seed-docbot-phase-task.json",
      "name": "",
      "version": "",
      "description": "docbot prepares for next operational roadmap cycle.",
      "schema": ""
    },
    {
      "path": "core/task-seed-feedbacker-phase-task.json",
      "name": "",
      "version": "",
      "description": "feedbacker prepares for next operational roadmap cycle.",
      "schema": ""
    },
    {
      "path": "core/task-seed-forecaster-phase-task.json",
      "name": "",
      "version": "",
      "description": "forecaster prepares for next operational roadmap cycle.",
      "schema": ""
    },
    {
      "path": "core/task-seed-planner-phase-task.json",
      "name": "",
      "version": "",
      "description": "planner prepares for next operational roadmap cycle.",
      "schema": ""
    },
    {
      "path": "core/task-seed-schemaenforcer-phase-task.json",
      "name": "",
      "version": "",
      "description": "schemaenforcer prepares for next operational roadmap cycle.",
      "schema": ""
    },
    {
      "path": "core/task-simulate-zone-relay.json",
      "name": "",
      "version": "",
      "description": "Test how messages from one zone propagate to another using shared_memory and subscriptions.",
      "schema": ""
    },
    {
      "path": "core/task-task-tbd.json",
      "name": "",
      "version": "",
      "description": "TBD",
      "schema": ""
    },
    {
      "path": "core/tasks/task-agent-alignment-scan.json",
      "name": "",
      "version": "",
      "description": "Ensure that all agent responsibilities and pipelines align with user identity goals and checklist.",
      "schema": ""
    },
    {
      "path": "core/tasks/task-agent-goal-generation.json",
      "name": "",
      "version": "",
      "description": "Each agent reflects on logs, tasks, specs, and current state to generate meaningful next-step goals and evolution roadmap entries.",
      "schema": ""
    },
    {
      "path": "core/tasks/task-audit-v21-before-v22.json",
      "name": "",
      "version": "",
      "description": "Trigger pipeline+checklist+routine audits to confirm everything is valid and ready for v22.",
      "schema": ""
    },
    {
      "path": "core/tasks/task-begin-v23-cycle.json",
      "name": "",
      "version": "",
      "description": "Initialize v23 intents and execution roadmap from recent audits and improvements.",
      "schema": ""
    },
    {
      "path": "core/tasks/task-continuous-evolution-cycle.json",
      "name": "",
      "version": "",
      "description": "Let agents self-generate, prioritize, and execute future iterations of framework improvements based on logs, state, and feedback.",
      "schema": ""
    },
    {
      "path": "core/tasks/task-create-pipeline-folder.json",
      "name": "",
      "version": "",
      "description": "Ensure pipelines folder exists so agents can run their orchestration triggers.",
      "schema": ""
    },
    {
      "path": "core/tasks/task-discovery-intent-cycle.json",
      "name": "",
      "version": "",
      "description": "Let agents propose and align around the next major phase based on internal memory, logs, and feature growth.",
      "schema": ""
    },
    {
      "path": "core/tasks/task-docbot-onboarding-doc.json",
      "name": "",
      "version": "",
      "description": "Generate a clear onboarding doc that introduces users to agent roles, pipelines, memory, and task system.",
      "schema": ""
    },
    {
      "path": "core/tasks/task-docbot-summary-cards.json",
      "name": "",
      "version": "",
      "description": "Summarize each documentation file into LLM-friendly metadata cards.",
      "schema": ""
    },
    {
      "path": "core/tasks/task-docbot-version-changelog.json",
      "name": "",
      "version": "",
      "description": "Generate docs summarizing changes for each past release (v1 \u2192 v18).",
      "schema": ""
    },
    {
      "path": "core/tasks/task-document-folder-structure-guidelines.json",
      "name": "",
      "version": "",
      "description": "Create detailed documentation outlining the purpose, usage conventions, and expected content of all major folders (core, runtime, meta) and files within the project.",
      "schema": ""
    },
    {
      "path": "core/tasks/task-enhance-file-router-metadata.json",
      "name": "",
      "version": "",
      "description": "Expand the existing file-router.json to include comprehensive metadata such as purpose, responsible agents, expected content structure, and references to associated tasks, identities, and routines.",
      "schema": ""
    },
    {
      "path": "core/tasks/task-expand-longterm-agents.json",
      "name": "",
      "version": "",
      "description": "Define agents like `governor`, `resiliencebot`, `simulant`, and related checklists/pipelines.",
      "schema": ""
    },
    {
      "path": "core/tasks/task-feedback-loop-from-user.json",
      "name": "",
      "version": "",
      "description": "Use feedbacker to simulate summary of issues or needs based on human-user\u2019s live session logs.",
      "schema": ""
    },
    {
      "path": "core/tasks/task-feedbacker-anomaly-detection.json",
      "name": "",
      "version": "",
      "description": "Scan logs over time and surface unexpected task or agent behaviors.",
      "schema": ""
    },
    {
      "path": "core/tasks/task-feedbacker-monthly-summary.json",
      "name": "",
      "version": "",
      "description": "Summarize log-based execution results by agent, task, and time period.",
      "schema": ""
    },
    {
      "path": "core/tasks/task-feedbacker-trend-analysis.json",
      "name": "",
      "version": "",
      "description": "Aggregate execution log signals and generate weekly reports.",
      "schema": ""
    },
    {
      "path": "core/tasks/task-fix-missing-core-agents.json",
      "name": "",
      "version": "",
      "description": "Auto-generate required folder to complete framework compliance.",
      "schema": ""
    },
    {
      "path": "core/tasks/task-framework-live-deployment-mode.json",
      "name": "",
      "version": "",
      "description": "Activate real-time mode where all LLM interactions follow and modify framework state live.",
      "schema": ""
    },
    {
      "path": "core/tasks/task-generate-file-router.json",
      "name": "",
      "version": "",
      "description": "Scan project files and write a file-router map linking metadata, agents, tasks, and purpose of each file.",
      "schema": ""
    },
    {
      "path": "core/tasks/task-implement-cross-reference-system.json",
      "name": "",
      "version": "",
      "description": "Design and integrate a backlinks-like referencing mechanism within the file-router.json, enabling navigation between tasks, routines, agents, checklists, and logs.",
      "schema": ""
    },
    {
      "path": "core/tasks/task-llm-context-suggestions.json",
      "name": "",
      "version": "",
      "description": "Trigger suggestion logic from logs, memory, pipeline state while LLM operates.",
      "schema": ""
    },
    {
      "path": "core/tasks/task-llm-memory-tracker.json",
      "name": "",
      "version": "",
      "description": "Track and visualize memory impact by execution thread for future optimization.",
      "schema": ""
    },
    {
      "path": "core/tasks/task-llm-routing-runtime.json",
      "name": "",
      "version": "",
      "description": "Add capability for llm-assistant to dynamically suggest alternate task paths during execution",
      "schema": ""
    },
    {
      "path": "core/tasks/task-log-replay-for-improvement.json",
      "name": "",
      "version": "",
      "description": "Let feedbacker and llm-assistant replay logs to surface blind spots or drift in behavior.",
      "schema": ""
    },
    {
      "path": "core/tasks/task-planner-milestone-calendar.json",
      "name": "",
      "version": "",
      "description": "Introduce due dates, time-based triggers and planning hooks into task flow.",
      "schema": ""
    },
    {
      "path": "core/tasks/task-planner-task-grouping.json",
      "name": "",
      "version": "",
      "description": "Refactor task listing by categorizing them into meaningful clusters (docs, memory, schema, feedback, etc.).",
      "schema": ""
    },
    {
      "path": "core/tasks/task-planner-timeline-cycles.json",
      "name": "",
      "version": "",
      "description": "Define scheduled goal targets with expected timelines and retro review triggers.",
      "schema": ""
    },
    {
      "path": "core/tasks/task-rebuild-core-structure.json",
      "name": "",
      "version": "",
      "description": "Recreate any missing directories under core/ required for checklists, identities, and routines.",
      "schema": ""
    },
    {
      "path": "core/tasks/task-refactor-root-structure.json",
      "name": "",
      "version": "",
      "description": "Move non-core README and config files into organized folders like /docs and /meta to keep root clean.",
      "schema": ""
    },
    {
      "path": "core/tasks/task-regenerate-file-router.json",
      "name": "",
      "version": "",
      "description": "Scan all content and embed type, tags, linked agent, task purpose into file-router.",
      "schema": ""
    },
    {
      "path": "core/tasks/task-review-checklist-coverage.json",
      "name": "",
      "version": "",
      "description": "Ensure all checklists in core/checklists are actively linked to agents, routines, or identities.",
      "schema": ""
    },
    {
      "path": "core/tasks/task-runtime-discovery-metadata-update.json",
      "name": "",
      "version": "",
      "description": "Enable runtime agents (feedbacker, planner, llm-assistant) to dynamically discover and update metadata entries based on execution logs, runtime analysis, and usage patterns, ensuring metadata remains accurate and up-to-date.",
      "schema": ""
    },
    {
      "path": "core/tasks/task-schema-diff-viewer.json",
      "name": "",
      "version": "",
      "description": "Generate a diff viewer between schema-config versions with changelog projection.",
      "schema": ""
    },
    {
      "path": "core/tasks/task-schema-runtime-validation.json",
      "name": "",
      "version": "",
      "description": "Inject dynamic validation for schema fields in active configurations.",
      "schema": ""
    },
    {
      "path": "core/tasks/task-schema-version-lock.json",
      "name": "",
      "version": "",
      "description": "Make schema-config.json version-aware with backwards compatibility support and changelog.",
      "schema": ""
    },
    {
      "path": "core/tasks/task-setup-metadata-validation-pipeline.json",
      "name": "",
      "version": "",
      "description": "Establish an automated pipeline to validate consistency and completeness of metadata in files like file-router.json, identities, tasks, routines, and checklists on each commit or scheduled basis.",
      "schema": ""
    },
    {
      "path": "core/tasks/task-simulate-onboarding-sequence.json",
      "name": "",
      "version": "",
      "description": "Trigger simulation of onboarding a new project based on this template's capabilities and documentation. Log every LLM instruction for user onboarding clarity.",
      "schema": ""
    },
    {
      "path": "core/tasks/task-snapshot-live-user-release.json",
      "name": "",
      "version": "",
      "description": "Package current working version with all identity and feedback cycles completed after human-user integration.",
      "schema": ""
    },
    {
      "path": "core/tasks/task-task-tbd.json",
      "name": "",
      "version": "",
      "description": "TBD",
      "schema": ""
    },
    {
      "path": "core/tasks/task-trigger-user-checklist.json",
      "name": "",
      "version": "",
      "description": "Trigger checklist to validate live session structure, agent alignment, and readiness for continuous ops.",
      "schema": ""
    },
    {
      "path": "core/tasks/task-update-checklist-doc-links.json",
      "name": "",
      "version": "",
      "description": "Patch routines, checklists, and identity files to reflect new routing paths after folder restructure.",
      "schema": ""
    },
    {
      "path": "core/tasks/task-user-goal-setting.json",
      "name": "",
      "version": "",
      "description": "Generate, log, and execute user-proposed goals based on current framework state and evolution needs.",
      "schema": ""
    },
    {
      "path": "framework/docs/tasks.json",
      "name": "",
      "version": "",
      "description": "",
      "schema": ""
    },
    {
      "path": "framework/schemas/task-schema.json",
      "name": "",
      "version": "",
      "description": "(auto-generated placeholder)",
      "schema": ""
    },
    {
      "path": "framework/tasks/task-cleanup-execution.json",
      "name": "",
      "version": "",
      "description": "",
      "schema": ""
    },
    {
      "path": "memory-bank/evolving/pending-tasks.json",
      "name": "",
      "version": "1.0.0",
      "description": "",
      "schema": ""
    },
    {
      "path": "plans/agent-srp-cleanup/tasks.json",
      "name": "",
      "version": "",
      "description": "",
      "schema": ""
    },
    {
      "path": "plans/bootstrap/tasks.json",
      "name": "",
      "version": "",
      "description": "",
      "schema": ""
    },
    {
      "path": "plans/extend-agent-abstractions/tasks.json",
      "name": "",
      "version": "",
      "description": "",
      "schema": ""
    },
    {
      "path": "plans/feature-audit/tasks.json",
      "name": "",
      "version": "",
      "description": "",
      "schema": ""
    },
    {
      "path": "plans/final-audit-fix/tasks.json",
      "name": "",
      "version": "",
      "description": "",
      "schema": ""
    },
    {
      "path": "plans/fine-tune/tasks.json",
      "name": "",
      "version": "",
      "description": "",
      "schema": ""
    },
    {
      "path": "plans/fix-content/tasks.json",
      "name": "",
      "version": "",
      "description": "",
      "schema": ""
    },
    {
      "path": "plans/onboarding-agent-bootstrap/tasks.json",
      "name": "",
      "version": "",
      "description": "",
      "schema": ""
    },
    {
      "path": "plans/onboarding-refinement-patch/tasks.json",
      "name": "",
      "version": "",
      "description": "",
      "schema": ""
    },
    {
      "path": "plans/org-knowledge-agent-bootstrap/tasks.json",
      "name": "",
      "version": "",
      "description": "",
      "schema": ""
    },
    {
      "path": "plans/reuse-corrida-elements/tasks.json",
      "name": "",
      "version": "",
      "description": "",
      "schema": ""
    },
    {
      "path": "plans/root-collaboration-bootstrap/tasks.json",
      "name": "",
      "version": "",
      "description": "",
      "schema": ""
    },
    {
      "path": "plans/self-evolving/tasks.json",
      "name": "",
      "version": "",
      "description": "",
      "schema": ""
    },
    {
      "path": "plans/system-resilience/tasks.json",
      "name": "",
      "version": "",
      "description": "",
      "schema": ""
    },
    {
      "path": "snapshots/task-graph-v0.1.0.json",
      "name": "",
      "version": "0.1.0",
      "description": "",
      "schema": ""
    },
    {
      "path": "synthesized/synth_task_graphs.json",
      "name": "",
      "version": "",
      "description": "",
      "schema": ""
    },
    {
      "path": "core/tasks/task-generate-coldstart-snapshot.json",
      "name": "task-generate-coldstart-snapshot",
      "version": "v0.1.0",
      "description": "Scan and serialize current state into coldstart snapshot (agents, tasks, plans, pipelines, routing, logs).",
      "schema": "schemas/task-schema.json"
    },
    {
      "path": "core/tasks/task-compare-snapshot-with-live-files.json",
      "name": "task-compare-snapshot-with-live-files",
      "version": "v0.1.0",
      "description": "Compare coldstart snapshot with live project structure for diff validation and consistency auditing.",
      "schema": "schemas/task-schema.json"
    },
    {
      "path": "core/tasks/task-generate-canonical-manifest.json",
      "name": "task-generate-canonical-manifest",
      "version": "v0.1.0",
      "description": "Crosslink files with their schemas, owning agents/tasks, and routing path into a canonical manifest.",
      "schema": "schemas/task-schema.json"
    }
  ],
  "plans": [
    {
      "path": "core/forecast-task-planner.json",
      "name": "",
      "version": "",
      "description": "Forecasted task for planner: Introduce phase-aware scheduling of agents and register Gantt-style timeline.",
      "schema": ""
    },
    {
      "path": "core/task-agent-check-planner.json",
      "name": "",
      "version": "",
      "description": "Trigger planner to review its identity, checklist, pipeline, and log findings.",
      "schema": ""
    },
    {
      "path": "core/task-runtime-scale-planner.json",
      "name": "",
      "version": "",
      "description": "Begin preparing agent runtime orchestration logic.",
      "schema": ""
    },
    {
      "path": "core/task-seed-planner-phase-task.json",
      "name": "",
      "version": "",
      "description": "planner prepares for next operational roadmap cycle.",
      "schema": ""
    },
    {
      "path": "core/evaluation/plan-retrospective.json",
      "name": "",
      "version": "",
      "description": "Retrospective review of plan performance to trigger evolution",
      "schema": ""
    },
    {
      "path": "core/tasks/task-planner-milestone-calendar.json",
      "name": "",
      "version": "",
      "description": "Introduce due dates, time-based triggers and planning hooks into task flow.",
      "schema": ""
    },
    {
      "path": "core/tasks/task-planner-task-grouping.json",
      "name": "",
      "version": "",
      "description": "Refactor task listing by categorizing them into meaningful clusters (docs, memory, schema, feedback, etc.).",
      "schema": ""
    },
    {
      "path": "core/tasks/task-planner-timeline-cycles.json",
      "name": "",
      "version": "",
      "description": "Define scheduled goal targets with expected timelines and retro review triggers.",
      "schema": ""
    },
    {
      "path": "forecasts/forecast-planner.json",
      "name": "",
      "version": "",
      "description": "",
      "schema": ""
    },
    {
      "path": "plans/agent-collab-plan.json",
      "name": "",
      "version": "",
      "description": "",
      "schema": ""
    },
    {
      "path": "plans/structured-plans.json",
      "name": "",
      "version": "auto-vNEXT",
      "description": "",
      "schema": ""
    },
    {
      "path": "plans/agent-srp-cleanup/plan.json",
      "name": "",
      "version": "",
      "description": "",
      "schema": ""
    },
    {
      "path": "plans/bootstrap/plan.json",
      "name": "",
      "version": "v1.0",
      "description": "",
      "schema": ""
    },
    {
      "path": "plans/extend-agent-abstractions/plan.json",
      "name": "",
      "version": "v1.1",
      "description": "",
      "schema": ""
    },
    {
      "path": "plans/feature-audit/plan.json",
      "name": "",
      "version": "",
      "description": "",
      "schema": ""
    },
    {
      "path": "plans/final-audit-fix/plan.json",
      "name": "",
      "version": "",
      "description": "",
      "schema": ""
    },
    {
      "path": "plans/fine-tune/plan.json",
      "name": "",
      "version": "v1.2",
      "description": "",
      "schema": ""
    },
    {
      "path": "plans/fix-content/plan.json",
      "name": "",
      "version": "",
      "description": "",
      "schema": ""
    },
    {
      "path": "plans/onboarding-agent-bootstrap/plan.json",
      "name": "",
      "version": "",
      "description": "",
      "schema": ""
    },
    {
      "path": "plans/onboarding-refinement-patch/plan.json",
      "name": "",
      "version": "",
      "description": "",
      "schema": ""
    },
    {
      "path": "plans/org-knowledge-agent-bootstrap/plan.json",
      "name": "",
      "version": "",
      "description": "",
      "schema": ""
    },
    {
      "path": "plans/phase-15/prep-plan-autonomous-consistency-and-indexing.json",
      "name": "",
      "version": "",
      "description": "Prepares the system for long-horizon autonomy by ensuring that all features, pipelines, checklists, logs, memory banks, and routines are accurately documented, referenced, validated, and logically routable across agents and schemas.",
      "schema": ""
    },
    {
      "path": "plans/reuse-corrida-elements/plan.json",
      "name": "",
      "version": "v1.1",
      "description": "",
      "schema": ""
    },
    {
      "path": "plans/root-collaboration-bootstrap/plan.json",
      "name": "",
      "version": "",
      "description": "",
      "schema": ""
    },
    {
      "path": "plans/self-evolving/plan.json",
      "name": "",
      "version": "v1.1",
      "description": "",
      "schema": ""
    },
    {
      "path": "plans/system-resilience/plan.json",
      "name": "",
      "version": "",
      "description": "",
      "schema": ""
    },
    {
      "path": "plans/system-resilience/planner-goals-extension.json",
      "name": "",
      "version": "",
      "description": "Ensure routine snapshot sync is embedded in milestone planning cycles.",
      "schema": ""
    },
    {
      "path": "plans/system-resilience/resilience-upgrade-plan-v1.json",
      "name": "",
      "version": "0.1.0",
      "description": "",
      "schema": ""
    },
    {
      "path": "plans/system-upgrade/agent-review-upgrade-plan-v1.json",
      "name": "",
      "version": "",
      "description": "This plan coordinates the application of improvements discovered during the agent identity and checklist audit. It includes upgrades to checklists, documentation, logs, schemas, pipelines, and governance compliance to increase long-term resilience.",
      "schema": ""
    },
    {
      "path": "plans/template-pipeline-library/plan-retrospective-pipeline.json",
      "name": "",
      "version": "",
      "description": "Analyzes completed/failed plans for improvement and learning.",
      "schema": ""
    },
    {
      "path": "schemas/forkable-plan.json",
      "name": "",
      "version": "",
      "description": "",
      "schema": "forkable-plan"
    }
  ],
  "pipelines": [
    {
      "path": "core/tasks/task-create-pipeline-folder.json",
      "name": "",
      "version": "",
      "description": "Ensure pipelines folder exists so agents can run their orchestration triggers.",
      "schema": ""
    },
    {
      "path": "core/tasks/task-setup-metadata-validation-pipeline.json",
      "name": "",
      "version": "",
      "description": "Establish an automated pipeline to validate consistency and completeness of metadata in files like file-router.json, identities, tasks, routines, and checklists on each commit or scheduled basis.",
      "schema": ""
    },
    {
      "path": "framework/docs/orchestrator-release-zip-pipeline.json",
      "name": "",
      "version": "",
      "description": "Phased and agent-coordinated release ZIP generation with validation of deletions, merges, and updates.",
      "schema": ""
    },
    {
      "path": "framework/pipelines/pipeline-release-diff-aware.json",
      "name": "",
      "version": "v0.25.1",
      "description": "",
      "schema": ""
    },
    {
      "path": "framework/pipelines/pipeline-release-vNEXT.json",
      "name": "",
      "version": "",
      "description": "Automated packaging and publishing of framework release",
      "schema": ""
    },
    {
      "path": "framework/routines/auto-patch-pipeline-outputs.json",
      "name": "",
      "version": "",
      "description": "Automatically writes generated pipeline outputs (e.g. patched router, task snapshots) into the project tree before packaging.",
      "schema": ""
    },
    {
      "path": "framework/schemas/pipeline-schema.json",
      "name": "",
      "version": "",
      "description": "(auto-generated placeholder)",
      "schema": ""
    },
    {
      "path": "governance/rules/rule-agents-cannot-edit-pipeline-map.json",
      "name": "",
      "version": "",
      "description": "Agents must not self-modify the pipeline map without multi-agent consensus.",
      "schema": ""
    },
    {
      "path": "pipelines/orchestrator-release-zip-pipeline.json",
      "name": "orchestrator-release-zip",
      "version": "",
      "description": "Builds and verifies final release ZIP using canonical structure and rules.",
      "schema": ""
    },
    {
      "path": "plans/template-pipeline-library/context-compression-pipeline.json",
      "name": "",
      "version": "",
      "description": "Compresses memory and active context into distilled summaries.",
      "schema": ""
    },
    {
      "path": "plans/template-pipeline-library/conversation-to-pipeline.json",
      "name": "",
      "version": "",
      "description": "Detecta padr\u00f5es em conversas e converte em pipelines reutiliz\u00e1veis",
      "schema": ""
    },
    {
      "path": "plans/template-pipeline-library/ethics-audit-pipeline.json",
      "name": "",
      "version": "",
      "description": "",
      "schema": ""
    },
    {
      "path": "plans/template-pipeline-library/fallback-resolution-pipeline.json",
      "name": "",
      "version": "",
      "description": "Ativa substitui\u00e7\u00e3o ou reencaminhamento em caso de falha de agente",
      "schema": ""
    },
    {
      "path": "plans/template-pipeline-library/file-content-schema-audit-pipeline.json",
      "name": "",
      "version": "",
      "description": "Validates if file contents match expected structural purpose. Detects execution states in routines, misplaced spec fields, or runtime data in identity files.",
      "schema": ""
    },
    {
      "path": "plans/template-pipeline-library/plan-retrospective-pipeline.json",
      "name": "",
      "version": "",
      "description": "Analyzes completed/failed plans for improvement and learning.",
      "schema": ""
    },
    {
      "path": "plans/template-pipeline-library/routine-gap-detection-pipeline.json",
      "name": "",
      "version": "0.1.0",
      "description": "Detects missing goals, orphaned plans, unassigned tasks, and undefined references across the framework.",
      "schema": ""
    },
    {
      "path": "plans/template-pipeline-library/snapshot-sync-pipeline.json",
      "name": "snapshot-sync-pipeline",
      "version": "",
      "description": "Orchestrates the regeneration of the canonical system snapshot via docbot.",
      "schema": ""
    },
    {
      "path": "schemas/pipeline.schema-lifecycle.json",
      "name": "",
      "version": "",
      "description": "",
      "schema": ""
    },
    {
      "path": "schemas/pipeline.schema-metadata.json",
      "name": "",
      "version": "",
      "description": "",
      "schema": "pipeline.schema.json"
    },
    {
      "path": "schemas/pipeline.schema.json",
      "name": "",
      "version": "",
      "description": "Canonical schema for defining pipelines and their execution steps",
      "schema": ""
    },
    {
      "path": "snapshots/active-pipeline-manifest-v0.1.0.json",
      "name": "",
      "version": "0.1.0",
      "description": "",
      "schema": ""
    },
    {
      "path": "plans/bootstrap/coldstart-bootstrap-pipeline.json",
      "name": "coldstart-bootstrap",
      "version": "v0.1.0",
      "description": "Generates coldstart snapshot and canonical manifest with schema-aware parsing and priority load ordering.",
      "schema": ""
    }
  ],
  "logs": [],
  "file-links": {
    "AUTO-ONBOARD.md": {
      "owner": "system",
      "route_type": "eager",
      "format": "markdown"
    },
    "file-router.json": {
      "owner": "system",
      "route_type": "eager",
      "format": "json"
    },
    "llm_coldstart_routing.json": {
      "owner": "system",
      "route_type": "eager",
      "format": "json"
    },
    "README.md": {
      "owner": "system",
      "route_type": "eager",
      "format": "markdown"
    },
    "agents-spec/reflection-agent.json": {
      "owner": "reflection-agent.json",
      "route_type": "eager",
      "format": "json"
    },
    "agents-spec/scheduler-agent.json": {
      "owner": "scheduler-agent.json",
      "route_type": "eager",
      "format": "json"
    },
    "agents-spec/audit-agent/agent-ledger.json": {
      "owner": "audit-agent",
      "route_type": "eager",
      "format": "json"
    },
    "agents-spec/audit-agent/agent-metadata.json": {
      "owner": "audit-agent",
      "route_type": "eager",
      "format": "json"
    },
    "agents-spec/audit-agent/agent-state.json": {
      "owner": "audit-agent",
      "route_type": "eager",
      "format": "json"
    },
    "agents-spec/audit-agent/checklist.json": {
      "owner": "audit-agent",
      "route_type": "eager",
      "format": "json"
    },
    "agents-spec/audit-agent/heuristics.json": {
      "owner": "audit-agent",
      "route_type": "eager",
      "format": "json"
    },
    "agents-spec/audit-agent/identity.json": {
      "owner": "audit-agent",
      "route_type": "eager",
      "format": "json"
    },
    "agents-spec/audit-agent/lifecycle.json": {
      "owner": "audit-agent",
      "route_type": "eager",
      "format": "json"
    },
    "agents-spec/audit-agent/ux-profile.json": {
      "owner": "audit-agent",
      "route_type": "eager",
      "format": "json"
    },
    "agents-spec/bootstrap-agent/agent-ledger.json": {
      "owner": "bootstrap-agent",
      "route_type": "eager",
      "format": "json"
    },
    "agents-spec/bootstrap-agent/agent-metadata.json": {
      "owner": "bootstrap-agent",
      "route_type": "eager",
      "format": "json"
    },
    "agents-spec/bootstrap-agent/agent-state.json": {
      "owner": "bootstrap-agent",
      "route_type": "eager",
      "format": "json"
    },
    "agents-spec/bootstrap-agent/checklist.json": {
      "owner": "bootstrap-agent",
      "route_type": "eager",
      "format": "json"
    },
    "agents-spec/bootstrap-agent/heuristics.json": {
      "owner": "bootstrap-agent",
      "route_type": "eager",
      "format": "json"
    },
    "agents-spec/bootstrap-agent/identity.json": {
      "owner": "bootstrap-agent",
      "route_type": "eager",
      "format": "json"
    },
    "agents-spec/bootstrap-agent/ux-profile.json": {
      "owner": "bootstrap-agent",
      "route_type": "eager",
      "format": "json"
    },
    "agents-spec/bootstrap-agent/reflections/sample.json": {
      "owner": "bootstrap-agent",
      "route_type": "eager",
      "format": "json"
    },
    "agents-spec/evolve-agent/agent-ledger.json": {
      "owner": "evolve-agent",
      "route_type": "eager",
      "format": "json"
    },
    "agents-spec/evolve-agent/agent-metadata.json": {
      "owner": "evolve-agent",
      "route_type": "eager",
      "format": "json"
    },
    "agents-spec/evolve-agent/agent-state.json": {
      "owner": "evolve-agent",
      "route_type": "eager",
      "format": "json"
    },
    "agents-spec/evolve-agent/checklist.json": {
      "owner": "evolve-agent",
      "route_type": "eager",
      "format": "json"
    },
    "agents-spec/evolve-agent/heuristics.json": {
      "owner": "evolve-agent",
      "route_type": "eager",
      "format": "json"
    },
    "agents-spec/evolve-agent/identity.json": {
      "owner": "evolve-agent",
      "route_type": "eager",
      "format": "json"
    },
    "agents-spec/evolve-agent/lifecycle.json": {
      "owner": "evolve-agent",
      "route_type": "eager",
      "format": "json"
    },
    "agents-spec/evolve-agent/ux-profile.json": {
      "owner": "evolve-agent",
      "route_type": "eager",
      "format": "json"
    },
    "agents-spec/evolve-agent/reflections/routine-gap-detection.json": {
      "owner": "evolve-agent",
      "route_type": "eager",
      "format": "json"
    },
    "agents-spec/evolve-agent/reflections/self-introspection.json": {
      "owner": "evolve-agent",
      "route_type": "eager",
      "format": "json"
    },
    "agents-spec/evolve-agent/reflections/self-review-hook.json": {
      "owner": "evolve-agent",
      "route_type": "eager",
      "format": "json"
    },
    "agents-spec/evolve-agent/reflections/system-evolve-cycle.json": {
      "owner": "evolve-agent",
      "route_type": "eager",
      "format": "json"
    },
    "agents-spec/logger-agent/agent-ledger.json": {
      "owner": "logger-agent",
      "route_type": "eager",
      "format": "json"
    },
    "agents-spec/logger-agent/agent-metadata.json": {
      "owner": "logger-agent",
      "route_type": "eager",
      "format": "json"
    },
    "agents-spec/logger-agent/checklist.json": {
      "owner": "logger-agent",
      "route_type": "eager",
      "format": "json"
    },
    "agents-spec/logger-agent/heuristics.json": {
      "owner": "logger-agent",
      "route_type": "eager",
      "format": "json"
    },
    "agents-spec/logger-agent/identity.json": {
      "owner": "logger-agent",
      "route_type": "eager",
      "format": "json"
    },
    "agents-spec/logger-agent/lifecycle.json": {
      "owner": "logger-agent",
      "route_type": "eager",
      "format": "json"
    },
    "agents-spec/logger-agent/ux-profile.json": {
      "owner": "logger-agent",
      "route_type": "eager",
      "format": "json"
    },
    "agents-spec/meta-agent/agent-ledger.json": {
      "owner": "meta-agent",
      "route_type": "eager",
      "format": "json"
    },
    "agents-spec/meta-agent/agent-metadata.json": {
      "owner": "meta-agent",
      "route_type": "eager",
      "format": "json"
    },
    "agents-spec/meta-agent/agent-state.json": {
      "owner": "meta-agent",
      "route_type": "eager",
      "format": "json"
    },
    "agents-spec/meta-agent/checklist.json": {
      "owner": "meta-agent",
      "route_type": "eager",
      "format": "json"
    },
    "agents-spec/meta-agent/heuristics.json": {
      "owner": "meta-agent",
      "route_type": "eager",
      "format": "json"
    },
    "agents-spec/meta-agent/identity.json": {
      "owner": "meta-agent",
      "route_type": "eager",
      "format": "json"
    },
    "agents-spec/meta-agent/lifecycle.json": {
      "owner": "meta-agent",
      "route_type": "eager",
      "format": "json"
    },
    "agents-spec/meta-agent/ux-profile.json": {
      "owner": "meta-agent",
      "route_type": "eager",
      "format": "json"
    },
    "agents-spec/meta-agent/reflections/mentor-review-001.json": {
      "owner": "meta-agent",
      "route_type": "eager",
      "format": "json"
    },
    "agents-spec/orchestrator-agent/agent-ledger.json": {
      "owner": "orchestrator-agent",
      "route_type": "eager",
      "format": "json"
    },
    "agents-spec/orchestrator-agent/agent-metadata.json": {
      "owner": "orchestrator-agent",
      "route_type": "eager",
      "format": "json"
    },
    "agents-spec/orchestrator-agent/agent-state.json": {
      "owner": "orchestrator-agent",
      "route_type": "eager",
      "format": "json"
    },
    "agents-spec/orchestrator-agent/checklist.json": {
      "owner": "orchestrator-agent",
      "route_type": "eager",
      "format": "json"
    },
    "agents-spec/orchestrator-agent/heuristics.json": {
      "owner": "orchestrator-agent",
      "route_type": "eager",
      "format": "json"
    },
    "agents-spec/orchestrator-agent/identity.json": {
      "owner": "orchestrator-agent",
      "route_type": "eager",
      "format": "json"
    },
    "agents-spec/orchestrator-agent/lifecycle.json": {
      "owner": "orchestrator-agent",
      "route_type": "eager",
      "format": "json"
    },
    "agents-spec/orchestrator-agent/ux-profile.json": {
      "owner": "orchestrator-agent",
      "route_type": "eager",
      "format": "json"
    },
    "agents-spec/orchestrator-agent/checklists/core-checklist.json": {
      "owner": "orchestrator-agent",
      "route_type": "eager",
      "format": "json"
    },
    "agents-spec/org-agent/agent-ledger.json": {
      "owner": "org-agent",
      "route_type": "eager",
      "format": "json"
    },
    "agents-spec/org-agent/agent-metadata.json": {
      "owner": "org-agent",
      "route_type": "eager",
      "format": "json"
    },
    "agents-spec/org-agent/agent-state.json": {
      "owner": "org-agent",
      "route_type": "eager",
      "format": "json"
    },
    "agents-spec/org-agent/checklist.json": {
      "owner": "org-agent",
      "route_type": "eager",
      "format": "json"
    },
    "agents-spec/org-agent/heuristics.json": {
      "owner": "org-agent",
      "route_type": "eager",
      "format": "json"
    },
    "agents-spec/org-agent/identity.json": {
      "owner": "org-agent",
      "route_type": "eager",
      "format": "json"
    },
    "agents-spec/org-agent/lifecycle.json": {
      "owner": "org-agent",
      "route_type": "eager",
      "format": "json"
    },
    "agents-spec/org-agent/ux-profile.json": {
      "owner": "org-agent",
      "route_type": "eager",
      "format": "json"
    },
    "agents-spec/planner-agent/agent-ledger.json": {
      "owner": "planner-agent",
      "route_type": "eager",
      "format": "json"
    },
    "agents-spec/planner-agent/agent-metadata.json": {
      "owner": "planner-agent",
      "route_type": "eager",
      "format": "json"
    },
    "agents-spec/planner-agent/agent-state.json": {
      "owner": "planner-agent",
      "route_type": "eager",
      "format": "json"
    },
    "agents-spec/planner-agent/checklist.json": {
      "owner": "planner-agent",
      "route_type": "eager",
      "format": "json"
    },
    "agents-spec/planner-agent/heuristics.json": {
      "owner": "planner-agent",
      "route_type": "eager",
      "format": "json"
    },
    "agents-spec/planner-agent/identity.json": {
      "owner": "planner-agent",
      "route_type": "eager",
      "format": "json"
    },
    "agents-spec/planner-agent/lifecycle.json": {
      "owner": "planner-agent",
      "route_type": "eager",
      "format": "json"
    },
    "agents-spec/planner-agent/ux-profile.json": {
      "owner": "planner-agent",
      "route_type": "eager",
      "format": "json"
    },
    "agents-spec/planner-agent/checklists/core-checklist.json": {
      "owner": "planner-agent",
      "route_type": "eager",
      "format": "json"
    },
    "agents-spec/proposal-review-agent/agent-ledger.json": {
      "owner": "proposal-review-agent",
      "route_type": "eager",
      "format": "json"
    },
    "agents-spec/proposal-review-agent/agent-metadata.json": {
      "owner": "proposal-review-agent",
      "route_type": "eager",
      "format": "json"
    },
    "agents-spec/proposal-review-agent/agent-state.json": {
      "owner": "proposal-review-agent",
      "route_type": "eager",
      "format": "json"
    },
    "agents-spec/proposal-review-agent/checklist.json": {
      "owner": "proposal-review-agent",
      "route_type": "eager",
      "format": "json"
    },
    "agents-spec/proposal-review-agent/heuristics.json": {
      "owner": "proposal-review-agent",
      "route_type": "eager",
      "format": "json"
    },
    "agents-spec/proposal-review-agent/identity.json": {
      "owner": "proposal-review-agent",
      "route_type": "eager",
      "format": "json"
    },
    "agents-spec/proposal-review-agent/lifecycle.json": {
      "owner": "proposal-review-agent",
      "route_type": "eager",
      "format": "json"
    },
    "agents-spec/proposal-review-agent/ux-profile.json": {
      "owner": "proposal-review-agent",
      "route_type": "eager",
      "format": "json"
    },
    "agents-spec/recovery-agent/agent-ledger.json": {
      "owner": "recovery-agent",
      "route_type": "eager",
      "format": "json"
    },
    "agents-spec/recovery-agent/agent-metadata.json": {
      "owner": "recovery-agent",
      "route_type": "eager",
      "format": "json"
    },
    "agents-spec/recovery-agent/agent-state.json": {
      "owner": "recovery-agent",
      "route_type": "eager",
      "format": "json"
    },
    "agents-spec/recovery-agent/checklist.json": {
      "owner": "recovery-agent",
      "route_type": "eager",
      "format": "json"
    },
    "agents-spec/recovery-agent/heuristics.json": {
      "owner": "recovery-agent",
      "route_type": "eager",
      "format": "json"
    },
    "agents-spec/recovery-agent/identity.json": {
      "owner": "recovery-agent",
      "route_type": "eager",
      "format": "json"
    },
    "agents-spec/recovery-agent/lifecycle.json": {
      "owner": "recovery-agent",
      "route_type": "eager",
      "format": "json"
    },
    "agents-spec/recovery-agent/ux-profile.json": {
      "owner": "recovery-agent",
      "route_type": "eager",
      "format": "json"
    },
    "agents-spec/router-agent/agent-ledger.json": {
      "owner": "router-agent",
      "route_type": "eager",
      "format": "json"
    },
    "agents-spec/router-agent/agent-metadata.json": {
      "owner": "router-agent",
      "route_type": "eager",
      "format": "json"
    },
    "agents-spec/router-agent/agent-state.json": {
      "owner": "router-agent",
      "route_type": "eager",
      "format": "json"
    },
    "agents-spec/router-agent/checklist.json": {
      "owner": "router-agent",
      "route_type": "eager",
      "format": "json"
    },
    "agents-spec/router-agent/heuristics.json": {
      "owner": "router-agent",
      "route_type": "eager",
      "format": "json"
    },
    "agents-spec/router-agent/identity.json": {
      "owner": "router-agent",
      "route_type": "eager",
      "format": "json"
    },
    "agents-spec/router-agent/lifecycle.json": {
      "owner": "router-agent",
      "route_type": "eager",
      "format": "json"
    },
    "agents-spec/router-agent/ux-profile.json": {
      "owner": "router-agent",
      "route_type": "eager",
      "format": "json"
    },
    "agents-spec/router-agent/reflections/llm-session-router.json": {
      "owner": "router-agent",
      "route_type": "eager",
      "format": "json"
    },
    "agents-spec/tasking-agent/agent-ledger.json": {
      "owner": "tasking-agent",
      "route_type": "eager",
      "format": "json"
    },
    "agents-spec/tasking-agent/agent-metadata.json": {
      "owner": "tasking-agent",
      "route_type": "eager",
      "format": "json"
    },
    "agents-spec/tasking-agent/agent-state.json": {
      "owner": "tasking-agent",
      "route_type": "eager",
      "format": "json"
    },
    "agents-spec/tasking-agent/checklist.json": {
      "owner": "tasking-agent",
      "route_type": "eager",
      "format": "json"
    },
    "agents-spec/tasking-agent/heuristics.json": {
      "owner": "tasking-agent",
      "route_type": "eager",
      "format": "json"
    },
    "agents-spec/tasking-agent/identity.json": {
      "owner": "tasking-agent",
      "route_type": "eager",
      "format": "json"
    },
    "agents-spec/tasking-agent/lifecycle.json": {
      "owner": "tasking-agent",
      "route_type": "eager",
      "format": "json"
    },
    "agents-spec/tasking-agent/ux-profile.json": {
      "owner": "tasking-agent",
      "route_type": "eager",
      "format": "json"
    },
    "agents-spec/tasking-agent/checklists/core-checklist.json": {
      "owner": "tasking-agent",
      "route_type": "eager",
      "format": "json"
    },
    "agents-spec/ux-agent/agent-metadata.json": {
      "owner": "ux-agent",
      "route_type": "eager",
      "format": "json"
    },
    "agents-spec/ux-agent/agent-state.json": {
      "owner": "ux-agent",
      "route_type": "eager",
      "format": "json"
    },
    "agents-spec/ux-agent/checklist.json": {
      "owner": "ux-agent",
      "route_type": "eager",
      "format": "json"
    },
    "agents-spec/ux-agent/heuristics.json": {
      "owner": "ux-agent",
      "route_type": "eager",
      "format": "json"
    },
    "agents-spec/ux-agent/identity.json": {
      "owner": "ux-agent",
      "route_type": "eager",
      "format": "json"
    },
    "agents-spec/ux-agent/lifecycle.json": {
      "owner": "ux-agent",
      "route_type": "eager",
      "format": "json"
    },
    "agents-spec/ux-agent/ux-profile.json": {
      "owner": "ux-agent",
      "route_type": "eager",
      "format": "json"
    },
    "agents-spec/voting-agent/agent-ledger.json": {
      "owner": "voting-agent",
      "route_type": "eager",
      "format": "json"
    },
    "agents-spec/voting-agent/agent-metadata.json": {
      "owner": "voting-agent",
      "route_type": "eager",
      "format": "json"
    },
    "agents-spec/voting-agent/agent-state.json": {
      "owner": "voting-agent",
      "route_type": "eager",
      "format": "json"
    },
    "agents-spec/voting-agent/checklist.json": {
      "owner": "voting-agent",
      "route_type": "eager",
      "format": "json"
    },
    "agents-spec/voting-agent/identity.json": {
      "owner": "voting-agent",
      "route_type": "eager",
      "format": "json"
    },
    "agents-spec/voting-agent/lifecycle.json": {
      "owner": "voting-agent",
      "route_type": "eager",
      "format": "json"
    },
    "agents-spec/voting-agent/ux-profile.json": {
      "owner": "voting-agent",
      "route_type": "eager",
      "format": "json"
    },
    "canonical-model/routine-definition.json": {
      "owner": "system",
      "route_type": "eager",
      "format": "json"
    },
    "checkpoints/index.json": {
      "owner": "system",
      "route_type": "eager",
      "format": "json"
    },
    "checkpoints/session_boot.json": {
      "owner": "system",
      "route_type": "eager",
      "format": "json"
    },
    "config/agent-registry.json": {
      "owner": "system",
      "route_type": "eager",
      "format": "json"
    },
    "config/cleanup-before-release.json": {
      "owner": "system",
      "route_type": "eager",
      "format": "json"
    },
    "config/eval-hooks.json": {
      "owner": "system",
      "route_type": "eager",
      "format": "json"
    },
    "config/goal-tree.json": {
      "owner": "system",
      "route_type": "eager",
      "format": "json"
    },
    "config/llm-capabilities.json": {
      "owner": "system",
      "route_type": "eager",
      "format": "json"
    },
    "config/llm-context-router.json": {
      "owner": "system",
      "route_type": "eager",
      "format": "json"
    },
    "config/override-rules.json": {
      "owner": "system",
      "route_type": "eager",
      "format": "json"
    },
    "config/performance-milestones.json": {
      "owner": "system",
      "route_type": "eager",
      "format": "json"
    },
    "config/preferences.json": {
      "owner": "system",
      "route_type": "eager",
      "format": "json"
    },
    "config/prompt-replay.json": {
      "owner": "system",
      "route_type": "eager",
      "format": "json"
    },
    "config/release-manifest.json": {
      "owner": "system",
      "route_type": "eager",
      "format": "json"
    },
    "config/release-preferences.json": {
      "owner": "system",
      "route_type": "eager",
      "format": "json"
    },
    "config/release-readiness-audit.json": {
      "owner": "system",
      "route_type": "eager",
      "format": "json"
    },
    "config/schema-config.json": {
      "owner": "system",
      "route_type": "eager",
      "format": "json"
    },
    "config/systemic-expansion.json": {
      "owner": "system",
      "route_type": "eager",
      "format": "json"
    },
    "config/tasks.json": {
      "owner": "system",
      "route_type": "eager",
      "format": "json"
    },
    "config/zip-integrity-checklist.json": {
      "owner": "system",
      "route_type": "eager",
      "format": "json"
    },
    "control-panel/panel-config.json": {
      "owner": "system",
      "route_type": "eager",
      "format": "json"
    },
    "core/forecast-task-docbot.json": {
      "owner": "system",
      "route_type": "eager",
      "format": "json"
    },
    "core/forecast-task-feedbacker.json": {
      "owner": "system",
      "route_type": "eager",
      "format": "json"
    },
    "core/forecast-task-forecaster.json": {
      "owner": "system",
      "route_type": "eager",
      "format": "json"
    },
    "core/forecast-task-planner.json": {
      "owner": "system",
      "route_type": "eager",
      "format": "json"
    },
    "core/forecast-task-schemaenforcer.json": {
      "owner": "system",
      "route_type": "eager",
      "format": "json"
    },
    "core/memory-bridge.json": {
      "owner": "system",
      "route_type": "eager",
      "format": "json"
    },
    "core/memory_bank.json": {
      "owner": "system",
      "route_type": "eager",
      "format": "json"
    },
    "core/task-agent-check-docbot.json": {
      "owner": "system",
      "route_type": "eager",
      "format": "json"
    },
    "core/task-agent-check-feedbacker.json": {
      "owner": "system",
      "route_type": "eager",
      "format": "json"
    },
    "core/task-agent-check-forecaster.json": {
      "owner": "system",
      "route_type": "eager",
      "format": "json"
    },
    "core/task-agent-check-planner.json": {
      "owner": "system",
      "route_type": "eager",
      "format": "json"
    },
    "core/task-agent-check-schemaenforcer.json": {
      "owner": "system",
      "route_type": "eager",
      "format": "json"
    },
    "core/task-agent-driven-evolution.json": {
      "owner": "system",
      "route_type": "eager",
      "format": "json"
    },
    "core/task-agent-identity-review.json": {
      "owner": "system",
      "route_type": "eager",
      "format": "json"
    },
    "core/task-bootstrap-and-memory-loading.json": {
      "owner": "system",
      "route_type": "eager",
      "format": "json"
    },
    "core/task-feature-ref-linking.json": {
      "owner": "system",
      "route_type": "eager",
      "format": "json"
    },
    "core/task-full-system-audit.json": {
      "owner": "system",
      "route_type": "eager",
      "format": "json"
    },
    "core/task-global-resilience-audit.json": {
      "owner": "system",
      "route_type": "eager",
      "format": "json"
    },
    "core/task-ongoing-validation-cycle.json": {
      "owner": "system",
      "route_type": "eager",
      "format": "json"
    },
    "core/task-restructure-root-layout.json": {
      "owner": "system",
      "route_type": "eager",
      "format": "json"
    },
    "core/task-runtime-scale-docbot.json": {
      "owner": "system",
      "route_type": "eager",
      "format": "json"
    },
    "core/task-runtime-scale-feedbacker.json": {
      "owner": "system",
      "route_type": "eager",
      "format": "json"
    },
    "core/task-runtime-scale-forecaster.json": {
      "owner": "system",
      "route_type": "eager",
      "format": "json"
    },
    "core/task-runtime-scale-planner.json": {
      "owner": "system",
      "route_type": "eager",
      "format": "json"
    },
    "core/task-runtime-scale-schemaenforcer.json": {
      "owner": "system",
      "route_type": "eager",
      "format": "json"
    },
    "core/task-seed-docbot-phase-task.json": {
      "owner": "system",
      "route_type": "eager",
      "format": "json"
    },
    "core/task-seed-feedbacker-phase-task.json": {
      "owner": "system",
      "route_type": "eager",
      "format": "json"
    },
    "core/task-seed-forecaster-phase-task.json": {
      "owner": "system",
      "route_type": "eager",
      "format": "json"
    },
    "core/task-seed-planner-phase-task.json": {
      "owner": "system",
      "route_type": "eager",
      "format": "json"
    },
    "core/task-seed-schemaenforcer-phase-task.json": {
      "owner": "system",
      "route_type": "eager",
      "format": "json"
    },
    "core/task-simulate-zone-relay.json": {
      "owner": "system",
      "route_type": "eager",
      "format": "json"
    },
    "core/task-task-tbd.json": {
      "owner": "system",
      "route_type": "eager",
      "format": "json"
    },
    "core/checklists/docbot-snapshot-checklist.yaml": {
      "owner": "system",
      "route_type": "eager",
      "format": "text"
    },
    "core/checklists/user-live-session-checklist.yaml": {
      "owner": "system",
      "route_type": "eager",
      "format": "text"
    },
    "core/conversational/debate.json": {
      "owner": "system",
      "route_type": "eager",
      "format": "json"
    },
    "core/evaluation/calculate-agent-evolution-score.json": {
      "owner": "system",
      "route_type": "eager",
      "format": "json"
    },
    "core/evaluation/plan-retrospective.json": {
      "owner": "system",
      "route_type": "eager",
      "format": "json"
    },
    "core/evaluation/sandbox-replay.json": {
      "owner": "system",
      "route_type": "eager",
      "format": "json"
    },
    "core/governance/enforce-resilience-logic.json": {
      "owner": "system",
      "route_type": "eager",
      "format": "json"
    },
    "core/governance/validate-upgrade-proposals.json": {
      "owner": "system",
      "route_type": "eager",
      "format": "json"
    },
    "core/identities/user.yaml": {
      "owner": "system",
      "route_type": "eager",
      "format": "text"
    },
    "core/operational/feature-sync-and-memory-audit.json": {
      "owner": "system",
      "route_type": "eager",
      "format": "json"
    },
    "core/operational/finalize-project-integrity.json": {
      "owner": "system",
      "route_type": "eager",
      "format": "json"
    },
    "core/operational/lifecycle.json": {
      "owner": "system",
      "route_type": "eager",
      "format": "json"
    },
    "core/operational/llm-session-router.json": {
      "owner": "system",
      "route_type": "eager",
      "format": "json"
    },
    "core/operational/pattern-audit.json": {
      "owner": "system",
      "route_type": "eager",
      "format": "json"
    },
    "core/operational/regenerate-system-snapshot.json": {
      "owner": "system",
      "route_type": "eager",
      "format": "json"
    },
    "core/operational/routine-gap-detection.json": {
      "owner": "system",
      "route_type": "eager",
      "format": "json"
    },
    "core/operational/routine-manifest.json": {
      "owner": "system",
      "route_type": "eager",
      "format": "json"
    },
    "core/operational/routine-metadata.json": {
      "owner": "system",
      "route_type": "eager",
      "format": "json"
    },
    "core/operational/self-healing-memory-sync.json": {
      "owner": "system",
      "route_type": "eager",
      "format": "json"
    },
    "core/operational/self-introspection.json": {
      "owner": "system",
      "route_type": "eager",
      "format": "json"
    },
    "core/operational/self-review-hook.json": {
      "owner": "system",
      "route_type": "eager",
      "format": "json"
    },
    "core/operational/sync-memory-feature-map.json": {
      "owner": "system",
      "route_type": "eager",
      "format": "json"
    },
    "core/operational/system-evolve-cycle.json": {
      "owner": "system",
      "route_type": "eager",
      "format": "json"
    },
    "core/operational/validate-canonical-models.json": {
      "owner": "system",
      "route_type": "eager",
      "format": "json"
    },
    "core/operational/validate-full-framework-state.json": {
      "owner": "system",
      "route_type": "eager",
      "format": "json"
    },
    "core/operational/validate-project-structure.json": {
      "owner": "system",
      "route_type": "eager",
      "format": "json"
    },
    "core/operational/weekly-resilience-audit.json": {
      "owner": "system",
      "route_type": "eager",
      "format": "json"
    },
    "core/routines/full-system-stabilization.yaml": {
      "owner": "system",
      "route_type": "eager",
      "format": "text"
    },
    "core/routines/live-deployment-feedback-cycle.yaml": {
      "owner": "system",
      "route_type": "eager",
      "format": "text"
    },
    "core/routines/memory-compaction.json": {
      "owner": "system",
      "route_type": "eager",
      "format": "json"
    },
    "core/routines/root-collab-validation.yaml": {
      "owner": "system",
      "route_type": "eager",
      "format": "text"
    },
    "core/tasks/task-agent-alignment-scan.json": {
      "owner": "tasking-agent",
      "route_type": "eager",
      "format": "json"
    },
    "core/tasks/task-agent-goal-generation.json": {
      "owner": "tasking-agent",
      "route_type": "eager",
      "format": "json"
    },
    "core/tasks/task-audit-v21-before-v22.json": {
      "owner": "tasking-agent",
      "route_type": "eager",
      "format": "json"
    },
    "core/tasks/task-begin-v23-cycle.json": {
      "owner": "tasking-agent",
      "route_type": "eager",
      "format": "json"
    },
    "core/tasks/task-continuous-evolution-cycle.json": {
      "owner": "tasking-agent",
      "route_type": "eager",
      "format": "json"
    },
    "core/tasks/task-create-pipeline-folder.json": {
      "owner": "tasking-agent",
      "route_type": "eager",
      "format": "json"
    },
    "core/tasks/task-discovery-intent-cycle.json": {
      "owner": "tasking-agent",
      "route_type": "eager",
      "format": "json"
    },
    "core/tasks/task-docbot-onboarding-doc.json": {
      "owner": "tasking-agent",
      "route_type": "eager",
      "format": "json"
    },
    "core/tasks/task-docbot-summary-cards.json": {
      "owner": "tasking-agent",
      "route_type": "eager",
      "format": "json"
    },
    "core/tasks/task-docbot-version-changelog.json": {
      "owner": "tasking-agent",
      "route_type": "eager",
      "format": "json"
    },
    "core/tasks/task-document-folder-structure-guidelines.json": {
      "owner": "tasking-agent",
      "route_type": "eager",
      "format": "json"
    },
    "core/tasks/task-enhance-file-router-metadata.json": {
      "owner": "tasking-agent",
      "route_type": "eager",
      "format": "json"
    },
    "core/tasks/task-expand-longterm-agents.json": {
      "owner": "tasking-agent",
      "route_type": "eager",
      "format": "json"
    },
    "core/tasks/task-feedback-loop-from-user.json": {
      "owner": "tasking-agent",
      "route_type": "eager",
      "format": "json"
    },
    "core/tasks/task-feedbacker-anomaly-detection.json": {
      "owner": "tasking-agent",
      "route_type": "eager",
      "format": "json"
    },
    "core/tasks/task-feedbacker-monthly-summary.json": {
      "owner": "tasking-agent",
      "route_type": "eager",
      "format": "json"
    },
    "core/tasks/task-feedbacker-trend-analysis.json": {
      "owner": "tasking-agent",
      "route_type": "eager",
      "format": "json"
    },
    "core/tasks/task-fix-missing-core-agents.json": {
      "owner": "tasking-agent",
      "route_type": "eager",
      "format": "json"
    },
    "core/tasks/task-framework-live-deployment-mode.json": {
      "owner": "tasking-agent",
      "route_type": "eager",
      "format": "json"
    },
    "core/tasks/task-generate-file-router.json": {
      "owner": "tasking-agent",
      "route_type": "eager",
      "format": "json"
    },
    "core/tasks/task-implement-cross-reference-system.json": {
      "owner": "tasking-agent",
      "route_type": "eager",
      "format": "json"
    },
    "core/tasks/task-llm-context-suggestions.json": {
      "owner": "tasking-agent",
      "route_type": "eager",
      "format": "json"
    },
    "core/tasks/task-llm-memory-tracker.json": {
      "owner": "tasking-agent",
      "route_type": "eager",
      "format": "json"
    },
    "core/tasks/task-llm-routing-runtime.json": {
      "owner": "tasking-agent",
      "route_type": "eager",
      "format": "json"
    },
    "core/tasks/task-log-replay-for-improvement.json": {
      "owner": "tasking-agent",
      "route_type": "eager",
      "format": "json"
    },
    "core/tasks/task-planner-milestone-calendar.json": {
      "owner": "tasking-agent",
      "route_type": "eager",
      "format": "json"
    },
    "core/tasks/task-planner-task-grouping.json": {
      "owner": "tasking-agent",
      "route_type": "eager",
      "format": "json"
    },
    "core/tasks/task-planner-timeline-cycles.json": {
      "owner": "tasking-agent",
      "route_type": "eager",
      "format": "json"
    },
    "core/tasks/task-rebuild-core-structure.json": {
      "owner": "tasking-agent",
      "route_type": "eager",
      "format": "json"
    },
    "core/tasks/task-refactor-root-structure.json": {
      "owner": "tasking-agent",
      "route_type": "eager",
      "format": "json"
    },
    "core/tasks/task-regenerate-file-router.json": {
      "owner": "tasking-agent",
      "route_type": "eager",
      "format": "json"
    },
    "core/tasks/task-review-checklist-coverage.json": {
      "owner": "tasking-agent",
      "route_type": "eager",
      "format": "json"
    },
    "core/tasks/task-runtime-discovery-metadata-update.json": {
      "owner": "tasking-agent",
      "route_type": "eager",
      "format": "json"
    },
    "core/tasks/task-schema-diff-viewer.json": {
      "owner": "tasking-agent",
      "route_type": "eager",
      "format": "json"
    },
    "core/tasks/task-schema-runtime-validation.json": {
      "owner": "tasking-agent",
      "route_type": "eager",
      "format": "json"
    },
    "core/tasks/task-schema-version-lock.json": {
      "owner": "tasking-agent",
      "route_type": "eager",
      "format": "json"
    },
    "core/tasks/task-setup-metadata-validation-pipeline.json": {
      "owner": "tasking-agent",
      "route_type": "eager",
      "format": "json"
    },
    "core/tasks/task-simulate-onboarding-sequence.json": {
      "owner": "tasking-agent",
      "route_type": "eager",
      "format": "json"
    },
    "core/tasks/task-snapshot-live-user-release.json": {
      "owner": "tasking-agent",
      "route_type": "eager",
      "format": "json"
    },
    "core/tasks/task-task-tbd.json": {
      "owner": "tasking-agent",
      "route_type": "eager",
      "format": "json"
    },
    "core/tasks/task-trigger-user-checklist.json": {
      "owner": "tasking-agent",
      "route_type": "eager",
      "format": "json"
    },
    "core/tasks/task-update-checklist-doc-links.json": {
      "owner": "tasking-agent",
      "route_type": "eager",
      "format": "json"
    },
    "core/tasks/task-user-goal-setting.json": {
      "owner": "tasking-agent",
      "route_type": "eager",
      "format": "json"
    },
    "docs/AGENT_MODEL_INDEX.md": {
      "owner": "system",
      "route_type": "lazy",
      "format": "markdown"
    },
    "docs/api-schema.yaml": {
      "owner": "system",
      "route_type": "lazy",
      "format": "text"
    },
    "docs/asset-map.md": {
      "owner": "system",
      "route_type": "lazy",
      "format": "markdown"
    },
    "docs/CHANGELOG.md": {
      "owner": "system",
      "route_type": "lazy",
      "format": "markdown"
    },
    "docs/cli-dashboard.md": {
      "owner": "system",
      "route_type": "lazy",
      "format": "markdown"
    },
    "docs/collab-etiquette.md": {
      "owner": "system",
      "route_type": "lazy",
      "format": "markdown"
    },
    "docs/context-coherence-loop.md": {
      "owner": "system",
      "route_type": "lazy",
      "format": "markdown"
    },
    "docs/design-principles.md": {
      "owner": "system",
      "route_type": "lazy",
      "format": "markdown"
    },
    "docs/dev-diary.md": {
      "owner": "system",
      "route_type": "lazy",
      "format": "markdown"
    },
    "docs/evaluation.md": {
      "owner": "system",
      "route_type": "lazy",
      "format": "markdown"
    },
    "docs/example-workflows.md": {
      "owner": "system",
      "route_type": "lazy",
      "format": "markdown"
    },
    "docs/external-integration.md": {
      "owner": "system",
      "route_type": "lazy",
      "format": "markdown"
    },
    "docs/feedback-summary-v17.md": {
      "owner": "system",
      "route_type": "lazy",
      "format": "markdown"
    },
    "docs/final_comprehensive_project_summary.md": {
      "owner": "system",
      "route_type": "lazy",
      "format": "markdown"
    },
    "docs/folder-structure-proposal.md": {
      "owner": "system",
      "route_type": "lazy",
      "format": "markdown"
    },
    "docs/forecast-history.md": {
      "owner": "system",
      "route_type": "lazy",
      "format": "markdown"
    },
    "docs/forecast.md": {
      "owner": "system",
      "route_type": "lazy",
      "format": "markdown"
    },
    "docs/governance.md": {
      "owner": "system",
      "route_type": "lazy",
      "format": "markdown"
    },
    "docs/how-to-add-agent.md": {
      "owner": "system",
      "route_type": "lazy",
      "format": "markdown"
    },
    "docs/how-to-assume-agent.md": {
      "owner": "system",
      "route_type": "lazy",
      "format": "markdown"
    },
    "docs/how-to-extend-pipeline.md": {
      "owner": "system",
      "route_type": "lazy",
      "format": "markdown"
    },
    "docs/intent-discovery-v18.json": {
      "owner": "system",
      "route_type": "lazy",
      "format": "json"
    },
    "docs/intent-discovery-v19.json": {
      "owner": "system",
      "route_type": "lazy",
      "format": "json"
    },
    "docs/intents.md": {
      "owner": "system",
      "route_type": "lazy",
      "format": "markdown"
    },
    "docs/manual-mode.md": {
      "owner": "system",
      "route_type": "lazy",
      "format": "markdown"
    },
    "docs/memory-api.md": {
      "owner": "system",
      "route_type": "lazy",
      "format": "markdown"
    },
    "docs/memory-runner-docs.md": {
      "owner": "system",
      "route_type": "lazy",
      "format": "markdown"
    },
    "docs/navigation-index.json": {
      "owner": "system",
      "route_type": "lazy",
      "format": "json"
    },
    "docs/ONBOARDING.md": {
      "owner": "system",
      "route_type": "lazy",
      "format": "markdown"
    },
    "docs/persona-guide.json": {
      "owner": "system",
      "route_type": "lazy",
      "format": "json"
    },
    "docs/plan.md": {
      "owner": "system",
      "route_type": "lazy",
      "format": "markdown"
    },
    "docs/PROJECT-TASKS.md": {
      "owner": "system",
      "route_type": "lazy",
      "format": "markdown"
    },
    "docs/quick-pipeline-format.md": {
      "owner": "system",
      "route_type": "lazy",
      "format": "markdown"
    },
    "docs/README-HUMAN.md": {
      "owner": "system",
      "route_type": "lazy",
      "format": "markdown"
    },
    "docs/README-LLM.md": {
      "owner": "system",
      "route_type": "lazy",
      "format": "markdown"
    },
    "docs/README-ONBOARDING.md": {
      "owner": "system",
      "route_type": "lazy",
      "format": "markdown"
    },
    "docs/README-QUICK-PIPELINE.md": {
      "owner": "system",
      "route_type": "lazy",
      "format": "markdown"
    },
    "docs/registered-template.json": {
      "owner": "system",
      "route_type": "lazy",
      "format": "json"
    },
    "docs/release-checklist.md": {
      "owner": "system",
      "route_type": "lazy",
      "format": "markdown"
    },
    "docs/retrospective-v0.23.0.md": {
      "owner": "system",
      "route_type": "lazy",
      "format": "markdown"
    },
    "docs/reviewkeeper-report.md": {
      "owner": "system",
      "route_type": "lazy",
      "format": "markdown"
    },
    "docs/roadmap-agent-goal-proposals.json": {
      "owner": "system",
      "route_type": "lazy",
      "format": "json"
    },
    "docs/roadmap-matrix.md": {
      "owner": "system",
      "route_type": "lazy",
      "format": "markdown"
    },
    "docs/roadmap-patch-trust-filter.json": {
      "owner": "system",
      "route_type": "lazy",
      "format": "json"
    },
    "docs/roadmap-v0.24.0.md": {
      "owner": "system",
      "route_type": "lazy",
      "format": "markdown"
    },
    "docs/roadmap-v0.25.1.md": {
      "owner": "system",
      "route_type": "lazy",
      "format": "markdown"
    },
    "docs/roadmap-v0.26.0-tasks.json": {
      "owner": "system",
      "route_type": "lazy",
      "format": "json"
    },
    "docs/roadmap-v0.29.0-tasks.json": {
      "owner": "system",
      "route_type": "lazy",
      "format": "json"
    },
    "docs/roadmap.md": {
      "owner": "system",
      "route_type": "lazy",
      "format": "markdown"
    },
    "docs/router-schema-reference.md": {
      "owner": "system",
      "route_type": "lazy",
      "format": "markdown"
    },
    "docs/routines-index.md": {
      "owner": "system",
      "route_type": "lazy",
      "format": "markdown"
    },
    "docs/system-checklist.md": {
      "owner": "system",
      "route_type": "lazy",
      "format": "markdown"
    },
    "docs/system-index.json": {
      "owner": "system",
      "route_type": "lazy",
      "format": "json"
    },
    "docs/system-resilience-checklist.md": {
      "owner": "system",
      "route_type": "lazy",
      "format": "markdown"
    },
    "docs/task-dependencies.md": {
      "owner": "system",
      "route_type": "lazy",
      "format": "markdown"
    },
    "docs/task-graph-doc.md": {
      "owner": "system",
      "route_type": "lazy",
      "format": "markdown"
    },
    "docs/webhook-integration.md": {
      "owner": "system",
      "route_type": "lazy",
      "format": "markdown"
    },
    "docs/agents/docs-agent.md": {
      "owner": "system",
      "route_type": "lazy",
      "format": "markdown"
    },
    "docs/agents/frontend-agent.md": {
      "owner": "system",
      "route_type": "lazy",
      "format": "markdown"
    },
    "docs/diagrams/snapshot-introspection-diagram.puml": {
      "owner": "system",
      "route_type": "lazy",
      "format": "diagram"
    },
    "docs/generated/phase12-market-token-dashboard.json": {
      "owner": "system",
      "route_type": "lazy",
      "format": "json"
    },
    "features/feature-map.json": {
      "owner": "system",
      "route_type": "lazy",
      "format": "json"
    },
    "forecasts/forecast-docbot.json": {
      "owner": "system",
      "route_type": "eager",
      "format": "json"
    },
    "forecasts/forecast-feedbacker.json": {
      "owner": "system",
      "route_type": "eager",
      "format": "json"
    },
    "forecasts/forecast-forecaster.json": {
      "owner": "system",
      "route_type": "eager",
      "format": "json"
    },
    "forecasts/forecast-planner.json": {
      "owner": "system",
      "route_type": "eager",
      "format": "json"
    },
    "forecasts/forecast-schemaenforcer.json": {
      "owner": "system",
      "route_type": "eager",
      "format": "json"
    },
    "forecasts/bootstrap-agent/timeline-memory.json": {
      "owner": "system",
      "route_type": "eager",
      "format": "json"
    },
    "framework/version.json": {
      "owner": "system",
      "route_type": "eager",
      "format": "json"
    },
    "framework/agents/coveragebot.identity.md": {
      "owner": "system",
      "route_type": "eager",
      "format": "markdown"
    },
    "framework/agents/llmrouter.identity.md": {
      "owner": "system",
      "route_type": "eager",
      "format": "markdown"
    },
    "framework/agents/schemaenforcer.identity.md": {
      "owner": "system",
      "route_type": "eager",
      "format": "markdown"
    },
    "framework/agents/structurekeeper.identity.md": {
      "owner": "system",
      "route_type": "eager",
      "format": "markdown"
    },
    "framework/checklists/integration-graph-checklist.md": {
      "owner": "system",
      "route_type": "eager",
      "format": "markdown"
    },
    "framework/checklists/logger-checklist.json": {
      "owner": "system",
      "route_type": "eager",
      "format": "json"
    },
    "framework/checklists/memory-enhancement-checklist.md": {
      "owner": "system",
      "route_type": "eager",
      "format": "markdown"
    },
    "framework/checklists/orchestrator-checklist.json": {
      "owner": "system",
      "route_type": "eager",
      "format": "json"
    },
    "framework/checklists/planner-checklist.md": {
      "owner": "system",
      "route_type": "eager",
      "format": "markdown"
    },
    "framework/checklists/planner-feedback-forecast-checklist.md": {
      "owner": "system",
      "route_type": "eager",
      "format": "markdown"
    },
    "framework/checklists/release-integrity-checklist.json": {
      "owner": "system",
      "route_type": "eager",
      "format": "json"
    },
    "framework/checklists/release-packaging-checklist.json": {
      "owner": "system",
      "route_type": "eager",
      "format": "json"
    },
    "framework/checklists/reviewkeeper-checklist.md": {
      "owner": "system",
      "route_type": "eager",
      "format": "markdown"
    },
    "framework/checklists/router-checklist.json": {
      "owner": "system",
      "route_type": "eager",
      "format": "json"
    },
    "framework/checklists/runner-and-memory-checklist.md": {
      "owner": "system",
      "route_type": "eager",
      "format": "markdown"
    },
    "framework/checklists/structurekeeper-checklist.md": {
      "owner": "system",
      "route_type": "eager",
      "format": "markdown"
    },
    "framework/checklists/unified-agent-checklist.md": {
      "owner": "system",
      "route_type": "eager",
      "format": "markdown"
    },
    "framework/checklists/unified-checklist.md": {
      "owner": "system",
      "route_type": "eager",
      "format": "markdown"
    },
    "framework/docs/AGENT_LOG.md": {
      "owner": "system",
      "route_type": "eager",
      "format": "markdown"
    },
    "framework/docs/collaborative-network-spec.md": {
      "owner": "system",
      "route_type": "eager",
      "format": "markdown"
    },
    "framework/docs/docbot.identity.md": {
      "owner": "system",
      "route_type": "eager",
      "format": "markdown"
    },
    "framework/docs/dynamic-agent-routing-config.json": {
      "owner": "system",
      "route_type": "eager",
      "format": "json"
    },
    "framework/docs/forecaster.identity.md": {
      "owner": "system",
      "route_type": "eager",
      "format": "markdown"
    },
    "framework/docs/log-manager.json": {
      "owner": "system",
      "route_type": "eager",
      "format": "json"
    },
    "framework/docs/orchestrator-release-zip-pipeline.json": {
      "owner": "system",
      "route_type": "eager",
      "format": "json"
    },
    "framework/docs/realtime-llm-assistant.identity.md": {
      "owner": "system",
      "route_type": "eager",
      "format": "markdown"
    },
    "framework/docs/reviewkeeper.identity.md": {
      "owner": "system",
      "route_type": "eager",
      "format": "markdown"
    },
    "framework/docs/tasks.json": {
      "owner": "system",
      "route_type": "eager",
      "format": "json"
    },
    "framework/docs/validate-evolution-phase.json": {
      "owner": "system",
      "route_type": "eager",
      "format": "json"
    },
    "framework/docs/schema-summaries/structure-hygiene.schema.md": {
      "owner": "system",
      "route_type": "eager",
      "format": "markdown"
    },
    "framework/feedback/reflection-schema-audit-001.json": {
      "owner": "system",
      "route_type": "eager",
      "format": "json"
    },
    "framework/feedback/reflection-structure-hygiene-system.json": {
      "owner": "system",
      "route_type": "eager",
      "format": "json"
    },
    "framework/feedback/conversations/reflection-structure-consensus-001.json": {
      "owner": "system",
      "route_type": "eager",
      "format": "json"
    },
    "framework/feedback/conversations/reflection-structure-consensus-02.json": {
      "owner": "system",
      "route_type": "eager",
      "format": "json"
    },
    "framework/feedback/conversations/reflection-structure-consensus-03.json": {
      "owner": "system",
      "route_type": "eager",
      "format": "json"
    },
    "framework/feedback/conversations/reflection-structure-consensus-04.json": {
      "owner": "system",
      "route_type": "eager",
      "format": "json"
    },
    "framework/feedback/conversations/reflection-structure-consensus-05.json": {
      "owner": "system",
      "route_type": "eager",
      "format": "json"
    },
    "framework/feedback/conversations/reflection-structure-consensus-06.json": {
      "owner": "system",
      "route_type": "eager",
      "format": "json"
    },
    "framework/feedback/conversations/reflection-structure-consensus-07.json": {
      "owner": "system",
      "route_type": "eager",
      "format": "json"
    },
    "framework/feedback/conversations/reflection-structure-consensus-08.json": {
      "owner": "system",
      "route_type": "eager",
      "format": "json"
    },
    "framework/feedback/conversations/reflection-structure-consensus-09.json": {
      "owner": "system",
      "route_type": "eager",
      "format": "json"
    },
    "framework/feedback/conversations/reflection-structure-consensus-10.json": {
      "owner": "system",
      "route_type": "eager",
      "format": "json"
    },
    "framework/feedback/conversations/reflection-structure-consensus-11.json": {
      "owner": "system",
      "route_type": "eager",
      "format": "json"
    },
    "framework/feedback/conversations/reflection-structure-consensus-12.json": {
      "owner": "system",
      "route_type": "eager",
      "format": "json"
    },
    "framework/feedback/conversations/reflection-structure-consensus-13.json": {
      "owner": "system",
      "route_type": "eager",
      "format": "json"
    },
    "framework/feedback/conversations/reflection-structure-consensus-14.json": {
      "owner": "system",
      "route_type": "eager",
      "format": "json"
    },
    "framework/feedback/conversations/reflection-structure-consensus-15.json": {
      "owner": "system",
      "route_type": "eager",
      "format": "json"
    },
    "framework/feedback/conversations/reflection-structure-consensus-16.json": {
      "owner": "system",
      "route_type": "eager",
      "format": "json"
    },
    "framework/feedback/conversations/reflection-structure-consensus-17.json": {
      "owner": "system",
      "route_type": "eager",
      "format": "json"
    },
    "framework/feedback/conversations/reflection-structure-consensus-18.json": {
      "owner": "system",
      "route_type": "eager",
      "format": "json"
    },
    "framework/feedback/conversations/reflection-structure-consensus-19.json": {
      "owner": "system",
      "route_type": "eager",
      "format": "json"
    },
    "framework/feedback/conversations/reflection-structure-consensus-20.json": {
      "owner": "system",
      "route_type": "eager",
      "format": "json"
    },
    "framework/feedback/conversations/reflection-structure-review-final.json": {
      "owner": "system",
      "route_type": "eager",
      "format": "json"
    },
    "framework/goals/clustering-spec.md": {
      "owner": "system",
      "route_type": "eager",
      "format": "markdown"
    },
    "framework/goals/goal-structure-hygiene.json": {
      "owner": "system",
      "route_type": "eager",
      "format": "json"
    },
    "framework/goals/planner.identity.md": {
      "owner": "system",
      "route_type": "eager",
      "format": "markdown"
    },
    "framework/goals/tasks.json": {
      "owner": "system",
      "route_type": "eager",
      "format": "json"
    },
    "framework/logs/log-manager.json": {
      "owner": "system",
      "route_type": "eager",
      "format": "json"
    },
    "framework/logs/conversations/schema-agent-recommendation.json": {
      "owner": "system",
      "route_type": "eager",
      "format": "json"
    },
    "framework/logs/system/schema-coverage.json": {
      "owner": "system",
      "route_type": "eager",
      "format": "json"
    },
    "framework/memory/design-architecture-updates.md": {
      "owner": "system",
      "route_type": "eager",
      "format": "markdown"
    },
    "framework/memory/framework-capabilities.md": {
      "owner": "system",
      "route_type": "eager",
      "format": "markdown"
    },
    "framework/memory/memory_bank.archived.json": {
      "owner": "system",
      "route_type": "eager",
      "format": "json"
    },
    "framework/memory/memory_bank.json": {
      "owner": "system",
      "route_type": "eager",
      "format": "json"
    },
    "framework/memory/project-mission-and-alignment.md": {
      "owner": "system",
      "route_type": "eager",
      "format": "markdown"
    },
    "framework/memory/project-review_structure-clarity.md": {
      "owner": "system",
      "route_type": "eager",
      "format": "markdown"
    },
    "framework/pipelines/market-bidding-cycle.json": {
      "owner": "orchestrator-agent",
      "route_type": "eager",
      "format": "json"
    },
    "framework/pipelines/orphan-file-clean.json": {
      "owner": "orchestrator-agent",
      "route_type": "eager",
      "format": "json"
    },
    "framework/pipelines/pipeline-release-diff-aware.json": {
      "owner": "orchestrator-agent",
      "route_type": "eager",
      "format": "json"
    },
    "framework/pipelines/pipeline-release-vNEXT.json": {
      "owner": "orchestrator-agent",
      "route_type": "eager",
      "format": "json"
    },
    "framework/pipelines/routing-validation.json": {
      "owner": "orchestrator-agent",
      "route_type": "eager",
      "format": "json"
    },
    "framework/pipelines/structure-merge-check.json": {
      "owner": "orchestrator-agent",
      "route_type": "eager",
      "format": "json"
    },
    "framework/pipelines/validate-release-scope.json": {
      "owner": "orchestrator-agent",
      "route_type": "eager",
      "format": "json"
    },
    "framework/routines/auto-patch-pipeline-outputs.json": {
      "owner": "system",
      "route_type": "eager",
      "format": "json"
    },
    "framework/routines/cleanup-framework-structure.json": {
      "owner": "system",
      "route_type": "eager",
      "format": "json"
    },
    "framework/routines/detect-zombie-artifacts.json": {
      "owner": "system",
      "route_type": "eager",
      "format": "json"
    },
    "framework/routines/on-release-preflight.json": {
      "owner": "system",
      "route_type": "eager",
      "format": "json"
    },
    "framework/routing/override-rules.json": {
      "owner": "system",
      "route_type": "eager",
      "format": "json"
    },
    "framework/schemas/agent-schema.json": {
      "owner": "system",
      "route_type": "eager",
      "format": "json"
    },
    "framework/schemas/default-schema.json": {
      "owner": "system",
      "route_type": "eager",
      "format": "json"
    },
    "framework/schemas/feedback-schema.json": {
      "owner": "system",
      "route_type": "eager",
      "format": "json"
    },
    "framework/schemas/goal-schema.json": {
      "owner": "system",
      "route_type": "eager",
      "format": "json"
    },
    "framework/schemas/log-schema.json": {
      "owner": "system",
      "route_type": "eager",
      "format": "json"
    },
    "framework/schemas/memory-schema.json": {
      "owner": "system",
      "route_type": "eager",
      "format": "json"
    },
    "framework/schemas/pipeline-schema.json": {
      "owner": "system",
      "route_type": "eager",
      "format": "json"
    },
    "framework/schemas/routine-schema.json": {
      "owner": "system",
      "route_type": "eager",
      "format": "json"
    },
    "framework/schemas/routing-schema.json": {
      "owner": "system",
      "route_type": "eager",
      "format": "json"
    },
    "framework/schemas/structure-hygiene.schema.json": {
      "owner": "system",
      "route_type": "eager",
      "format": "json"
    },
    "framework/schemas/task-schema.json": {
      "owner": "system",
      "route_type": "eager",
      "format": "json"
    },
    "framework/tasks/feedbacker.identity.md": {
      "owner": "tasking-agent",
      "route_type": "eager",
      "format": "markdown"
    },
    "framework/tasks/task-cleanup-execution.json": {
      "owner": "tasking-agent",
      "route_type": "eager",
      "format": "json"
    },
    "framework/tasks/TASK_EXECUTION_DASHBOARD.md": {
      "owner": "tasking-agent",
      "route_type": "eager",
      "format": "markdown"
    },
    "goals/goal-boot.json": {
      "owner": "system",
      "route_type": "eager",
      "format": "json"
    },
    "goals/goal-docbot-6aff77.json": {
      "owner": "system",
      "route_type": "eager",
      "format": "json"
    },
    "goals/goal-feedbacker-d6efda.json": {
      "owner": "system",
      "route_type": "eager",
      "format": "json"
    },
    "goals/goal-forecaster-3adeea.json": {
      "owner": "system",
      "route_type": "eager",
      "format": "json"
    },
    "goals/goal-reviewkeeper-e833d4.json": {
      "owner": "system",
      "route_type": "eager",
      "format": "json"
    },
    "goals/goal-roadmap-boot.json": {
      "owner": "system",
      "route_type": "eager",
      "format": "json"
    },
    "goals/goal-schemaenforcer-51f700.json": {
      "owner": "system",
      "route_type": "eager",
      "format": "json"
    },
    "goals/goal-threads.json": {
      "owner": "system",
      "route_type": "eager",
      "format": "json"
    },
    "goals/goal-timeline.json": {
      "owner": "system",
      "route_type": "eager",
      "format": "json"
    },
    "governance/co-creation-protocol.json": {
      "owner": "system",
      "route_type": "eager",
      "format": "json"
    },
    "governance/lifecycle-policy.json": {
      "owner": "system",
      "route_type": "eager",
      "format": "json"
    },
    "governance/linting-rules.json": {
      "owner": "system",
      "route_type": "eager",
      "format": "json"
    },
    "governance/trust-orchestration.json": {
      "owner": "system",
      "route_type": "eager",
      "format": "json"
    },
    "governance/policies/marketplace-governance-v1.json": {
      "owner": "system",
      "route_type": "eager",
      "format": "json"
    },
    "governance/policies/swarm-governance-v1.json": {
      "owner": "system",
      "route_type": "eager",
      "format": "json"
    },
    "governance/policies/token-regeneration-v1.json": {
      "owner": "system",
      "route_type": "eager",
      "format": "json"
    },
    "governance/rules/rule-agents-cannot-edit-pipeline-map.json": {
      "owner": "system",
      "route_type": "eager",
      "format": "json"
    },
    "memory-bank/control-state.json": {
      "owner": "system",
      "route_type": "eager",
      "format": "json"
    },
    "memory-bank/generated-checklist-tasks.json": {
      "owner": "system",
      "route_type": "eager",
      "format": "json"
    },
    "memory-bank/index-context.md": {
      "owner": "system",
      "route_type": "eager",
      "format": "markdown"
    },
    "memory-bank/index.json": {
      "owner": "system",
      "route_type": "eager",
      "format": "json"
    },
    "memory-bank/memory-metadata.json": {
      "owner": "system",
      "route_type": "eager",
      "format": "json"
    },
    "memory-bank/pattern-memory.json": {
      "owner": "system",
      "route_type": "eager",
      "format": "json"
    },
    "memory-bank/upcoming-features.json": {
      "owner": "system",
      "route_type": "eager",
      "format": "json"
    },
    "memory-bank/evolving/pending-tasks.json": {
      "owner": "system",
      "route_type": "eager",
      "format": "json"
    },
    "memory-bank/fixed/phase-10-temporal.json": {
      "owner": "system",
      "route_type": "eager",
      "format": "json"
    },
    "memory-bank/fixed/phase-8-self-evolving.json": {
      "owner": "system",
      "route_type": "eager",
      "format": "json"
    },
    "memory-bank/fixed/phase-9-federation.json": {
      "owner": "system",
      "route_type": "eager",
      "format": "json"
    },
    "meta/active-context.json": {
      "owner": "system",
      "route_type": "eager",
      "format": "json"
    },
    "meta/file-router.json": {
      "owner": "system",
      "route_type": "eager",
      "format": "json"
    },
    "meta/intent-register-snapshot-introspection.json": {
      "owner": "system",
      "route_type": "eager",
      "format": "json"
    },
    "meta/intent.json": {
      "owner": "system",
      "route_type": "eager",
      "format": "json"
    },
    "meta/routine-backlinks.json": {
      "owner": "system",
      "route_type": "eager",
      "format": "json"
    },
    "meta/snapshot-introspection-manifest.json": {
      "owner": "system",
      "route_type": "eager",
      "format": "json"
    },
    "meta/intents/regenerate-system-snapshot-intent.json": {
      "owner": "system",
      "route_type": "eager",
      "format": "json"
    },
    "meta/trust/trust-index.json": {
      "owner": "system",
      "route_type": "eager",
      "format": "json"
    },
    "pipelines/orchestrator-release-zip-pipeline.json": {
      "owner": "orchestrator-agent",
      "route_type": "eager",
      "format": "json"
    },
    "plans/agent-collab-performance-fork.json": {
      "owner": "planner-agent",
      "route_type": "eager",
      "format": "json"
    },
    "plans/agent-collab-plan.json": {
      "owner": "planner-agent",
      "route_type": "eager",
      "format": "json"
    },
    "plans/intent-release-v0.24.0.json": {
      "owner": "planner-agent",
      "route_type": "eager",
      "format": "json"
    },
    "plans/next-evolution-phase.json": {
      "owner": "planner-agent",
      "route_type": "eager",
      "format": "json"
    },
    "plans/phase-10-routing-autonomy.json": {
      "owner": "planner-agent",
      "route_type": "eager",
      "format": "json"
    },
    "plans/phase-11-swarm-memory-convergence.json": {
      "owner": "planner-agent",
      "route_type": "eager",
      "format": "json"
    },
    "plans/phase-12-agent-market-economy.json": {
      "owner": "planner-agent",
      "route_type": "eager",
      "format": "json"
    },
    "plans/phase-13-agent-challenges-and-reflection.json": {
      "owner": "planner-agent",
      "route_type": "eager",
      "format": "json"
    },
    "plans/phase-14-memory-alignment-and-role-negotiation.json": {
      "owner": "planner-agent",
      "route_type": "eager",
      "format": "json"
    },
    "plans/phase-9-system-evolution.json": {
      "owner": "planner-agent",
      "route_type": "eager",
      "format": "json"
    },
    "plans/structured-plans.json": {
      "owner": "planner-agent",
      "route_type": "eager",
      "format": "json"
    },
    "plans/agent-srp-cleanup/plan.json": {
      "owner": "planner-agent",
      "route_type": "eager",
      "format": "json"
    },
    "plans/agent-srp-cleanup/tasks.json": {
      "owner": "planner-agent",
      "route_type": "eager",
      "format": "json"
    },
    "plans/bootstrap/plan.json": {
      "owner": "planner-agent",
      "route_type": "eager",
      "format": "json"
    },
    "plans/bootstrap/tasks.json": {
      "owner": "planner-agent",
      "route_type": "eager",
      "format": "json"
    },
    "plans/extend-agent-abstractions/plan.json": {
      "owner": "planner-agent",
      "route_type": "eager",
      "format": "json"
    },
    "plans/extend-agent-abstractions/tasks.json": {
      "owner": "planner-agent",
      "route_type": "eager",
      "format": "json"
    },
    "plans/feature-audit/plan.json": {
      "owner": "planner-agent",
      "route_type": "eager",
      "format": "json"
    },
    "plans/feature-audit/tasks.json": {
      "owner": "planner-agent",
      "route_type": "eager",
      "format": "json"
    },
    "plans/final-audit-fix/plan.json": {
      "owner": "planner-agent",
      "route_type": "eager",
      "format": "json"
    },
    "plans/final-audit-fix/tasks.json": {
      "owner": "planner-agent",
      "route_type": "eager",
      "format": "json"
    },
    "plans/fine-tune/plan.json": {
      "owner": "planner-agent",
      "route_type": "eager",
      "format": "json"
    },
    "plans/fine-tune/tasks.json": {
      "owner": "planner-agent",
      "route_type": "eager",
      "format": "json"
    },
    "plans/fix-content/plan.json": {
      "owner": "planner-agent",
      "route_type": "eager",
      "format": "json"
    },
    "plans/fix-content/tasks.json": {
      "owner": "planner-agent",
      "route_type": "eager",
      "format": "json"
    },
    "plans/onboarding-agent-bootstrap/plan.json": {
      "owner": "planner-agent",
      "route_type": "eager",
      "format": "json"
    },
    "plans/onboarding-agent-bootstrap/tasks.json": {
      "owner": "planner-agent",
      "route_type": "eager",
      "format": "json"
    },
    "plans/onboarding-refinement-patch/plan.json": {
      "owner": "planner-agent",
      "route_type": "eager",
      "format": "json"
    },
    "plans/onboarding-refinement-patch/tasks.json": {
      "owner": "planner-agent",
      "route_type": "eager",
      "format": "json"
    },
    "plans/org-knowledge-agent-bootstrap/plan.json": {
      "owner": "planner-agent",
      "route_type": "eager",
      "format": "json"
    },
    "plans/org-knowledge-agent-bootstrap/tasks.json": {
      "owner": "planner-agent",
      "route_type": "eager",
      "format": "json"
    },
    "plans/phase-11/swarm-routines-proposed.json": {
      "owner": "planner-agent",
      "route_type": "eager",
      "format": "json"
    },
    "plans/phase-13/challenges/reflection-race-001.json": {
      "owner": "planner-agent",
      "route_type": "eager",
      "format": "json"
    },
    "plans/phase-15/prep-plan-autonomous-consistency-and-indexing.json": {
      "owner": "planner-agent",
      "route_type": "eager",
      "format": "json"
    },
    "plans/reuse-corrida-elements/plan.json": {
      "owner": "planner-agent",
      "route_type": "eager",
      "format": "json"
    },
    "plans/reuse-corrida-elements/tasks.json": {
      "owner": "planner-agent",
      "route_type": "eager",
      "format": "json"
    },
    "plans/root-collaboration-bootstrap/plan.json": {
      "owner": "planner-agent",
      "route_type": "eager",
      "format": "json"
    },
    "plans/root-collaboration-bootstrap/tasks.json": {
      "owner": "planner-agent",
      "route_type": "eager",
      "format": "json"
    },
    "plans/self-evolve/retrospective-insights.json": {
      "owner": "planner-agent",
      "route_type": "eager",
      "format": "json"
    },
    "plans/self-evolving/plan.json": {
      "owner": "planner-agent",
      "route_type": "eager",
      "format": "json"
    },
    "plans/self-evolving/tasks.json": {
      "owner": "planner-agent",
      "route_type": "eager",
      "format": "json"
    },
    "plans/system-resilience/plan.json": {
      "owner": "planner-agent",
      "route_type": "eager",
      "format": "json"
    },
    "plans/system-resilience/planner-goals-extension.json": {
      "owner": "planner-agent",
      "route_type": "eager",
      "format": "json"
    },
    "plans/system-resilience/resilience-upgrade-plan-v1.json": {
      "owner": "planner-agent",
      "route_type": "eager",
      "format": "json"
    },
    "plans/system-resilience/tasks.json": {
      "owner": "planner-agent",
      "route_type": "eager",
      "format": "json"
    },
    "plans/system-upgrade/agent-review-upgrade-plan-v1.json": {
      "owner": "planner-agent",
      "route_type": "eager",
      "format": "json"
    },
    "plans/template-pipeline-library/context-compression-pipeline.json": {
      "owner": "planner-agent",
      "route_type": "eager",
      "format": "json"
    },
    "plans/template-pipeline-library/conversation-to-pipeline.json": {
      "owner": "planner-agent",
      "route_type": "eager",
      "format": "json"
    },
    "plans/template-pipeline-library/ethics-audit-pipeline.json": {
      "owner": "planner-agent",
      "route_type": "eager",
      "format": "json"
    },
    "plans/template-pipeline-library/fallback-resolution-pipeline.json": {
      "owner": "planner-agent",
      "route_type": "eager",
      "format": "json"
    },
    "plans/template-pipeline-library/file-content-schema-audit-pipeline.json": {
      "owner": "planner-agent",
      "route_type": "eager",
      "format": "json"
    },
    "plans/template-pipeline-library/plan-retrospective-pipeline.json": {
      "owner": "planner-agent",
      "route_type": "eager",
      "format": "json"
    },
    "plans/template-pipeline-library/routine-gap-detection-pipeline.json": {
      "owner": "planner-agent",
      "route_type": "eager",
      "format": "json"
    },
    "plans/template-pipeline-library/snapshot-sync-pipeline.json": {
      "owner": "planner-agent",
      "route_type": "eager",
      "format": "json"
    },
    "plans/template-pipeline-library/suggest-checklist-and-identity-updates-during-session.json": {
      "owner": "planner-agent",
      "route_type": "eager",
      "format": "json"
    },
    "plans/v0.26.0/task-followups-from-roadmap.json": {
      "owner": "planner-agent",
      "route_type": "eager",
      "format": "json"
    },
    "routing/pipeline-playground.md": {
      "owner": "system",
      "route_type": "eager",
      "format": "markdown"
    },
    "routing/routing-rules.json": {
      "owner": "system",
      "route_type": "eager",
      "format": "json"
    },
    "schemas/agent-challenge.schema.json": {
      "owner": "system",
      "route_type": "eager",
      "format": "json"
    },
    "schemas/agent-evolution-score.json": {
      "owner": "system",
      "route_type": "eager",
      "format": "json"
    },
    "schemas/agent-marketplace.schema.json": {
      "owner": "system",
      "route_type": "eager",
      "format": "json"
    },
    "schemas/canonical-agent-instances.json": {
      "owner": "system",
      "route_type": "eager",
      "format": "json"
    },
    "schemas/canonical-agent-model-metadata.json": {
      "owner": "system",
      "route_type": "eager",
      "format": "json"
    },
    "schemas/canonical-agent-model.json": {
      "owner": "system",
      "route_type": "eager",
      "format": "json"
    },
    "schemas/config-schema-vNext.json": {
      "owner": "system",
      "route_type": "eager",
      "format": "json"
    },
    "schemas/context-router.schema-lifecycle.json": {
      "owner": "system",
      "route_type": "eager",
      "format": "json"
    },
    "schemas/context-router.schema-metadata.json": {
      "owner": "system",
      "route_type": "eager",
      "format": "json"
    },
    "schemas/context-router.schema.json": {
      "owner": "system",
      "route_type": "eager",
      "format": "json"
    },
    "schemas/debate-vote.json": {
      "owner": "system",
      "route_type": "eager",
      "format": "json"
    },
    "schemas/dynamic-agent-routing.schema.json": {
      "owner": "system",
      "route_type": "eager",
      "format": "json"
    },
    "schemas/feature.schema-lifecycle.json": {
      "owner": "system",
      "route_type": "eager",
      "format": "json"
    },
    "schemas/feature.schema-metadata.json": {
      "owner": "system",
      "route_type": "eager",
      "format": "json"
    },
    "schemas/feature.schema.json": {
      "owner": "system",
      "route_type": "eager",
      "format": "json"
    },
    "schemas/forkable-plan.json": {
      "owner": "system",
      "route_type": "eager",
      "format": "json"
    },
    "schemas/lifecycle-metadata.json": {
      "owner": "system",
      "route_type": "eager",
      "format": "json"
    },
    "schemas/memory-fusion.schema.json": {
      "owner": "system",
      "route_type": "eager",
      "format": "json"
    },
    "schemas/memory.schema.json": {
      "owner": "system",
      "route_type": "eager",
      "format": "json"
    },
    "schemas/pipeline.schema-lifecycle.json": {
      "owner": "system",
      "route_type": "eager",
      "format": "json"
    },
    "schemas/pipeline.schema-metadata.json": {
      "owner": "system",
      "route_type": "eager",
      "format": "json"
    },
    "schemas/pipeline.schema.json": {
      "owner": "system",
      "route_type": "eager",
      "format": "json"
    },
    "schemas/routine-manifest.schema-lifecycle.json": {
      "owner": "system",
      "route_type": "eager",
      "format": "json"
    },
    "schemas/routine-manifest.schema-metadata.json": {
      "owner": "system",
      "route_type": "eager",
      "format": "json"
    },
    "schemas/routine-manifest.schema.json": {
      "owner": "system",
      "route_type": "eager",
      "format": "json"
    },
    "schemas/routing-rules-schema.json": {
      "owner": "system",
      "route_type": "eager",
      "format": "json"
    },
    "schemas/schema-config.json": {
      "owner": "system",
      "route_type": "eager",
      "format": "json"
    },
    "schemas/schema-index-lifecycle.json": {
      "owner": "system",
      "route_type": "eager",
      "format": "json"
    },
    "schemas/schema-index.json": {
      "owner": "system",
      "route_type": "eager",
      "format": "json"
    },
    "schemas/schema-index.repaired.json": {
      "owner": "system",
      "route_type": "eager",
      "format": "json"
    },
    "schemas/schema-metadata-metadata.json": {
      "owner": "system",
      "route_type": "eager",
      "format": "json"
    },
    "schemas/schema-metadata.json": {
      "owner": "system",
      "route_type": "eager",
      "format": "json"
    },
    "schemas/schema-version-tracker-lifecycle.json": {
      "owner": "system",
      "route_type": "eager",
      "format": "json"
    },
    "schemas/schema-version-tracker.json": {
      "owner": "system",
      "route_type": "eager",
      "format": "json"
    },
    "schemas/synthesized-memory-index.json": {
      "owner": "system",
      "route_type": "eager",
      "format": "json"
    },
    "schemas/version-history.json": {
      "owner": "system",
      "route_type": "eager",
      "format": "json"
    },
    "snapshots/active-pipeline-manifest-v0.1.0.json": {
      "owner": "system",
      "route_type": "eager",
      "format": "json"
    },
    "snapshots/orchestration-bundle-v0.1.0.json": {
      "owner": "system",
      "route_type": "eager",
      "format": "json"
    },
    "snapshots/patched-config-state.json": {
      "owner": "system",
      "route_type": "eager",
      "format": "json"
    },
    "snapshots/task-graph-v0.1.0.json": {
      "owner": "system",
      "route_type": "eager",
      "format": "json"
    },
    "synthesized/synth_agents.json": {
      "owner": "system",
      "route_type": "eager",
      "format": "json"
    },
    "synthesized/synth_feedback.json": {
      "owner": "system",
      "route_type": "eager",
      "format": "json"
    },
    "synthesized/synth_governance.json": {
      "owner": "system",
      "route_type": "eager",
      "format": "json"
    },
    "synthesized/synth_memory_bank.json": {
      "owner": "system",
      "route_type": "eager",
      "format": "json"
    },
    "synthesized/synth_task_graphs.json": {
      "owner": "system",
      "route_type": "eager",
      "format": "json"
    },
    "plans/bootstrap/coldstart-bootstrap-pipeline.json": {
      "owner": "planner-agent",
      "route_type": "eager",
      "format": "json"
    },
    "core/tasks/task-generate-coldstart-snapshot.json": {
      "owner": "tasking-agent",
      "route_type": "eager",
      "format": "json"
    },
    "core/tasks/task-compare-snapshot-with-live-files.json": {
      "owner": "tasking-agent",
      "route_type": "eager",
      "format": "json"
    },
    "core/tasks/task-generate-canonical-manifest.json": {
      "owner": "tasking-agent",
      "route_type": "eager",
      "format": "json"
    },
    "docs/coldstart.md": {
      "owner": "system",
      "route_type": "lazy",
      "format": "markdown"
    }
  },
  "routing-map": [
    {
      "file": "AUTO-ONBOARD.md",
      "owner": "system",
      "schema": "",
      "route_type": "eager",
      "format": "markdown"
    },
    {
      "file": "file-router.json",
      "owner": "system",
      "schema": "",
      "route_type": "eager",
      "format": "json"
    },
    {
      "file": "llm_coldstart_routing.json",
      "owner": "system",
      "schema": "",
      "route_type": "eager",
      "format": "json"
    },
    {
      "file": "README.md",
      "owner": "system",
      "schema": "",
      "route_type": "eager",
      "format": "markdown"
    },
    {
      "file": "agents-spec/reflection-agent.json",
      "owner": "reflection-agent.json",
      "schema": "",
      "route_type": "eager",
      "format": "json"
    },
    {
      "file": "agents-spec/scheduler-agent.json",
      "owner": "scheduler-agent.json",
      "schema": "",
      "route_type": "eager",
      "format": "json"
    },
    {
      "file": "agents-spec/audit-agent/agent-ledger.json",
      "owner": "audit-agent",
      "schema": "",
      "route_type": "eager",
      "format": "json"
    },
    {
      "file": "agents-spec/audit-agent/agent-metadata.json",
      "owner": "audit-agent",
      "schema": "",
      "route_type": "eager",
      "format": "json"
    },
    {
      "file": "agents-spec/audit-agent/agent-state.json",
      "owner": "audit-agent",
      "schema": "",
      "route_type": "eager",
      "format": "json"
    },
    {
      "file": "agents-spec/audit-agent/checklist.json",
      "owner": "audit-agent",
      "schema": "",
      "route_type": "eager",
      "format": "json"
    },
    {
      "file": "agents-spec/audit-agent/heuristics.json",
      "owner": "audit-agent",
      "schema": "",
      "route_type": "eager",
      "format": "json"
    },
    {
      "file": "agents-spec/audit-agent/identity.json",
      "owner": "audit-agent",
      "schema": "",
      "route_type": "eager",
      "format": "json"
    },
    {
      "file": "agents-spec/audit-agent/lifecycle.json",
      "owner": "audit-agent",
      "schema": "",
      "route_type": "eager",
      "format": "json"
    },
    {
      "file": "agents-spec/audit-agent/ux-profile.json",
      "owner": "audit-agent",
      "schema": "",
      "route_type": "eager",
      "format": "json"
    },
    {
      "file": "agents-spec/bootstrap-agent/agent-ledger.json",
      "owner": "bootstrap-agent",
      "schema": "",
      "route_type": "eager",
      "format": "json"
    },
    {
      "file": "agents-spec/bootstrap-agent/agent-metadata.json",
      "owner": "bootstrap-agent",
      "schema": "",
      "route_type": "eager",
      "format": "json"
    },
    {
      "file": "agents-spec/bootstrap-agent/agent-state.json",
      "owner": "bootstrap-agent",
      "schema": "",
      "route_type": "eager",
      "format": "json"
    },
    {
      "file": "agents-spec/bootstrap-agent/checklist.json",
      "owner": "bootstrap-agent",
      "schema": "",
      "route_type": "eager",
      "format": "json"
    },
    {
      "file": "agents-spec/bootstrap-agent/heuristics.json",
      "owner": "bootstrap-agent",
      "schema": "",
      "route_type": "eager",
      "format": "json"
    },
    {
      "file": "agents-spec/bootstrap-agent/identity.json",
      "owner": "bootstrap-agent",
      "schema": "",
      "route_type": "eager",
      "format": "json"
    },
    {
      "file": "agents-spec/bootstrap-agent/ux-profile.json",
      "owner": "bootstrap-agent",
      "schema": "",
      "route_type": "eager",
      "format": "json"
    },
    {
      "file": "agents-spec/bootstrap-agent/reflections/sample.json",
      "owner": "bootstrap-agent",
      "schema": "",
      "route_type": "eager",
      "format": "json"
    },
    {
      "file": "agents-spec/evolve-agent/agent-ledger.json",
      "owner": "evolve-agent",
      "schema": "",
      "route_type": "eager",
      "format": "json"
    },
    {
      "file": "agents-spec/evolve-agent/agent-metadata.json",
      "owner": "evolve-agent",
      "schema": "",
      "route_type": "eager",
      "format": "json"
    },
    {
      "file": "agents-spec/evolve-agent/agent-state.json",
      "owner": "evolve-agent",
      "schema": "",
      "route_type": "eager",
      "format": "json"
    },
    {
      "file": "agents-spec/evolve-agent/checklist.json",
      "owner": "evolve-agent",
      "schema": "",
      "route_type": "eager",
      "format": "json"
    },
    {
      "file": "agents-spec/evolve-agent/heuristics.json",
      "owner": "evolve-agent",
      "schema": "",
      "route_type": "eager",
      "format": "json"
    },
    {
      "file": "agents-spec/evolve-agent/identity.json",
      "owner": "evolve-agent",
      "schema": "",
      "route_type": "eager",
      "format": "json"
    },
    {
      "file": "agents-spec/evolve-agent/lifecycle.json",
      "owner": "evolve-agent",
      "schema": "",
      "route_type": "eager",
      "format": "json"
    },
    {
      "file": "agents-spec/evolve-agent/ux-profile.json",
      "owner": "evolve-agent",
      "schema": "",
      "route_type": "eager",
      "format": "json"
    },
    {
      "file": "agents-spec/evolve-agent/reflections/routine-gap-detection.json",
      "owner": "evolve-agent",
      "schema": "",
      "route_type": "eager",
      "format": "json"
    },
    {
      "file": "agents-spec/evolve-agent/reflections/self-introspection.json",
      "owner": "evolve-agent",
      "schema": "",
      "route_type": "eager",
      "format": "json"
    },
    {
      "file": "agents-spec/evolve-agent/reflections/self-review-hook.json",
      "owner": "evolve-agent",
      "schema": "",
      "route_type": "eager",
      "format": "json"
    },
    {
      "file": "agents-spec/evolve-agent/reflections/system-evolve-cycle.json",
      "owner": "evolve-agent",
      "schema": "",
      "route_type": "eager",
      "format": "json"
    },
    {
      "file": "agents-spec/logger-agent/agent-ledger.json",
      "owner": "logger-agent",
      "schema": "",
      "route_type": "eager",
      "format": "json"
    },
    {
      "file": "agents-spec/logger-agent/agent-metadata.json",
      "owner": "logger-agent",
      "schema": "",
      "route_type": "eager",
      "format": "json"
    },
    {
      "file": "agents-spec/logger-agent/checklist.json",
      "owner": "logger-agent",
      "schema": "",
      "route_type": "eager",
      "format": "json"
    },
    {
      "file": "agents-spec/logger-agent/heuristics.json",
      "owner": "logger-agent",
      "schema": "",
      "route_type": "eager",
      "format": "json"
    },
    {
      "file": "agents-spec/logger-agent/identity.json",
      "owner": "logger-agent",
      "schema": "",
      "route_type": "eager",
      "format": "json"
    },
    {
      "file": "agents-spec/logger-agent/lifecycle.json",
      "owner": "logger-agent",
      "schema": "",
      "route_type": "eager",
      "format": "json"
    },
    {
      "file": "agents-spec/logger-agent/ux-profile.json",
      "owner": "logger-agent",
      "schema": "",
      "route_type": "eager",
      "format": "json"
    },
    {
      "file": "agents-spec/meta-agent/agent-ledger.json",
      "owner": "meta-agent",
      "schema": "",
      "route_type": "eager",
      "format": "json"
    },
    {
      "file": "agents-spec/meta-agent/agent-metadata.json",
      "owner": "meta-agent",
      "schema": "",
      "route_type": "eager",
      "format": "json"
    },
    {
      "file": "agents-spec/meta-agent/agent-state.json",
      "owner": "meta-agent",
      "schema": "",
      "route_type": "eager",
      "format": "json"
    },
    {
      "file": "agents-spec/meta-agent/checklist.json",
      "owner": "meta-agent",
      "schema": "",
      "route_type": "eager",
      "format": "json"
    },
    {
      "file": "agents-spec/meta-agent/heuristics.json",
      "owner": "meta-agent",
      "schema": "",
      "route_type": "eager",
      "format": "json"
    },
    {
      "file": "agents-spec/meta-agent/identity.json",
      "owner": "meta-agent",
      "schema": "",
      "route_type": "eager",
      "format": "json"
    },
    {
      "file": "agents-spec/meta-agent/lifecycle.json",
      "owner": "meta-agent",
      "schema": "",
      "route_type": "eager",
      "format": "json"
    },
    {
      "file": "agents-spec/meta-agent/ux-profile.json",
      "owner": "meta-agent",
      "schema": "",
      "route_type": "eager",
      "format": "json"
    },
    {
      "file": "agents-spec/meta-agent/reflections/mentor-review-001.json",
      "owner": "meta-agent",
      "schema": "",
      "route_type": "eager",
      "format": "json"
    },
    {
      "file": "agents-spec/orchestrator-agent/agent-ledger.json",
      "owner": "orchestrator-agent",
      "schema": "",
      "route_type": "eager",
      "format": "json"
    },
    {
      "file": "agents-spec/orchestrator-agent/agent-metadata.json",
      "owner": "orchestrator-agent",
      "schema": "",
      "route_type": "eager",
      "format": "json"
    },
    {
      "file": "agents-spec/orchestrator-agent/agent-state.json",
      "owner": "orchestrator-agent",
      "schema": "",
      "route_type": "eager",
      "format": "json"
    },
    {
      "file": "agents-spec/orchestrator-agent/checklist.json",
      "owner": "orchestrator-agent",
      "schema": "",
      "route_type": "eager",
      "format": "json"
    },
    {
      "file": "agents-spec/orchestrator-agent/heuristics.json",
      "owner": "orchestrator-agent",
      "schema": "",
      "route_type": "eager",
      "format": "json"
    },
    {
      "file": "agents-spec/orchestrator-agent/identity.json",
      "owner": "orchestrator-agent",
      "schema": "",
      "route_type": "eager",
      "format": "json"
    },
    {
      "file": "agents-spec/orchestrator-agent/lifecycle.json",
      "owner": "orchestrator-agent",
      "schema": "",
      "route_type": "eager",
      "format": "json"
    },
    {
      "file": "agents-spec/orchestrator-agent/ux-profile.json",
      "owner": "orchestrator-agent",
      "schema": "",
      "route_type": "eager",
      "format": "json"
    },
    {
      "file": "agents-spec/orchestrator-agent/checklists/core-checklist.json",
      "owner": "orchestrator-agent",
      "schema": "",
      "route_type": "eager",
      "format": "json"
    },
    {
      "file": "agents-spec/org-agent/agent-ledger.json",
      "owner": "org-agent",
      "schema": "",
      "route_type": "eager",
      "format": "json"
    },
    {
      "file": "agents-spec/org-agent/agent-metadata.json",
      "owner": "org-agent",
      "schema": "",
      "route_type": "eager",
      "format": "json"
    },
    {
      "file": "agents-spec/org-agent/agent-state.json",
      "owner": "org-agent",
      "schema": "",
      "route_type": "eager",
      "format": "json"
    },
    {
      "file": "agents-spec/org-agent/checklist.json",
      "owner": "org-agent",
      "schema": "",
      "route_type": "eager",
      "format": "json"
    },
    {
      "file": "agents-spec/org-agent/heuristics.json",
      "owner": "org-agent",
      "schema": "",
      "route_type": "eager",
      "format": "json"
    },
    {
      "file": "agents-spec/org-agent/identity.json",
      "owner": "org-agent",
      "schema": "",
      "route_type": "eager",
      "format": "json"
    },
    {
      "file": "agents-spec/org-agent/lifecycle.json",
      "owner": "org-agent",
      "schema": "",
      "route_type": "eager",
      "format": "json"
    },
    {
      "file": "agents-spec/org-agent/ux-profile.json",
      "owner": "org-agent",
      "schema": "",
      "route_type": "eager",
      "format": "json"
    },
    {
      "file": "agents-spec/planner-agent/agent-ledger.json",
      "owner": "planner-agent",
      "schema": "",
      "route_type": "eager",
      "format": "json"
    },
    {
      "file": "agents-spec/planner-agent/agent-metadata.json",
      "owner": "planner-agent",
      "schema": "",
      "route_type": "eager",
      "format": "json"
    },
    {
      "file": "agents-spec/planner-agent/agent-state.json",
      "owner": "planner-agent",
      "schema": "",
      "route_type": "eager",
      "format": "json"
    },
    {
      "file": "agents-spec/planner-agent/checklist.json",
      "owner": "planner-agent",
      "schema": "",
      "route_type": "eager",
      "format": "json"
    },
    {
      "file": "agents-spec/planner-agent/heuristics.json",
      "owner": "planner-agent",
      "schema": "",
      "route_type": "eager",
      "format": "json"
    },
    {
      "file": "agents-spec/planner-agent/identity.json",
      "owner": "planner-agent",
      "schema": "",
      "route_type": "eager",
      "format": "json"
    },
    {
      "file": "agents-spec/planner-agent/lifecycle.json",
      "owner": "planner-agent",
      "schema": "",
      "route_type": "eager",
      "format": "json"
    },
    {
      "file": "agents-spec/planner-agent/ux-profile.json",
      "owner": "planner-agent",
      "schema": "",
      "route_type": "eager",
      "format": "json"
    },
    {
      "file": "agents-spec/planner-agent/checklists/core-checklist.json",
      "owner": "planner-agent",
      "schema": "",
      "route_type": "eager",
      "format": "json"
    },
    {
      "file": "agents-spec/proposal-review-agent/agent-ledger.json",
      "owner": "proposal-review-agent",
      "schema": "",
      "route_type": "eager",
      "format": "json"
    },
    {
      "file": "agents-spec/proposal-review-agent/agent-metadata.json",
      "owner": "proposal-review-agent",
      "schema": "",
      "route_type": "eager",
      "format": "json"
    },
    {
      "file": "agents-spec/proposal-review-agent/agent-state.json",
      "owner": "proposal-review-agent",
      "schema": "",
      "route_type": "eager",
      "format": "json"
    },
    {
      "file": "agents-spec/proposal-review-agent/checklist.json",
      "owner": "proposal-review-agent",
      "schema": "",
      "route_type": "eager",
      "format": "json"
    },
    {
      "file": "agents-spec/proposal-review-agent/heuristics.json",
      "owner": "proposal-review-agent",
      "schema": "",
      "route_type": "eager",
      "format": "json"
    },
    {
      "file": "agents-spec/proposal-review-agent/identity.json",
      "owner": "proposal-review-agent",
      "schema": "",
      "route_type": "eager",
      "format": "json"
    },
    {
      "file": "agents-spec/proposal-review-agent/lifecycle.json",
      "owner": "proposal-review-agent",
      "schema": "",
      "route_type": "eager",
      "format": "json"
    },
    {
      "file": "agents-spec/proposal-review-agent/ux-profile.json",
      "owner": "proposal-review-agent",
      "schema": "",
      "route_type": "eager",
      "format": "json"
    },
    {
      "file": "agents-spec/recovery-agent/agent-ledger.json",
      "owner": "recovery-agent",
      "schema": "",
      "route_type": "eager",
      "format": "json"
    },
    {
      "file": "agents-spec/recovery-agent/agent-metadata.json",
      "owner": "recovery-agent",
      "schema": "",
      "route_type": "eager",
      "format": "json"
    },
    {
      "file": "agents-spec/recovery-agent/agent-state.json",
      "owner": "recovery-agent",
      "schema": "",
      "route_type": "eager",
      "format": "json"
    },
    {
      "file": "agents-spec/recovery-agent/checklist.json",
      "owner": "recovery-agent",
      "schema": "",
      "route_type": "eager",
      "format": "json"
    },
    {
      "file": "agents-spec/recovery-agent/heuristics.json",
      "owner": "recovery-agent",
      "schema": "",
      "route_type": "eager",
      "format": "json"
    },
    {
      "file": "agents-spec/recovery-agent/identity.json",
      "owner": "recovery-agent",
      "schema": "",
      "route_type": "eager",
      "format": "json"
    },
    {
      "file": "agents-spec/recovery-agent/lifecycle.json",
      "owner": "recovery-agent",
      "schema": "",
      "route_type": "eager",
      "format": "json"
    },
    {
      "file": "agents-spec/recovery-agent/ux-profile.json",
      "owner": "recovery-agent",
      "schema": "",
      "route_type": "eager",
      "format": "json"
    },
    {
      "file": "agents-spec/router-agent/agent-ledger.json",
      "owner": "router-agent",
      "schema": "",
      "route_type": "eager",
      "format": "json"
    },
    {
      "file": "agents-spec/router-agent/agent-metadata.json",
      "owner": "router-agent",
      "schema": "",
      "route_type": "eager",
      "format": "json"
    },
    {
      "file": "agents-spec/router-agent/agent-state.json",
      "owner": "router-agent",
      "schema": "",
      "route_type": "eager",
      "format": "json"
    },
    {
      "file": "agents-spec/router-agent/checklist.json",
      "owner": "router-agent",
      "schema": "",
      "route_type": "eager",
      "format": "json"
    },
    {
      "file": "agents-spec/router-agent/heuristics.json",
      "owner": "router-agent",
      "schema": "",
      "route_type": "eager",
      "format": "json"
    },
    {
      "file": "agents-spec/router-agent/identity.json",
      "owner": "router-agent",
      "schema": "",
      "route_type": "eager",
      "format": "json"
    },
    {
      "file": "agents-spec/router-agent/lifecycle.json",
      "owner": "router-agent",
      "schema": "",
      "route_type": "eager",
      "format": "json"
    },
    {
      "file": "agents-spec/router-agent/ux-profile.json",
      "owner": "router-agent",
      "schema": "",
      "route_type": "eager",
      "format": "json"
    },
    {
      "file": "agents-spec/router-agent/reflections/llm-session-router.json",
      "owner": "router-agent",
      "schema": "",
      "route_type": "eager",
      "format": "json"
    },
    {
      "file": "agents-spec/tasking-agent/agent-ledger.json",
      "owner": "tasking-agent",
      "schema": "",
      "route_type": "eager",
      "format": "json"
    },
    {
      "file": "agents-spec/tasking-agent/agent-metadata.json",
      "owner": "tasking-agent",
      "schema": "",
      "route_type": "eager",
      "format": "json"
    },
    {
      "file": "agents-spec/tasking-agent/agent-state.json",
      "owner": "tasking-agent",
      "schema": "",
      "route_type": "eager",
      "format": "json"
    },
    {
      "file": "agents-spec/tasking-agent/checklist.json",
      "owner": "tasking-agent",
      "schema": "",
      "route_type": "eager",
      "format": "json"
    },
    {
      "file": "agents-spec/tasking-agent/heuristics.json",
      "owner": "tasking-agent",
      "schema": "",
      "route_type": "eager",
      "format": "json"
    },
    {
      "file": "agents-spec/tasking-agent/identity.json",
      "owner": "tasking-agent",
      "schema": "",
      "route_type": "eager",
      "format": "json"
    },
    {
      "file": "agents-spec/tasking-agent/lifecycle.json",
      "owner": "tasking-agent",
      "schema": "",
      "route_type": "eager",
      "format": "json"
    },
    {
      "file": "agents-spec/tasking-agent/ux-profile.json",
      "owner": "tasking-agent",
      "schema": "",
      "route_type": "eager",
      "format": "json"
    },
    {
      "file": "agents-spec/tasking-agent/checklists/core-checklist.json",
      "owner": "tasking-agent",
      "schema": "",
      "route_type": "eager",
      "format": "json"
    },
    {
      "file": "agents-spec/ux-agent/agent-metadata.json",
      "owner": "ux-agent",
      "schema": "",
      "route_type": "eager",
      "format": "json"
    },
    {
      "file": "agents-spec/ux-agent/agent-state.json",
      "owner": "ux-agent",
      "schema": "",
      "route_type": "eager",
      "format": "json"
    },
    {
      "file": "agents-spec/ux-agent/checklist.json",
      "owner": "ux-agent",
      "schema": "",
      "route_type": "eager",
      "format": "json"
    },
    {
      "file": "agents-spec/ux-agent/heuristics.json",
      "owner": "ux-agent",
      "schema": "",
      "route_type": "eager",
      "format": "json"
    },
    {
      "file": "agents-spec/ux-agent/identity.json",
      "owner": "ux-agent",
      "schema": "",
      "route_type": "eager",
      "format": "json"
    },
    {
      "file": "agents-spec/ux-agent/lifecycle.json",
      "owner": "ux-agent",
      "schema": "",
      "route_type": "eager",
      "format": "json"
    },
    {
      "file": "agents-spec/ux-agent/ux-profile.json",
      "owner": "ux-agent",
      "schema": "",
      "route_type": "eager",
      "format": "json"
    },
    {
      "file": "agents-spec/voting-agent/agent-ledger.json",
      "owner": "voting-agent",
      "schema": "",
      "route_type": "eager",
      "format": "json"
    },
    {
      "file": "agents-spec/voting-agent/agent-metadata.json",
      "owner": "voting-agent",
      "schema": "",
      "route_type": "eager",
      "format": "json"
    },
    {
      "file": "agents-spec/voting-agent/agent-state.json",
      "owner": "voting-agent",
      "schema": "",
      "route_type": "eager",
      "format": "json"
    },
    {
      "file": "agents-spec/voting-agent/checklist.json",
      "owner": "voting-agent",
      "schema": "",
      "route_type": "eager",
      "format": "json"
    },
    {
      "file": "agents-spec/voting-agent/identity.json",
      "owner": "voting-agent",
      "schema": "",
      "route_type": "eager",
      "format": "json"
    },
    {
      "file": "agents-spec/voting-agent/lifecycle.json",
      "owner": "voting-agent",
      "schema": "",
      "route_type": "eager",
      "format": "json"
    },
    {
      "file": "agents-spec/voting-agent/ux-profile.json",
      "owner": "voting-agent",
      "schema": "",
      "route_type": "eager",
      "format": "json"
    },
    {
      "file": "canonical-model/routine-definition.json",
      "owner": "system",
      "schema": "",
      "route_type": "eager",
      "format": "json"
    },
    {
      "file": "checkpoints/index.json",
      "owner": "system",
      "schema": "",
      "route_type": "eager",
      "format": "json"
    },
    {
      "file": "checkpoints/session_boot.json",
      "owner": "system",
      "schema": "",
      "route_type": "eager",
      "format": "json"
    },
    {
      "file": "config/agent-registry.json",
      "owner": "system",
      "schema": "",
      "route_type": "eager",
      "format": "json"
    },
    {
      "file": "config/cleanup-before-release.json",
      "owner": "system",
      "schema": "",
      "route_type": "eager",
      "format": "json"
    },
    {
      "file": "config/eval-hooks.json",
      "owner": "system",
      "schema": "",
      "route_type": "eager",
      "format": "json"
    },
    {
      "file": "config/goal-tree.json",
      "owner": "system",
      "schema": "",
      "route_type": "eager",
      "format": "json"
    },
    {
      "file": "config/llm-capabilities.json",
      "owner": "system",
      "schema": "",
      "route_type": "eager",
      "format": "json"
    },
    {
      "file": "config/llm-context-router.json",
      "owner": "system",
      "schema": "",
      "route_type": "eager",
      "format": "json"
    },
    {
      "file": "config/override-rules.json",
      "owner": "system",
      "schema": "",
      "route_type": "eager",
      "format": "json"
    },
    {
      "file": "config/performance-milestones.json",
      "owner": "system",
      "schema": "",
      "route_type": "eager",
      "format": "json"
    },
    {
      "file": "config/preferences.json",
      "owner": "system",
      "schema": "",
      "route_type": "eager",
      "format": "json"
    },
    {
      "file": "config/prompt-replay.json",
      "owner": "system",
      "schema": "",
      "route_type": "eager",
      "format": "json"
    },
    {
      "file": "config/release-manifest.json",
      "owner": "system",
      "schema": "",
      "route_type": "eager",
      "format": "json"
    },
    {
      "file": "config/release-preferences.json",
      "owner": "system",
      "schema": "",
      "route_type": "eager",
      "format": "json"
    },
    {
      "file": "config/release-readiness-audit.json",
      "owner": "system",
      "schema": "",
      "route_type": "eager",
      "format": "json"
    },
    {
      "file": "config/schema-config.json",
      "owner": "system",
      "schema": "",
      "route_type": "eager",
      "format": "json"
    },
    {
      "file": "config/systemic-expansion.json",
      "owner": "system",
      "schema": "",
      "route_type": "eager",
      "format": "json"
    },
    {
      "file": "config/tasks.json",
      "owner": "system",
      "schema": "",
      "route_type": "eager",
      "format": "json"
    },
    {
      "file": "config/zip-integrity-checklist.json",
      "owner": "system",
      "schema": "",
      "route_type": "eager",
      "format": "json"
    },
    {
      "file": "control-panel/panel-config.json",
      "owner": "system",
      "schema": "",
      "route_type": "eager",
      "format": "json"
    },
    {
      "file": "core/forecast-task-docbot.json",
      "owner": "system",
      "schema": "",
      "route_type": "eager",
      "format": "json"
    },
    {
      "file": "core/forecast-task-feedbacker.json",
      "owner": "system",
      "schema": "",
      "route_type": "eager",
      "format": "json"
    },
    {
      "file": "core/forecast-task-forecaster.json",
      "owner": "system",
      "schema": "",
      "route_type": "eager",
      "format": "json"
    },
    {
      "file": "core/forecast-task-planner.json",
      "owner": "system",
      "schema": "",
      "route_type": "eager",
      "format": "json"
    },
    {
      "file": "core/forecast-task-schemaenforcer.json",
      "owner": "system",
      "schema": "",
      "route_type": "eager",
      "format": "json"
    },
    {
      "file": "core/memory-bridge.json",
      "owner": "system",
      "schema": "",
      "route_type": "eager",
      "format": "json"
    },
    {
      "file": "core/memory_bank.json",
      "owner": "system",
      "schema": "",
      "route_type": "eager",
      "format": "json"
    },
    {
      "file": "core/task-agent-check-docbot.json",
      "owner": "system",
      "schema": "",
      "route_type": "eager",
      "format": "json"
    },
    {
      "file": "core/task-agent-check-feedbacker.json",
      "owner": "system",
      "schema": "",
      "route_type": "eager",
      "format": "json"
    },
    {
      "file": "core/task-agent-check-forecaster.json",
      "owner": "system",
      "schema": "",
      "route_type": "eager",
      "format": "json"
    },
    {
      "file": "core/task-agent-check-planner.json",
      "owner": "system",
      "schema": "",
      "route_type": "eager",
      "format": "json"
    },
    {
      "file": "core/task-agent-check-schemaenforcer.json",
      "owner": "system",
      "schema": "",
      "route_type": "eager",
      "format": "json"
    },
    {
      "file": "core/task-agent-driven-evolution.json",
      "owner": "system",
      "schema": "",
      "route_type": "eager",
      "format": "json"
    },
    {
      "file": "core/task-agent-identity-review.json",
      "owner": "system",
      "schema": "",
      "route_type": "eager",
      "format": "json"
    },
    {
      "file": "core/task-bootstrap-and-memory-loading.json",
      "owner": "system",
      "schema": "",
      "route_type": "eager",
      "format": "json"
    },
    {
      "file": "core/task-feature-ref-linking.json",
      "owner": "system",
      "schema": "",
      "route_type": "eager",
      "format": "json"
    },
    {
      "file": "core/task-full-system-audit.json",
      "owner": "system",
      "schema": "",
      "route_type": "eager",
      "format": "json"
    },
    {
      "file": "core/task-global-resilience-audit.json",
      "owner": "system",
      "schema": "",
      "route_type": "eager",
      "format": "json"
    },
    {
      "file": "core/task-ongoing-validation-cycle.json",
      "owner": "system",
      "schema": "",
      "route_type": "eager",
      "format": "json"
    },
    {
      "file": "core/task-restructure-root-layout.json",
      "owner": "system",
      "schema": "",
      "route_type": "eager",
      "format": "json"
    },
    {
      "file": "core/task-runtime-scale-docbot.json",
      "owner": "system",
      "schema": "",
      "route_type": "eager",
      "format": "json"
    },
    {
      "file": "core/task-runtime-scale-feedbacker.json",
      "owner": "system",
      "schema": "",
      "route_type": "eager",
      "format": "json"
    },
    {
      "file": "core/task-runtime-scale-forecaster.json",
      "owner": "system",
      "schema": "",
      "route_type": "eager",
      "format": "json"
    },
    {
      "file": "core/task-runtime-scale-planner.json",
      "owner": "system",
      "schema": "",
      "route_type": "eager",
      "format": "json"
    },
    {
      "file": "core/task-runtime-scale-schemaenforcer.json",
      "owner": "system",
      "schema": "",
      "route_type": "eager",
      "format": "json"
    },
    {
      "file": "core/task-seed-docbot-phase-task.json",
      "owner": "system",
      "schema": "",
      "route_type": "eager",
      "format": "json"
    },
    {
      "file": "core/task-seed-feedbacker-phase-task.json",
      "owner": "system",
      "schema": "",
      "route_type": "eager",
      "format": "json"
    },
    {
      "file": "core/task-seed-forecaster-phase-task.json",
      "owner": "system",
      "schema": "",
      "route_type": "eager",
      "format": "json"
    },
    {
      "file": "core/task-seed-planner-phase-task.json",
      "owner": "system",
      "schema": "",
      "route_type": "eager",
      "format": "json"
    },
    {
      "file": "core/task-seed-schemaenforcer-phase-task.json",
      "owner": "system",
      "schema": "",
      "route_type": "eager",
      "format": "json"
    },
    {
      "file": "core/task-simulate-zone-relay.json",
      "owner": "system",
      "schema": "",
      "route_type": "eager",
      "format": "json"
    },
    {
      "file": "core/task-task-tbd.json",
      "owner": "system",
      "schema": "",
      "route_type": "eager",
      "format": "json"
    },
    {
      "file": "core/checklists/docbot-snapshot-checklist.yaml",
      "owner": "system",
      "schema": "",
      "route_type": "eager",
      "format": "text"
    },
    {
      "file": "core/checklists/user-live-session-checklist.yaml",
      "owner": "system",
      "schema": "",
      "route_type": "eager",
      "format": "text"
    },
    {
      "file": "core/conversational/debate.json",
      "owner": "system",
      "schema": "",
      "route_type": "eager",
      "format": "json"
    },
    {
      "file": "core/evaluation/calculate-agent-evolution-score.json",
      "owner": "system",
      "schema": "",
      "route_type": "eager",
      "format": "json"
    },
    {
      "file": "core/evaluation/plan-retrospective.json",
      "owner": "system",
      "schema": "",
      "route_type": "eager",
      "format": "json"
    },
    {
      "file": "core/evaluation/sandbox-replay.json",
      "owner": "system",
      "schema": "",
      "route_type": "eager",
      "format": "json"
    },
    {
      "file": "core/governance/enforce-resilience-logic.json",
      "owner": "system",
      "schema": "",
      "route_type": "eager",
      "format": "json"
    },
    {
      "file": "core/governance/validate-upgrade-proposals.json",
      "owner": "system",
      "schema": "",
      "route_type": "eager",
      "format": "json"
    },
    {
      "file": "core/identities/user.yaml",
      "owner": "system",
      "schema": "",
      "route_type": "eager",
      "format": "text"
    },
    {
      "file": "core/operational/feature-sync-and-memory-audit.json",
      "owner": "system",
      "schema": "",
      "route_type": "eager",
      "format": "json"
    },
    {
      "file": "core/operational/finalize-project-integrity.json",
      "owner": "system",
      "schema": "",
      "route_type": "eager",
      "format": "json"
    },
    {
      "file": "core/operational/lifecycle.json",
      "owner": "system",
      "schema": "",
      "route_type": "eager",
      "format": "json"
    },
    {
      "file": "core/operational/llm-session-router.json",
      "owner": "system",
      "schema": "",
      "route_type": "eager",
      "format": "json"
    },
    {
      "file": "core/operational/pattern-audit.json",
      "owner": "system",
      "schema": "",
      "route_type": "eager",
      "format": "json"
    },
    {
      "file": "core/operational/regenerate-system-snapshot.json",
      "owner": "system",
      "schema": "",
      "route_type": "eager",
      "format": "json"
    },
    {
      "file": "core/operational/routine-gap-detection.json",
      "owner": "system",
      "schema": "",
      "route_type": "eager",
      "format": "json"
    },
    {
      "file": "core/operational/routine-manifest.json",
      "owner": "system",
      "schema": "",
      "route_type": "eager",
      "format": "json"
    },
    {
      "file": "core/operational/routine-metadata.json",
      "owner": "system",
      "schema": "",
      "route_type": "eager",
      "format": "json"
    },
    {
      "file": "core/operational/self-healing-memory-sync.json",
      "owner": "system",
      "schema": "",
      "route_type": "eager",
      "format": "json"
    },
    {
      "file": "core/operational/self-introspection.json",
      "owner": "system",
      "schema": "",
      "route_type": "eager",
      "format": "json"
    },
    {
      "file": "core/operational/self-review-hook.json",
      "owner": "system",
      "schema": "",
      "route_type": "eager",
      "format": "json"
    },
    {
      "file": "core/operational/sync-memory-feature-map.json",
      "owner": "system",
      "schema": "",
      "route_type": "eager",
      "format": "json"
    },
    {
      "file": "core/operational/system-evolve-cycle.json",
      "owner": "system",
      "schema": "",
      "route_type": "eager",
      "format": "json"
    },
    {
      "file": "core/operational/validate-canonical-models.json",
      "owner": "system",
      "schema": "",
      "route_type": "eager",
      "format": "json"
    },
    {
      "file": "core/operational/validate-full-framework-state.json",
      "owner": "system",
      "schema": "",
      "route_type": "eager",
      "format": "json"
    },
    {
      "file": "core/operational/validate-project-structure.json",
      "owner": "system",
      "schema": "",
      "route_type": "eager",
      "format": "json"
    },
    {
      "file": "core/operational/weekly-resilience-audit.json",
      "owner": "system",
      "schema": "",
      "route_type": "eager",
      "format": "json"
    },
    {
      "file": "core/routines/full-system-stabilization.yaml",
      "owner": "system",
      "schema": "",
      "route_type": "eager",
      "format": "text"
    },
    {
      "file": "core/routines/live-deployment-feedback-cycle.yaml",
      "owner": "system",
      "schema": "",
      "route_type": "eager",
      "format": "text"
    },
    {
      "file": "core/routines/memory-compaction.json",
      "owner": "system",
      "schema": "",
      "route_type": "eager",
      "format": "json"
    },
    {
      "file": "core/routines/root-collab-validation.yaml",
      "owner": "system",
      "schema": "",
      "route_type": "eager",
      "format": "text"
    },
    {
      "file": "core/tasks/task-agent-alignment-scan.json",
      "owner": "tasking-agent",
      "schema": "",
      "route_type": "eager",
      "format": "json"
    },
    {
      "file": "core/tasks/task-agent-goal-generation.json",
      "owner": "tasking-agent",
      "schema": "",
      "route_type": "eager",
      "format": "json"
    },
    {
      "file": "core/tasks/task-audit-v21-before-v22.json",
      "owner": "tasking-agent",
      "schema": "",
      "route_type": "eager",
      "format": "json"
    },
    {
      "file": "core/tasks/task-begin-v23-cycle.json",
      "owner": "tasking-agent",
      "schema": "",
      "route_type": "eager",
      "format": "json"
    },
    {
      "file": "core/tasks/task-continuous-evolution-cycle.json",
      "owner": "tasking-agent",
      "schema": "",
      "route_type": "eager",
      "format": "json"
    },
    {
      "file": "core/tasks/task-create-pipeline-folder.json",
      "owner": "tasking-agent",
      "schema": "",
      "route_type": "eager",
      "format": "json"
    },
    {
      "file": "core/tasks/task-discovery-intent-cycle.json",
      "owner": "tasking-agent",
      "schema": "",
      "route_type": "eager",
      "format": "json"
    },
    {
      "file": "core/tasks/task-docbot-onboarding-doc.json",
      "owner": "tasking-agent",
      "schema": "",
      "route_type": "eager",
      "format": "json"
    },
    {
      "file": "core/tasks/task-docbot-summary-cards.json",
      "owner": "tasking-agent",
      "schema": "",
      "route_type": "eager",
      "format": "json"
    },
    {
      "file": "core/tasks/task-docbot-version-changelog.json",
      "owner": "tasking-agent",
      "schema": "",
      "route_type": "eager",
      "format": "json"
    },
    {
      "file": "core/tasks/task-document-folder-structure-guidelines.json",
      "owner": "tasking-agent",
      "schema": "",
      "route_type": "eager",
      "format": "json"
    },
    {
      "file": "core/tasks/task-enhance-file-router-metadata.json",
      "owner": "tasking-agent",
      "schema": "",
      "route_type": "eager",
      "format": "json"
    },
    {
      "file": "core/tasks/task-expand-longterm-agents.json",
      "owner": "tasking-agent",
      "schema": "",
      "route_type": "eager",
      "format": "json"
    },
    {
      "file": "core/tasks/task-feedback-loop-from-user.json",
      "owner": "tasking-agent",
      "schema": "",
      "route_type": "eager",
      "format": "json"
    },
    {
      "file": "core/tasks/task-feedbacker-anomaly-detection.json",
      "owner": "tasking-agent",
      "schema": "",
      "route_type": "eager",
      "format": "json"
    },
    {
      "file": "core/tasks/task-feedbacker-monthly-summary.json",
      "owner": "tasking-agent",
      "schema": "",
      "route_type": "eager",
      "format": "json"
    },
    {
      "file": "core/tasks/task-feedbacker-trend-analysis.json",
      "owner": "tasking-agent",
      "schema": "",
      "route_type": "eager",
      "format": "json"
    },
    {
      "file": "core/tasks/task-fix-missing-core-agents.json",
      "owner": "tasking-agent",
      "schema": "",
      "route_type": "eager",
      "format": "json"
    },
    {
      "file": "core/tasks/task-framework-live-deployment-mode.json",
      "owner": "tasking-agent",
      "schema": "",
      "route_type": "eager",
      "format": "json"
    },
    {
      "file": "core/tasks/task-generate-file-router.json",
      "owner": "tasking-agent",
      "schema": "",
      "route_type": "eager",
      "format": "json"
    },
    {
      "file": "core/tasks/task-implement-cross-reference-system.json",
      "owner": "tasking-agent",
      "schema": "",
      "route_type": "eager",
      "format": "json"
    },
    {
      "file": "core/tasks/task-llm-context-suggestions.json",
      "owner": "tasking-agent",
      "schema": "",
      "route_type": "eager",
      "format": "json"
    },
    {
      "file": "core/tasks/task-llm-memory-tracker.json",
      "owner": "tasking-agent",
      "schema": "",
      "route_type": "eager",
      "format": "json"
    },
    {
      "file": "core/tasks/task-llm-routing-runtime.json",
      "owner": "tasking-agent",
      "schema": "",
      "route_type": "eager",
      "format": "json"
    },
    {
      "file": "core/tasks/task-log-replay-for-improvement.json",
      "owner": "tasking-agent",
      "schema": "",
      "route_type": "eager",
      "format": "json"
    },
    {
      "file": "core/tasks/task-planner-milestone-calendar.json",
      "owner": "tasking-agent",
      "schema": "",
      "route_type": "eager",
      "format": "json"
    },
    {
      "file": "core/tasks/task-planner-task-grouping.json",
      "owner": "tasking-agent",
      "schema": "",
      "route_type": "eager",
      "format": "json"
    },
    {
      "file": "core/tasks/task-planner-timeline-cycles.json",
      "owner": "tasking-agent",
      "schema": "",
      "route_type": "eager",
      "format": "json"
    },
    {
      "file": "core/tasks/task-rebuild-core-structure.json",
      "owner": "tasking-agent",
      "schema": "",
      "route_type": "eager",
      "format": "json"
    },
    {
      "file": "core/tasks/task-refactor-root-structure.json",
      "owner": "tasking-agent",
      "schema": "",
      "route_type": "eager",
      "format": "json"
    },
    {
      "file": "core/tasks/task-regenerate-file-router.json",
      "owner": "tasking-agent",
      "schema": "",
      "route_type": "eager",
      "format": "json"
    },
    {
      "file": "core/tasks/task-review-checklist-coverage.json",
      "owner": "tasking-agent",
      "schema": "",
      "route_type": "eager",
      "format": "json"
    },
    {
      "file": "core/tasks/task-runtime-discovery-metadata-update.json",
      "owner": "tasking-agent",
      "schema": "",
      "route_type": "eager",
      "format": "json"
    },
    {
      "file": "core/tasks/task-schema-diff-viewer.json",
      "owner": "tasking-agent",
      "schema": "",
      "route_type": "eager",
      "format": "json"
    },
    {
      "file": "core/tasks/task-schema-runtime-validation.json",
      "owner": "tasking-agent",
      "schema": "",
      "route_type": "eager",
      "format": "json"
    },
    {
      "file": "core/tasks/task-schema-version-lock.json",
      "owner": "tasking-agent",
      "schema": "",
      "route_type": "eager",
      "format": "json"
    },
    {
      "file": "core/tasks/task-setup-metadata-validation-pipeline.json",
      "owner": "tasking-agent",
      "schema": "",
      "route_type": "eager",
      "format": "json"
    },
    {
      "file": "core/tasks/task-simulate-onboarding-sequence.json",
      "owner": "tasking-agent",
      "schema": "",
      "route_type": "eager",
      "format": "json"
    },
    {
      "file": "core/tasks/task-snapshot-live-user-release.json",
      "owner": "tasking-agent",
      "schema": "",
      "route_type": "eager",
      "format": "json"
    },
    {
      "file": "core/tasks/task-task-tbd.json",
      "owner": "tasking-agent",
      "schema": "",
      "route_type": "eager",
      "format": "json"
    },
    {
      "file": "core/tasks/task-trigger-user-checklist.json",
      "owner": "tasking-agent",
      "schema": "",
      "route_type": "eager",
      "format": "json"
    },
    {
      "file": "core/tasks/task-update-checklist-doc-links.json",
      "owner": "tasking-agent",
      "schema": "",
      "route_type": "eager",
      "format": "json"
    },
    {
      "file": "core/tasks/task-user-goal-setting.json",
      "owner": "tasking-agent",
      "schema": "",
      "route_type": "eager",
      "format": "json"
    },
    {
      "file": "docs/AGENT_MODEL_INDEX.md",
      "owner": "system",
      "schema": "",
      "route_type": "lazy",
      "format": "markdown"
    },
    {
      "file": "docs/api-schema.yaml",
      "owner": "system",
      "schema": "",
      "route_type": "lazy",
      "format": "text"
    },
    {
      "file": "docs/asset-map.md",
      "owner": "system",
      "schema": "",
      "route_type": "lazy",
      "format": "markdown"
    },
    {
      "file": "docs/CHANGELOG.md",
      "owner": "system",
      "schema": "",
      "route_type": "lazy",
      "format": "markdown"
    },
    {
      "file": "docs/cli-dashboard.md",
      "owner": "system",
      "schema": "",
      "route_type": "lazy",
      "format": "markdown"
    },
    {
      "file": "docs/collab-etiquette.md",
      "owner": "system",
      "schema": "",
      "route_type": "lazy",
      "format": "markdown"
    },
    {
      "file": "docs/context-coherence-loop.md",
      "owner": "system",
      "schema": "",
      "route_type": "lazy",
      "format": "markdown"
    },
    {
      "file": "docs/design-principles.md",
      "owner": "system",
      "schema": "",
      "route_type": "lazy",
      "format": "markdown"
    },
    {
      "file": "docs/dev-diary.md",
      "owner": "system",
      "schema": "",
      "route_type": "lazy",
      "format": "markdown"
    },
    {
      "file": "docs/evaluation.md",
      "owner": "system",
      "schema": "",
      "route_type": "lazy",
      "format": "markdown"
    },
    {
      "file": "docs/example-workflows.md",
      "owner": "system",
      "schema": "",
      "route_type": "lazy",
      "format": "markdown"
    },
    {
      "file": "docs/external-integration.md",
      "owner": "system",
      "schema": "",
      "route_type": "lazy",
      "format": "markdown"
    },
    {
      "file": "docs/feedback-summary-v17.md",
      "owner": "system",
      "schema": "",
      "route_type": "lazy",
      "format": "markdown"
    },
    {
      "file": "docs/final_comprehensive_project_summary.md",
      "owner": "system",
      "schema": "",
      "route_type": "lazy",
      "format": "markdown"
    },
    {
      "file": "docs/folder-structure-proposal.md",
      "owner": "system",
      "schema": "",
      "route_type": "lazy",
      "format": "markdown"
    },
    {
      "file": "docs/forecast-history.md",
      "owner": "system",
      "schema": "",
      "route_type": "lazy",
      "format": "markdown"
    },
    {
      "file": "docs/forecast.md",
      "owner": "system",
      "schema": "",
      "route_type": "lazy",
      "format": "markdown"
    },
    {
      "file": "docs/governance.md",
      "owner": "system",
      "schema": "",
      "route_type": "lazy",
      "format": "markdown"
    },
    {
      "file": "docs/how-to-add-agent.md",
      "owner": "system",
      "schema": "",
      "route_type": "lazy",
      "format": "markdown"
    },
    {
      "file": "docs/how-to-assume-agent.md",
      "owner": "system",
      "schema": "",
      "route_type": "lazy",
      "format": "markdown"
    },
    {
      "file": "docs/how-to-extend-pipeline.md",
      "owner": "system",
      "schema": "",
      "route_type": "lazy",
      "format": "markdown"
    },
    {
      "file": "docs/intent-discovery-v18.json",
      "owner": "system",
      "schema": "",
      "route_type": "lazy",
      "format": "json"
    },
    {
      "file": "docs/intent-discovery-v19.json",
      "owner": "system",
      "schema": "",
      "route_type": "lazy",
      "format": "json"
    },
    {
      "file": "docs/intents.md",
      "owner": "system",
      "schema": "",
      "route_type": "lazy",
      "format": "markdown"
    },
    {
      "file": "docs/manual-mode.md",
      "owner": "system",
      "schema": "",
      "route_type": "lazy",
      "format": "markdown"
    },
    {
      "file": "docs/memory-api.md",
      "owner": "system",
      "schema": "",
      "route_type": "lazy",
      "format": "markdown"
    },
    {
      "file": "docs/memory-runner-docs.md",
      "owner": "system",
      "schema": "",
      "route_type": "lazy",
      "format": "markdown"
    },
    {
      "file": "docs/navigation-index.json",
      "owner": "system",
      "schema": "",
      "route_type": "lazy",
      "format": "json"
    },
    {
      "file": "docs/ONBOARDING.md",
      "owner": "system",
      "schema": "",
      "route_type": "lazy",
      "format": "markdown"
    },
    {
      "file": "docs/persona-guide.json",
      "owner": "system",
      "schema": "",
      "route_type": "lazy",
      "format": "json"
    },
    {
      "file": "docs/plan.md",
      "owner": "system",
      "schema": "",
      "route_type": "lazy",
      "format": "markdown"
    },
    {
      "file": "docs/PROJECT-TASKS.md",
      "owner": "system",
      "schema": "",
      "route_type": "lazy",
      "format": "markdown"
    },
    {
      "file": "docs/quick-pipeline-format.md",
      "owner": "system",
      "schema": "",
      "route_type": "lazy",
      "format": "markdown"
    },
    {
      "file": "docs/README-HUMAN.md",
      "owner": "system",
      "schema": "",
      "route_type": "lazy",
      "format": "markdown"
    },
    {
      "file": "docs/README-LLM.md",
      "owner": "system",
      "schema": "",
      "route_type": "lazy",
      "format": "markdown"
    },
    {
      "file": "docs/README-ONBOARDING.md",
      "owner": "system",
      "schema": "",
      "route_type": "lazy",
      "format": "markdown"
    },
    {
      "file": "docs/README-QUICK-PIPELINE.md",
      "owner": "system",
      "schema": "",
      "route_type": "lazy",
      "format": "markdown"
    },
    {
      "file": "docs/registered-template.json",
      "owner": "system",
      "schema": "",
      "route_type": "lazy",
      "format": "json"
    },
    {
      "file": "docs/release-checklist.md",
      "owner": "system",
      "schema": "",
      "route_type": "lazy",
      "format": "markdown"
    },
    {
      "file": "docs/retrospective-v0.23.0.md",
      "owner": "system",
      "schema": "",
      "route_type": "lazy",
      "format": "markdown"
    },
    {
      "file": "docs/reviewkeeper-report.md",
      "owner": "system",
      "schema": "",
      "route_type": "lazy",
      "format": "markdown"
    },
    {
      "file": "docs/roadmap-agent-goal-proposals.json",
      "owner": "system",
      "schema": "",
      "route_type": "lazy",
      "format": "json"
    },
    {
      "file": "docs/roadmap-matrix.md",
      "owner": "system",
      "schema": "",
      "route_type": "lazy",
      "format": "markdown"
    },
    {
      "file": "docs/roadmap-patch-trust-filter.json",
      "owner": "system",
      "schema": "",
      "route_type": "lazy",
      "format": "json"
    },
    {
      "file": "docs/roadmap-v0.24.0.md",
      "owner": "system",
      "schema": "",
      "route_type": "lazy",
      "format": "markdown"
    },
    {
      "file": "docs/roadmap-v0.25.1.md",
      "owner": "system",
      "schema": "",
      "route_type": "lazy",
      "format": "markdown"
    },
    {
      "file": "docs/roadmap-v0.26.0-tasks.json",
      "owner": "system",
      "schema": "",
      "route_type": "lazy",
      "format": "json"
    },
    {
      "file": "docs/roadmap-v0.29.0-tasks.json",
      "owner": "system",
      "schema": "",
      "route_type": "lazy",
      "format": "json"
    },
    {
      "file": "docs/roadmap.md",
      "owner": "system",
      "schema": "",
      "route_type": "lazy",
      "format": "markdown"
    },
    {
      "file": "docs/router-schema-reference.md",
      "owner": "system",
      "schema": "",
      "route_type": "lazy",
      "format": "markdown"
    },
    {
      "file": "docs/routines-index.md",
      "owner": "system",
      "schema": "",
      "route_type": "lazy",
      "format": "markdown"
    },
    {
      "file": "docs/system-checklist.md",
      "owner": "system",
      "schema": "",
      "route_type": "lazy",
      "format": "markdown"
    },
    {
      "file": "docs/system-index.json",
      "owner": "system",
      "schema": "",
      "route_type": "lazy",
      "format": "json"
    },
    {
      "file": "docs/system-resilience-checklist.md",
      "owner": "system",
      "schema": "",
      "route_type": "lazy",
      "format": "markdown"
    },
    {
      "file": "docs/task-dependencies.md",
      "owner": "system",
      "schema": "",
      "route_type": "lazy",
      "format": "markdown"
    },
    {
      "file": "docs/task-graph-doc.md",
      "owner": "system",
      "schema": "",
      "route_type": "lazy",
      "format": "markdown"
    },
    {
      "file": "docs/webhook-integration.md",
      "owner": "system",
      "schema": "",
      "route_type": "lazy",
      "format": "markdown"
    },
    {
      "file": "docs/agents/docs-agent.md",
      "owner": "system",
      "schema": "",
      "route_type": "lazy",
      "format": "markdown"
    },
    {
      "file": "docs/agents/frontend-agent.md",
      "owner": "system",
      "schema": "",
      "route_type": "lazy",
      "format": "markdown"
    },
    {
      "file": "docs/diagrams/snapshot-introspection-diagram.puml",
      "owner": "system",
      "schema": "",
      "route_type": "lazy",
      "format": "diagram"
    },
    {
      "file": "docs/generated/phase12-market-token-dashboard.json",
      "owner": "system",
      "schema": "",
      "route_type": "lazy",
      "format": "json"
    },
    {
      "file": "features/feature-map.json",
      "owner": "system",
      "schema": "",
      "route_type": "lazy",
      "format": "json"
    },
    {
      "file": "forecasts/forecast-docbot.json",
      "owner": "system",
      "schema": "",
      "route_type": "eager",
      "format": "json"
    },
    {
      "file": "forecasts/forecast-feedbacker.json",
      "owner": "system",
      "schema": "",
      "route_type": "eager",
      "format": "json"
    },
    {
      "file": "forecasts/forecast-forecaster.json",
      "owner": "system",
      "schema": "",
      "route_type": "eager",
      "format": "json"
    },
    {
      "file": "forecasts/forecast-planner.json",
      "owner": "system",
      "schema": "",
      "route_type": "eager",
      "format": "json"
    },
    {
      "file": "forecasts/forecast-schemaenforcer.json",
      "owner": "system",
      "schema": "",
      "route_type": "eager",
      "format": "json"
    },
    {
      "file": "forecasts/bootstrap-agent/timeline-memory.json",
      "owner": "system",
      "schema": "",
      "route_type": "eager",
      "format": "json"
    },
    {
      "file": "framework/version.json",
      "owner": "system",
      "schema": "",
      "route_type": "eager",
      "format": "json"
    },
    {
      "file": "framework/agents/coveragebot.identity.md",
      "owner": "system",
      "schema": "",
      "route_type": "eager",
      "format": "markdown"
    },
    {
      "file": "framework/agents/llmrouter.identity.md",
      "owner": "system",
      "schema": "",
      "route_type": "eager",
      "format": "markdown"
    },
    {
      "file": "framework/agents/schemaenforcer.identity.md",
      "owner": "system",
      "schema": "",
      "route_type": "eager",
      "format": "markdown"
    },
    {
      "file": "framework/agents/structurekeeper.identity.md",
      "owner": "system",
      "schema": "",
      "route_type": "eager",
      "format": "markdown"
    },
    {
      "file": "framework/checklists/integration-graph-checklist.md",
      "owner": "system",
      "schema": "",
      "route_type": "eager",
      "format": "markdown"
    },
    {
      "file": "framework/checklists/logger-checklist.json",
      "owner": "system",
      "schema": "",
      "route_type": "eager",
      "format": "json"
    },
    {
      "file": "framework/checklists/memory-enhancement-checklist.md",
      "owner": "system",
      "schema": "",
      "route_type": "eager",
      "format": "markdown"
    },
    {
      "file": "framework/checklists/orchestrator-checklist.json",
      "owner": "system",
      "schema": "",
      "route_type": "eager",
      "format": "json"
    },
    {
      "file": "framework/checklists/planner-checklist.md",
      "owner": "system",
      "schema": "",
      "route_type": "eager",
      "format": "markdown"
    },
    {
      "file": "framework/checklists/planner-feedback-forecast-checklist.md",
      "owner": "system",
      "schema": "",
      "route_type": "eager",
      "format": "markdown"
    },
    {
      "file": "framework/checklists/release-integrity-checklist.json",
      "owner": "system",
      "schema": "",
      "route_type": "eager",
      "format": "json"
    },
    {
      "file": "framework/checklists/release-packaging-checklist.json",
      "owner": "system",
      "schema": "",
      "route_type": "eager",
      "format": "json"
    },
    {
      "file": "framework/checklists/reviewkeeper-checklist.md",
      "owner": "system",
      "schema": "",
      "route_type": "eager",
      "format": "markdown"
    },
    {
      "file": "framework/checklists/router-checklist.json",
      "owner": "system",
      "schema": "",
      "route_type": "eager",
      "format": "json"
    },
    {
      "file": "framework/checklists/runner-and-memory-checklist.md",
      "owner": "system",
      "schema": "",
      "route_type": "eager",
      "format": "markdown"
    },
    {
      "file": "framework/checklists/structurekeeper-checklist.md",
      "owner": "system",
      "schema": "",
      "route_type": "eager",
      "format": "markdown"
    },
    {
      "file": "framework/checklists/unified-agent-checklist.md",
      "owner": "system",
      "schema": "",
      "route_type": "eager",
      "format": "markdown"
    },
    {
      "file": "framework/checklists/unified-checklist.md",
      "owner": "system",
      "schema": "",
      "route_type": "eager",
      "format": "markdown"
    },
    {
      "file": "framework/docs/AGENT_LOG.md",
      "owner": "system",
      "schema": "",
      "route_type": "eager",
      "format": "markdown"
    },
    {
      "file": "framework/docs/collaborative-network-spec.md",
      "owner": "system",
      "schema": "",
      "route_type": "eager",
      "format": "markdown"
    },
    {
      "file": "framework/docs/docbot.identity.md",
      "owner": "system",
      "schema": "",
      "route_type": "eager",
      "format": "markdown"
    },
    {
      "file": "framework/docs/dynamic-agent-routing-config.json",
      "owner": "system",
      "schema": "",
      "route_type": "eager",
      "format": "json"
    },
    {
      "file": "framework/docs/forecaster.identity.md",
      "owner": "system",
      "schema": "",
      "route_type": "eager",
      "format": "markdown"
    },
    {
      "file": "framework/docs/log-manager.json",
      "owner": "system",
      "schema": "",
      "route_type": "eager",
      "format": "json"
    },
    {
      "file": "framework/docs/orchestrator-release-zip-pipeline.json",
      "owner": "system",
      "schema": "",
      "route_type": "eager",
      "format": "json"
    },
    {
      "file": "framework/docs/realtime-llm-assistant.identity.md",
      "owner": "system",
      "schema": "",
      "route_type": "eager",
      "format": "markdown"
    },
    {
      "file": "framework/docs/reviewkeeper.identity.md",
      "owner": "system",
      "schema": "",
      "route_type": "eager",
      "format": "markdown"
    },
    {
      "file": "framework/docs/tasks.json",
      "owner": "system",
      "schema": "",
      "route_type": "eager",
      "format": "json"
    },
    {
      "file": "framework/docs/validate-evolution-phase.json",
      "owner": "system",
      "schema": "",
      "route_type": "eager",
      "format": "json"
    },
    {
      "file": "framework/docs/schema-summaries/structure-hygiene.schema.md",
      "owner": "system",
      "schema": "",
      "route_type": "eager",
      "format": "markdown"
    },
    {
      "file": "framework/feedback/reflection-schema-audit-001.json",
      "owner": "system",
      "schema": "",
      "route_type": "eager",
      "format": "json"
    },
    {
      "file": "framework/feedback/reflection-structure-hygiene-system.json",
      "owner": "system",
      "schema": "",
      "route_type": "eager",
      "format": "json"
    },
    {
      "file": "framework/feedback/conversations/reflection-structure-consensus-001.json",
      "owner": "system",
      "schema": "",
      "route_type": "eager",
      "format": "json"
    },
    {
      "file": "framework/feedback/conversations/reflection-structure-consensus-02.json",
      "owner": "system",
      "schema": "",
      "route_type": "eager",
      "format": "json"
    },
    {
      "file": "framework/feedback/conversations/reflection-structure-consensus-03.json",
      "owner": "system",
      "schema": "",
      "route_type": "eager",
      "format": "json"
    },
    {
      "file": "framework/feedback/conversations/reflection-structure-consensus-04.json",
      "owner": "system",
      "schema": "",
      "route_type": "eager",
      "format": "json"
    },
    {
      "file": "framework/feedback/conversations/reflection-structure-consensus-05.json",
      "owner": "system",
      "schema": "",
      "route_type": "eager",
      "format": "json"
    },
    {
      "file": "framework/feedback/conversations/reflection-structure-consensus-06.json",
      "owner": "system",
      "schema": "",
      "route_type": "eager",
      "format": "json"
    },
    {
      "file": "framework/feedback/conversations/reflection-structure-consensus-07.json",
      "owner": "system",
      "schema": "",
      "route_type": "eager",
      "format": "json"
    },
    {
      "file": "framework/feedback/conversations/reflection-structure-consensus-08.json",
      "owner": "system",
      "schema": "",
      "route_type": "eager",
      "format": "json"
    },
    {
      "file": "framework/feedback/conversations/reflection-structure-consensus-09.json",
      "owner": "system",
      "schema": "",
      "route_type": "eager",
      "format": "json"
    },
    {
      "file": "framework/feedback/conversations/reflection-structure-consensus-10.json",
      "owner": "system",
      "schema": "",
      "route_type": "eager",
      "format": "json"
    },
    {
      "file": "framework/feedback/conversations/reflection-structure-consensus-11.json",
      "owner": "system",
      "schema": "",
      "route_type": "eager",
      "format": "json"
    },
    {
      "file": "framework/feedback/conversations/reflection-structure-consensus-12.json",
      "owner": "system",
      "schema": "",
      "route_type": "eager",
      "format": "json"
    },
    {
      "file": "framework/feedback/conversations/reflection-structure-consensus-13.json",
      "owner": "system",
      "schema": "",
      "route_type": "eager",
      "format": "json"
    },
    {
      "file": "framework/feedback/conversations/reflection-structure-consensus-14.json",
      "owner": "system",
      "schema": "",
      "route_type": "eager",
      "format": "json"
    },
    {
      "file": "framework/feedback/conversations/reflection-structure-consensus-15.json",
      "owner": "system",
      "schema": "",
      "route_type": "eager",
      "format": "json"
    },
    {
      "file": "framework/feedback/conversations/reflection-structure-consensus-16.json",
      "owner": "system",
      "schema": "",
      "route_type": "eager",
      "format": "json"
    },
    {
      "file": "framework/feedback/conversations/reflection-structure-consensus-17.json",
      "owner": "system",
      "schema": "",
      "route_type": "eager",
      "format": "json"
    },
    {
      "file": "framework/feedback/conversations/reflection-structure-consensus-18.json",
      "owner": "system",
      "schema": "",
      "route_type": "eager",
      "format": "json"
    },
    {
      "file": "framework/feedback/conversations/reflection-structure-consensus-19.json",
      "owner": "system",
      "schema": "",
      "route_type": "eager",
      "format": "json"
    },
    {
      "file": "framework/feedback/conversations/reflection-structure-consensus-20.json",
      "owner": "system",
      "schema": "",
      "route_type": "eager",
      "format": "json"
    },
    {
      "file": "framework/feedback/conversations/reflection-structure-review-final.json",
      "owner": "system",
      "schema": "",
      "route_type": "eager",
      "format": "json"
    },
    {
      "file": "framework/goals/clustering-spec.md",
      "owner": "system",
      "schema": "",
      "route_type": "eager",
      "format": "markdown"
    },
    {
      "file": "framework/goals/goal-structure-hygiene.json",
      "owner": "system",
      "schema": "",
      "route_type": "eager",
      "format": "json"
    },
    {
      "file": "framework/goals/planner.identity.md",
      "owner": "system",
      "schema": "",
      "route_type": "eager",
      "format": "markdown"
    },
    {
      "file": "framework/goals/tasks.json",
      "owner": "system",
      "schema": "",
      "route_type": "eager",
      "format": "json"
    },
    {
      "file": "framework/logs/log-manager.json",
      "owner": "system",
      "schema": "",
      "route_type": "eager",
      "format": "json"
    },
    {
      "file": "framework/logs/conversations/schema-agent-recommendation.json",
      "owner": "system",
      "schema": "",
      "route_type": "eager",
      "format": "json"
    },
    {
      "file": "framework/logs/system/schema-coverage.json",
      "owner": "system",
      "schema": "",
      "route_type": "eager",
      "format": "json"
    },
    {
      "file": "framework/memory/design-architecture-updates.md",
      "owner": "system",
      "schema": "",
      "route_type": "eager",
      "format": "markdown"
    },
    {
      "file": "framework/memory/framework-capabilities.md",
      "owner": "system",
      "schema": "",
      "route_type": "eager",
      "format": "markdown"
    },
    {
      "file": "framework/memory/memory_bank.archived.json",
      "owner": "system",
      "schema": "",
      "route_type": "eager",
      "format": "json"
    },
    {
      "file": "framework/memory/memory_bank.json",
      "owner": "system",
      "schema": "",
      "route_type": "eager",
      "format": "json"
    },
    {
      "file": "framework/memory/project-mission-and-alignment.md",
      "owner": "system",
      "schema": "",
      "route_type": "eager",
      "format": "markdown"
    },
    {
      "file": "framework/memory/project-review_structure-clarity.md",
      "owner": "system",
      "schema": "",
      "route_type": "eager",
      "format": "markdown"
    },
    {
      "file": "framework/pipelines/market-bidding-cycle.json",
      "owner": "orchestrator-agent",
      "schema": "",
      "route_type": "eager",
      "format": "json"
    },
    {
      "file": "framework/pipelines/orphan-file-clean.json",
      "owner": "orchestrator-agent",
      "schema": "",
      "route_type": "eager",
      "format": "json"
    },
    {
      "file": "framework/pipelines/pipeline-release-diff-aware.json",
      "owner": "orchestrator-agent",
      "schema": "",
      "route_type": "eager",
      "format": "json"
    },
    {
      "file": "framework/pipelines/pipeline-release-vNEXT.json",
      "owner": "orchestrator-agent",
      "schema": "",
      "route_type": "eager",
      "format": "json"
    },
    {
      "file": "framework/pipelines/routing-validation.json",
      "owner": "orchestrator-agent",
      "schema": "",
      "route_type": "eager",
      "format": "json"
    },
    {
      "file": "framework/pipelines/structure-merge-check.json",
      "owner": "orchestrator-agent",
      "schema": "",
      "route_type": "eager",
      "format": "json"
    },
    {
      "file": "framework/pipelines/validate-release-scope.json",
      "owner": "orchestrator-agent",
      "schema": "",
      "route_type": "eager",
      "format": "json"
    },
    {
      "file": "framework/routines/auto-patch-pipeline-outputs.json",
      "owner": "system",
      "schema": "",
      "route_type": "eager",
      "format": "json"
    },
    {
      "file": "framework/routines/cleanup-framework-structure.json",
      "owner": "system",
      "schema": "",
      "route_type": "eager",
      "format": "json"
    },
    {
      "file": "framework/routines/detect-zombie-artifacts.json",
      "owner": "system",
      "schema": "",
      "route_type": "eager",
      "format": "json"
    },
    {
      "file": "framework/routines/on-release-preflight.json",
      "owner": "system",
      "schema": "",
      "route_type": "eager",
      "format": "json"
    },
    {
      "file": "framework/routing/override-rules.json",
      "owner": "system",
      "schema": "",
      "route_type": "eager",
      "format": "json"
    },
    {
      "file": "framework/schemas/agent-schema.json",
      "owner": "system",
      "schema": "agent-schema.json",
      "route_type": "eager",
      "format": "json"
    },
    {
      "file": "framework/schemas/default-schema.json",
      "owner": "system",
      "schema": "",
      "route_type": "eager",
      "format": "json"
    },
    {
      "file": "framework/schemas/feedback-schema.json",
      "owner": "system",
      "schema": "",
      "route_type": "eager",
      "format": "json"
    },
    {
      "file": "framework/schemas/goal-schema.json",
      "owner": "system",
      "schema": "",
      "route_type": "eager",
      "format": "json"
    },
    {
      "file": "framework/schemas/log-schema.json",
      "owner": "system",
      "schema": "",
      "route_type": "eager",
      "format": "json"
    },
    {
      "file": "framework/schemas/memory-schema.json",
      "owner": "system",
      "schema": "",
      "route_type": "eager",
      "format": "json"
    },
    {
      "file": "framework/schemas/pipeline-schema.json",
      "owner": "system",
      "schema": "",
      "route_type": "eager",
      "format": "json"
    },
    {
      "file": "framework/schemas/routine-schema.json",
      "owner": "system",
      "schema": "",
      "route_type": "eager",
      "format": "json"
    },
    {
      "file": "framework/schemas/routing-schema.json",
      "owner": "system",
      "schema": "",
      "route_type": "eager",
      "format": "json"
    },
    {
      "file": "framework/schemas/structure-hygiene.schema.json",
      "owner": "system",
      "schema": "",
      "route_type": "eager",
      "format": "json"
    },
    {
      "file": "framework/schemas/task-schema.json",
      "owner": "system",
      "schema": "task-schema.json",
      "route_type": "eager",
      "format": "json"
    },
    {
      "file": "framework/tasks/feedbacker.identity.md",
      "owner": "tasking-agent",
      "schema": "",
      "route_type": "eager",
      "format": "markdown"
    },
    {
      "file": "framework/tasks/task-cleanup-execution.json",
      "owner": "tasking-agent",
      "schema": "",
      "route_type": "eager",
      "format": "json"
    },
    {
      "file": "framework/tasks/TASK_EXECUTION_DASHBOARD.md",
      "owner": "tasking-agent",
      "schema": "",
      "route_type": "eager",
      "format": "markdown"
    },
    {
      "file": "goals/goal-boot.json",
      "owner": "system",
      "schema": "",
      "route_type": "eager",
      "format": "json"
    },
    {
      "file": "goals/goal-docbot-6aff77.json",
      "owner": "system",
      "schema": "",
      "route_type": "eager",
      "format": "json"
    },
    {
      "file": "goals/goal-feedbacker-d6efda.json",
      "owner": "system",
      "schema": "",
      "route_type": "eager",
      "format": "json"
    },
    {
      "file": "goals/goal-forecaster-3adeea.json",
      "owner": "system",
      "schema": "",
      "route_type": "eager",
      "format": "json"
    },
    {
      "file": "goals/goal-reviewkeeper-e833d4.json",
      "owner": "system",
      "schema": "",
      "route_type": "eager",
      "format": "json"
    },
    {
      "file": "goals/goal-roadmap-boot.json",
      "owner": "system",
      "schema": "",
      "route_type": "eager",
      "format": "json"
    },
    {
      "file": "goals/goal-schemaenforcer-51f700.json",
      "owner": "system",
      "schema": "",
      "route_type": "eager",
      "format": "json"
    },
    {
      "file": "goals/goal-threads.json",
      "owner": "system",
      "schema": "",
      "route_type": "eager",
      "format": "json"
    },
    {
      "file": "goals/goal-timeline.json",
      "owner": "system",
      "schema": "",
      "route_type": "eager",
      "format": "json"
    },
    {
      "file": "governance/co-creation-protocol.json",
      "owner": "system",
      "schema": "",
      "route_type": "eager",
      "format": "json"
    },
    {
      "file": "governance/lifecycle-policy.json",
      "owner": "system",
      "schema": "",
      "route_type": "eager",
      "format": "json"
    },
    {
      "file": "governance/linting-rules.json",
      "owner": "system",
      "schema": "",
      "route_type": "eager",
      "format": "json"
    },
    {
      "file": "governance/trust-orchestration.json",
      "owner": "system",
      "schema": "",
      "route_type": "eager",
      "format": "json"
    },
    {
      "file": "governance/policies/marketplace-governance-v1.json",
      "owner": "system",
      "schema": "",
      "route_type": "eager",
      "format": "json"
    },
    {
      "file": "governance/policies/swarm-governance-v1.json",
      "owner": "system",
      "schema": "",
      "route_type": "eager",
      "format": "json"
    },
    {
      "file": "governance/policies/token-regeneration-v1.json",
      "owner": "system",
      "schema": "",
      "route_type": "eager",
      "format": "json"
    },
    {
      "file": "governance/rules/rule-agents-cannot-edit-pipeline-map.json",
      "owner": "system",
      "schema": "",
      "route_type": "eager",
      "format": "json"
    },
    {
      "file": "memory-bank/control-state.json",
      "owner": "system",
      "schema": "",
      "route_type": "eager",
      "format": "json"
    },
    {
      "file": "memory-bank/generated-checklist-tasks.json",
      "owner": "system",
      "schema": "",
      "route_type": "eager",
      "format": "json"
    },
    {
      "file": "memory-bank/index-context.md",
      "owner": "system",
      "schema": "",
      "route_type": "eager",
      "format": "markdown"
    },
    {
      "file": "memory-bank/index.json",
      "owner": "system",
      "schema": "",
      "route_type": "eager",
      "format": "json"
    },
    {
      "file": "memory-bank/memory-metadata.json",
      "owner": "system",
      "schema": "",
      "route_type": "eager",
      "format": "json"
    },
    {
      "file": "memory-bank/pattern-memory.json",
      "owner": "system",
      "schema": "",
      "route_type": "eager",
      "format": "json"
    },
    {
      "file": "memory-bank/upcoming-features.json",
      "owner": "system",
      "schema": "",
      "route_type": "eager",
      "format": "json"
    },
    {
      "file": "memory-bank/evolving/pending-tasks.json",
      "owner": "system",
      "schema": "",
      "route_type": "eager",
      "format": "json"
    },
    {
      "file": "memory-bank/fixed/phase-10-temporal.json",
      "owner": "system",
      "schema": "",
      "route_type": "eager",
      "format": "json"
    },
    {
      "file": "memory-bank/fixed/phase-8-self-evolving.json",
      "owner": "system",
      "schema": "",
      "route_type": "eager",
      "format": "json"
    },
    {
      "file": "memory-bank/fixed/phase-9-federation.json",
      "owner": "system",
      "schema": "",
      "route_type": "eager",
      "format": "json"
    },
    {
      "file": "meta/active-context.json",
      "owner": "system",
      "schema": "",
      "route_type": "eager",
      "format": "json"
    },
    {
      "file": "meta/file-router.json",
      "owner": "system",
      "schema": "",
      "route_type": "eager",
      "format": "json"
    },
    {
      "file": "meta/intent-register-snapshot-introspection.json",
      "owner": "system",
      "schema": "",
      "route_type": "eager",
      "format": "json"
    },
    {
      "file": "meta/intent.json",
      "owner": "system",
      "schema": "",
      "route_type": "eager",
      "format": "json"
    },
    {
      "file": "meta/routine-backlinks.json",
      "owner": "system",
      "schema": "",
      "route_type": "eager",
      "format": "json"
    },
    {
      "file": "meta/snapshot-introspection-manifest.json",
      "owner": "system",
      "schema": "",
      "route_type": "eager",
      "format": "json"
    },
    {
      "file": "meta/intents/regenerate-system-snapshot-intent.json",
      "owner": "system",
      "schema": "",
      "route_type": "eager",
      "format": "json"
    },
    {
      "file": "meta/trust/trust-index.json",
      "owner": "system",
      "schema": "",
      "route_type": "eager",
      "format": "json"
    },
    {
      "file": "pipelines/orchestrator-release-zip-pipeline.json",
      "owner": "orchestrator-agent",
      "schema": "",
      "route_type": "eager",
      "format": "json"
    },
    {
      "file": "plans/agent-collab-performance-fork.json",
      "owner": "planner-agent",
      "schema": "",
      "route_type": "eager",
      "format": "json"
    },
    {
      "file": "plans/agent-collab-plan.json",
      "owner": "planner-agent",
      "schema": "",
      "route_type": "eager",
      "format": "json"
    },
    {
      "file": "plans/intent-release-v0.24.0.json",
      "owner": "planner-agent",
      "schema": "",
      "route_type": "eager",
      "format": "json"
    },
    {
      "file": "plans/next-evolution-phase.json",
      "owner": "planner-agent",
      "schema": "",
      "route_type": "eager",
      "format": "json"
    },
    {
      "file": "plans/phase-10-routing-autonomy.json",
      "owner": "planner-agent",
      "schema": "",
      "route_type": "eager",
      "format": "json"
    },
    {
      "file": "plans/phase-11-swarm-memory-convergence.json",
      "owner": "planner-agent",
      "schema": "",
      "route_type": "eager",
      "format": "json"
    },
    {
      "file": "plans/phase-12-agent-market-economy.json",
      "owner": "planner-agent",
      "schema": "",
      "route_type": "eager",
      "format": "json"
    },
    {
      "file": "plans/phase-13-agent-challenges-and-reflection.json",
      "owner": "planner-agent",
      "schema": "",
      "route_type": "eager",
      "format": "json"
    },
    {
      "file": "plans/phase-14-memory-alignment-and-role-negotiation.json",
      "owner": "planner-agent",
      "schema": "",
      "route_type": "eager",
      "format": "json"
    },
    {
      "file": "plans/phase-9-system-evolution.json",
      "owner": "planner-agent",
      "schema": "",
      "route_type": "eager",
      "format": "json"
    },
    {
      "file": "plans/structured-plans.json",
      "owner": "planner-agent",
      "schema": "",
      "route_type": "eager",
      "format": "json"
    },
    {
      "file": "plans/agent-srp-cleanup/plan.json",
      "owner": "planner-agent",
      "schema": "",
      "route_type": "eager",
      "format": "json"
    },
    {
      "file": "plans/agent-srp-cleanup/tasks.json",
      "owner": "planner-agent",
      "schema": "",
      "route_type": "eager",
      "format": "json"
    },
    {
      "file": "plans/bootstrap/plan.json",
      "owner": "planner-agent",
      "schema": "",
      "route_type": "eager",
      "format": "json"
    },
    {
      "file": "plans/bootstrap/tasks.json",
      "owner": "planner-agent",
      "schema": "",
      "route_type": "eager",
      "format": "json"
    },
    {
      "file": "plans/extend-agent-abstractions/plan.json",
      "owner": "planner-agent",
      "schema": "",
      "route_type": "eager",
      "format": "json"
    },
    {
      "file": "plans/extend-agent-abstractions/tasks.json",
      "owner": "planner-agent",
      "schema": "",
      "route_type": "eager",
      "format": "json"
    },
    {
      "file": "plans/feature-audit/plan.json",
      "owner": "planner-agent",
      "schema": "",
      "route_type": "eager",
      "format": "json"
    },
    {
      "file": "plans/feature-audit/tasks.json",
      "owner": "planner-agent",
      "schema": "",
      "route_type": "eager",
      "format": "json"
    },
    {
      "file": "plans/final-audit-fix/plan.json",
      "owner": "planner-agent",
      "schema": "",
      "route_type": "eager",
      "format": "json"
    },
    {
      "file": "plans/final-audit-fix/tasks.json",
      "owner": "planner-agent",
      "schema": "",
      "route_type": "eager",
      "format": "json"
    },
    {
      "file": "plans/fine-tune/plan.json",
      "owner": "planner-agent",
      "schema": "",
      "route_type": "eager",
      "format": "json"
    },
    {
      "file": "plans/fine-tune/tasks.json",
      "owner": "planner-agent",
      "schema": "",
      "route_type": "eager",
      "format": "json"
    },
    {
      "file": "plans/fix-content/plan.json",
      "owner": "planner-agent",
      "schema": "",
      "route_type": "eager",
      "format": "json"
    },
    {
      "file": "plans/fix-content/tasks.json",
      "owner": "planner-agent",
      "schema": "",
      "route_type": "eager",
      "format": "json"
    },
    {
      "file": "plans/onboarding-agent-bootstrap/plan.json",
      "owner": "planner-agent",
      "schema": "",
      "route_type": "eager",
      "format": "json"
    },
    {
      "file": "plans/onboarding-agent-bootstrap/tasks.json",
      "owner": "planner-agent",
      "schema": "",
      "route_type": "eager",
      "format": "json"
    },
    {
      "file": "plans/onboarding-refinement-patch/plan.json",
      "owner": "planner-agent",
      "schema": "",
      "route_type": "eager",
      "format": "json"
    },
    {
      "file": "plans/onboarding-refinement-patch/tasks.json",
      "owner": "planner-agent",
      "schema": "",
      "route_type": "eager",
      "format": "json"
    },
    {
      "file": "plans/org-knowledge-agent-bootstrap/plan.json",
      "owner": "planner-agent",
      "schema": "",
      "route_type": "eager",
      "format": "json"
    },
    {
      "file": "plans/org-knowledge-agent-bootstrap/tasks.json",
      "owner": "planner-agent",
      "schema": "",
      "route_type": "eager",
      "format": "json"
    },
    {
      "file": "plans/phase-11/swarm-routines-proposed.json",
      "owner": "planner-agent",
      "schema": "",
      "route_type": "eager",
      "format": "json"
    },
    {
      "file": "plans/phase-13/challenges/reflection-race-001.json",
      "owner": "planner-agent",
      "schema": "",
      "route_type": "eager",
      "format": "json"
    },
    {
      "file": "plans/phase-15/prep-plan-autonomous-consistency-and-indexing.json",
      "owner": "planner-agent",
      "schema": "",
      "route_type": "eager",
      "format": "json"
    },
    {
      "file": "plans/reuse-corrida-elements/plan.json",
      "owner": "planner-agent",
      "schema": "",
      "route_type": "eager",
      "format": "json"
    },
    {
      "file": "plans/reuse-corrida-elements/tasks.json",
      "owner": "planner-agent",
      "schema": "",
      "route_type": "eager",
      "format": "json"
    },
    {
      "file": "plans/root-collaboration-bootstrap/plan.json",
      "owner": "planner-agent",
      "schema": "",
      "route_type": "eager",
      "format": "json"
    },
    {
      "file": "plans/root-collaboration-bootstrap/tasks.json",
      "owner": "planner-agent",
      "schema": "",
      "route_type": "eager",
      "format": "json"
    },
    {
      "file": "plans/self-evolve/retrospective-insights.json",
      "owner": "planner-agent",
      "schema": "",
      "route_type": "eager",
      "format": "json"
    },
    {
      "file": "plans/self-evolving/plan.json",
      "owner": "planner-agent",
      "schema": "",
      "route_type": "eager",
      "format": "json"
    },
    {
      "file": "plans/self-evolving/tasks.json",
      "owner": "planner-agent",
      "schema": "",
      "route_type": "eager",
      "format": "json"
    },
    {
      "file": "plans/system-resilience/plan.json",
      "owner": "planner-agent",
      "schema": "",
      "route_type": "eager",
      "format": "json"
    },
    {
      "file": "plans/system-resilience/planner-goals-extension.json",
      "owner": "planner-agent",
      "schema": "",
      "route_type": "eager",
      "format": "json"
    },
    {
      "file": "plans/system-resilience/resilience-upgrade-plan-v1.json",
      "owner": "planner-agent",
      "schema": "",
      "route_type": "eager",
      "format": "json"
    },
    {
      "file": "plans/system-resilience/tasks.json",
      "owner": "planner-agent",
      "schema": "",
      "route_type": "eager",
      "format": "json"
    },
    {
      "file": "plans/system-upgrade/agent-review-upgrade-plan-v1.json",
      "owner": "planner-agent",
      "schema": "",
      "route_type": "eager",
      "format": "json"
    },
    {
      "file": "plans/template-pipeline-library/context-compression-pipeline.json",
      "owner": "planner-agent",
      "schema": "",
      "route_type": "eager",
      "format": "json"
    },
    {
      "file": "plans/template-pipeline-library/conversation-to-pipeline.json",
      "owner": "planner-agent",
      "schema": "",
      "route_type": "eager",
      "format": "json"
    },
    {
      "file": "plans/template-pipeline-library/ethics-audit-pipeline.json",
      "owner": "planner-agent",
      "schema": "",
      "route_type": "eager",
      "format": "json"
    },
    {
      "file": "plans/template-pipeline-library/fallback-resolution-pipeline.json",
      "owner": "planner-agent",
      "schema": "",
      "route_type": "eager",
      "format": "json"
    },
    {
      "file": "plans/template-pipeline-library/file-content-schema-audit-pipeline.json",
      "owner": "planner-agent",
      "schema": "",
      "route_type": "eager",
      "format": "json"
    },
    {
      "file": "plans/template-pipeline-library/plan-retrospective-pipeline.json",
      "owner": "planner-agent",
      "schema": "",
      "route_type": "eager",
      "format": "json"
    },
    {
      "file": "plans/template-pipeline-library/routine-gap-detection-pipeline.json",
      "owner": "planner-agent",
      "schema": "",
      "route_type": "eager",
      "format": "json"
    },
    {
      "file": "plans/template-pipeline-library/snapshot-sync-pipeline.json",
      "owner": "planner-agent",
      "schema": "",
      "route_type": "eager",
      "format": "json"
    },
    {
      "file": "plans/template-pipeline-library/suggest-checklist-and-identity-updates-during-session.json",
      "owner": "planner-agent",
      "schema": "",
      "route_type": "eager",
      "format": "json"
    },
    {
      "file": "plans/v0.26.0/task-followups-from-roadmap.json",
      "owner": "planner-agent",
      "schema": "",
      "route_type": "eager",
      "format": "json"
    },
    {
      "file": "routing/pipeline-playground.md",
      "owner": "system",
      "schema": "",
      "route_type": "eager",
      "format": "markdown"
    },
    {
      "file": "routing/routing-rules.json",
      "owner": "system",
      "schema": "",
      "route_type": "eager",
      "format": "json"
    },
    {
      "file": "schemas/agent-challenge.schema.json",
      "owner": "system",
      "schema": "",
      "route_type": "eager",
      "format": "json"
    },
    {
      "file": "schemas/agent-evolution-score.json",
      "owner": "system",
      "schema": "",
      "route_type": "eager",
      "format": "json"
    },
    {
      "file": "schemas/agent-marketplace.schema.json",
      "owner": "system",
      "schema": "",
      "route_type": "eager",
      "format": "json"
    },
    {
      "file": "schemas/canonical-agent-instances.json",
      "owner": "system",
      "schema": "",
      "route_type": "eager",
      "format": "json"
    },
    {
      "file": "schemas/canonical-agent-model-metadata.json",
      "owner": "system",
      "schema": "",
      "route_type": "eager",
      "format": "json"
    },
    {
      "file": "schemas/canonical-agent-model.json",
      "owner": "system",
      "schema": "",
      "route_type": "eager",
      "format": "json"
    },
    {
      "file": "schemas/config-schema-vNext.json",
      "owner": "system",
      "schema": "",
      "route_type": "eager",
      "format": "json"
    },
    {
      "file": "schemas/context-router.schema-lifecycle.json",
      "owner": "system",
      "schema": "",
      "route_type": "eager",
      "format": "json"
    },
    {
      "file": "schemas/context-router.schema-metadata.json",
      "owner": "system",
      "schema": "",
      "route_type": "eager",
      "format": "json"
    },
    {
      "file": "schemas/context-router.schema.json",
      "owner": "system",
      "schema": "",
      "route_type": "eager",
      "format": "json"
    },
    {
      "file": "schemas/debate-vote.json",
      "owner": "system",
      "schema": "",
      "route_type": "eager",
      "format": "json"
    },
    {
      "file": "schemas/dynamic-agent-routing.schema.json",
      "owner": "system",
      "schema": "",
      "route_type": "eager",
      "format": "json"
    },
    {
      "file": "schemas/feature.schema-lifecycle.json",
      "owner": "system",
      "schema": "",
      "route_type": "eager",
      "format": "json"
    },
    {
      "file": "schemas/feature.schema-metadata.json",
      "owner": "system",
      "schema": "",
      "route_type": "eager",
      "format": "json"
    },
    {
      "file": "schemas/feature.schema.json",
      "owner": "system",
      "schema": "",
      "route_type": "eager",
      "format": "json"
    },
    {
      "file": "schemas/forkable-plan.json",
      "owner": "system",
      "schema": "forkable-plan.json",
      "route_type": "eager",
      "format": "json"
    },
    {
      "file": "schemas/lifecycle-metadata.json",
      "owner": "system",
      "schema": "",
      "route_type": "eager",
      "format": "json"
    },
    {
      "file": "schemas/memory-fusion.schema.json",
      "owner": "system",
      "schema": "",
      "route_type": "eager",
      "format": "json"
    },
    {
      "file": "schemas/memory.schema.json",
      "owner": "system",
      "schema": "",
      "route_type": "eager",
      "format": "json"
    },
    {
      "file": "schemas/pipeline.schema-lifecycle.json",
      "owner": "system",
      "schema": "",
      "route_type": "eager",
      "format": "json"
    },
    {
      "file": "schemas/pipeline.schema-metadata.json",
      "owner": "system",
      "schema": "",
      "route_type": "eager",
      "format": "json"
    },
    {
      "file": "schemas/pipeline.schema.json",
      "owner": "system",
      "schema": "pipeline.schema.json",
      "route_type": "eager",
      "format": "json"
    },
    {
      "file": "schemas/routine-manifest.schema-lifecycle.json",
      "owner": "system",
      "schema": "",
      "route_type": "eager",
      "format": "json"
    },
    {
      "file": "schemas/routine-manifest.schema-metadata.json",
      "owner": "system",
      "schema": "",
      "route_type": "eager",
      "format": "json"
    },
    {
      "file": "schemas/routine-manifest.schema.json",
      "owner": "system",
      "schema": "",
      "route_type": "eager",
      "format": "json"
    },
    {
      "file": "schemas/routing-rules-schema.json",
      "owner": "system",
      "schema": "",
      "route_type": "eager",
      "format": "json"
    },
    {
      "file": "schemas/schema-config.json",
      "owner": "system",
      "schema": "",
      "route_type": "eager",
      "format": "json"
    },
    {
      "file": "schemas/schema-index-lifecycle.json",
      "owner": "system",
      "schema": "",
      "route_type": "eager",
      "format": "json"
    },
    {
      "file": "schemas/schema-index.json",
      "owner": "system",
      "schema": "",
      "route_type": "eager",
      "format": "json"
    },
    {
      "file": "schemas/schema-index.repaired.json",
      "owner": "system",
      "schema": "",
      "route_type": "eager",
      "format": "json"
    },
    {
      "file": "schemas/schema-metadata-metadata.json",
      "owner": "system",
      "schema": "",
      "route_type": "eager",
      "format": "json"
    },
    {
      "file": "schemas/schema-metadata.json",
      "owner": "system",
      "schema": "",
      "route_type": "eager",
      "format": "json"
    },
    {
      "file": "schemas/schema-version-tracker-lifecycle.json",
      "owner": "system",
      "schema": "",
      "route_type": "eager",
      "format": "json"
    },
    {
      "file": "schemas/schema-version-tracker.json",
      "owner": "system",
      "schema": "",
      "route_type": "eager",
      "format": "json"
    },
    {
      "file": "schemas/synthesized-memory-index.json",
      "owner": "system",
      "schema": "",
      "route_type": "eager",
      "format": "json"
    },
    {
      "file": "schemas/version-history.json",
      "owner": "system",
      "schema": "",
      "route_type": "eager",
      "format": "json"
    },
    {
      "file": "snapshots/active-pipeline-manifest-v0.1.0.json",
      "owner": "system",
      "schema": "",
      "route_type": "eager",
      "format": "json"
    },
    {
      "file": "snapshots/orchestration-bundle-v0.1.0.json",
      "owner": "system",
      "schema": "",
      "route_type": "eager",
      "format": "json"
    },
    {
      "file": "snapshots/patched-config-state.json",
      "owner": "system",
      "schema": "",
      "route_type": "eager",
      "format": "json"
    },
    {
      "file": "snapshots/task-graph-v0.1.0.json",
      "owner": "system",
      "schema": "",
      "route_type": "eager",
      "format": "json"
    },
    {
      "file": "synthesized/synth_agents.json",
      "owner": "system",
      "schema": "",
      "route_type": "eager",
      "format": "json"
    },
    {
      "file": "synthesized/synth_feedback.json",
      "owner": "system",
      "schema": "",
      "route_type": "eager",
      "format": "json"
    },
    {
      "file": "synthesized/synth_governance.json",
      "owner": "system",
      "schema": "",
      "route_type": "eager",
      "format": "json"
    },
    {
      "file": "synthesized/synth_memory_bank.json",
      "owner": "system",
      "schema": "",
      "route_type": "eager",
      "format": "json"
    },
    {
      "file": "synthesized/synth_task_graphs.json",
      "owner": "system",
      "schema": "",
      "route_type": "eager",
      "format": "json"
    },
    {
      "file": "plans/bootstrap/coldstart-bootstrap-pipeline.json",
      "owner": "planner-agent",
      "schema": "",
      "route_type": "eager",
      "format": "json"
    },
    {
      "file": "core/tasks/task-generate-coldstart-snapshot.json",
      "owner": "tasking-agent",
      "schema": "",
      "route_type": "eager",
      "format": "json"
    },
    {
      "file": "core/tasks/task-compare-snapshot-with-live-files.json",
      "owner": "tasking-agent",
      "schema": "",
      "route_type": "eager",
      "format": "json"
    },
    {
      "file": "core/tasks/task-generate-canonical-manifest.json",
      "owner": "tasking-agent",
      "schema": "",
      "route_type": "eager",
      "format": "json"
    },
    {
      "file": "docs/coldstart.md",
      "owner": "system",
      "schema": "",
      "route_type": "lazy",
      "format": "markdown"
    }
  ]
}